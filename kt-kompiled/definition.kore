[topCellInitializer{}(LblinitGeneratedTopCell{}())]

module BASIC-K
  sort SortK{} []
  sort SortKItem{} []
endmodule []

module KSEQ
  import BASIC-K []

  // TODO: Provide constructor and functional axioms for `kseq` and `dotk`.
  symbol kseq{}(SortKItem{}, SortK{}) : SortK{} [constructor{}(),functional{}()]
  symbol dotk{}() : SortK{} [constructor{}(),functional{}()]

  symbol append{}(SortK{}, SortK{}) : SortK{} [function{}()]

  axiom{R}
    \equals{SortK{},R}(
      append{}(dotk{}(),K2:SortK{}),
      K2:SortK{})
  []

  axiom{R}
    \equals{SortK{},R}(
      append{}(kseq{}(K1:SortKItem{},K2:SortK{}),K3:SortK{}),
      kseq{}(K1:SortKItem{},append{}(K2:SortK{},K3:SortK{})))
  []

endmodule []

module INJ
  symbol inj{From,To}(From) : To [sortInjection{}()]

  axiom{S1,S2,S3,R}
    \equals{S3,R}(
      inj{S2,S3}(inj{S1,S2}(T:S1)),
      inj{S1,S3}(T:S1))
  []

endmodule []

module K
  import KSEQ []
  import INJ []

  // Defnitions for reachability aliases
  // Until we will have `mu` we resort to dummy definitions
  alias weakExistsFinally{A}(A) : A
  where weakExistsFinally{A}(@X:A) := @X:A []

  alias weakAlwaysFinally{A}(A) : A
  where weakAlwaysFinally{A}(@X:A) := @X:A []

  // Definitions for CTL aliases
  // Until we will have `mu` we resort to dummy definitions
  alias allPathGlobally{A}(A) : A
  where allPathGlobally{A}(@X:A) := @X:A []

endmodule []

module KT

// imports
  import K []

// sorts
  sort SortStoreCellOpt{} []
  sort SortTCellFragment{} []
  sort SortIdCell{} []
  sort SortForEachStmt{} []
  hooked-sort SortThreadCellMap{} [hook{}("MAP.Map"), element{}(LblThreadCellMapItem{}()), concat{}(Lbl'Unds'ThreadCellMap'Unds'{}()), unit{}(Lbl'Stop'ThreadCellMap{}())]
  sort SortValueType{} []
  sort SortStoreCell{} []
  sort SortKCellOpt{} []
  sort SortEnvCell{} []
  sort SortLocalEnvCell{} []
  sort SortTempCellOpt{} []
  sort SortForStmt{} []
  sort SortFun{} []
  sort SortKVariable{} []
  sort SortFuncCall{} []
  sort SortVarType{} []
  sort SortThreadCell{} []
  sort SortIOInt{} []
  sort SortLocCellOpt{} []
  sort SortDoWhileStmt{} []
  sort SortFunctionsCellOpt{} []
  sort SortGeneratedTopCellFragment{} []
  sort SortIOFile{} []
  hooked-sort SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), element{}(LblListItem{}()), concat{}(Lbl'Unds'List'Unds'{}()), unit{}(Lbl'Stop'List{}()), hook{}("LIST.List"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(227,3,227,31)")]
  sort SortLocalEnvCellOpt{} []
  sort SortLocal{} []
  sort SortSkip{} []
  sort SortIdExp{} []
  sort SortWhileStmt{} []
  sort SortKCell{} []
  sort SortIfStmt{} []
  sort SortOutCell{} []
  sort SortEnvCellOpt{} []
  sort SortGeneratedTopCell{} []
  sort SortGeneratedCounterCell{} []
  sort SortFunctionsCell{} []
  hooked-sort SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(483,3,483,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), hook{}("FLOAT.Float"), hasDomainValues{}()]
  sort SortFuncDec{} []
  sort SortScopeCellOpt{} []
  sort SortTCellOpt{} []
  sort SortAExp{} []
  hooked-sort SortMap{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), element{}(Lbl'UndsPipe'-'-GT-Unds'{}()), concat{}(Lbl'Unds'Map'Unds'{}()), unit{}(Lbl'Stop'Map{}()), hook{}("MAP.Map"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(97,3,97,28)")]
  hooked-sort SortString{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(564,3,564,37)"), hook{}("STRING.String"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), hasDomainValues{}()]
  sort SortIOString{} []
  sort SortId{} [token{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(826,3,826,19)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), hasDomainValues{}()]
  sort SortBlock{} []
  sort SortGeneratedCounterCellOpt{} []
  sort SortStringList{} []
  sort SortIdCellOpt{} []
  sort SortKConfigVar{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,3,12,27)"), token{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/kast.k)"), hasDomainValues{}()]
  sort SortElseIfStmt{} []
  sort SortScopeCell{} []
  sort SortBExp{} []
  hooked-sort SortInt{} [hook{}("INT.Int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(357,3,357,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), hasDomainValues{}()]
  sort SortIOError{} []
  hooked-sort SortSet{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), element{}(LblSetItem{}()), concat{}(Lbl'Unds'Set'Unds'{}()), unit{}(Lbl'Stop'Set{}()), hook{}("SET.Set"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(189,3,189,28)")]
  sort SortIdList{} []
  sort SortArrayList{} []
  sort SortFunctionsCellFragment{} []
  sort SortOutCellOpt{} []
  sort SortAExpMod{} []
  sort SortParamsCell{} []
  sort SortLocCell{} []
  sort SortIdAssigner{} []
  sort SortVarDeclaration{} []
  sort SortThreadCellFragment{} []
  sort SortKResult{} []
  sort SortPrint{} []
  sort SortTempCell{} []
  sort SortStream{} []
  sort SortCell{} []
  sort SortTCell{} []
  sort SortVarMod{} []
  sort SortIntList{} []
  sort SortStmt{} []
  hooked-sort SortBool{} [hook{}("BOOL.Bool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(301,3,301,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), hasDomainValues{}()]
  sort SortParams{} []
  sort SortAssigner{} []
  sort SortParamsCellOpt{} []

// symbols
  symbol Lbl'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp{}(SortBExp{}) : SortBExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(100,19,100,44)"), injective{}(), seqstrict{}()]
  symbol Lbl'Hash'E2BIG{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#E2BIG"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(908,22,908,54)"), injective{}()]
  symbol Lbl'Hash'EACCES{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EACCES"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(909,22,909,56)"), injective{}()]
  symbol Lbl'Hash'EADDRINUSE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EADDRINUSE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(958,22,958,64)"), injective{}()]
  symbol Lbl'Hash'EADDRNOTAVAIL{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EADDRNOTAVAIL"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(959,22,959,70)"), injective{}()]
  symbol Lbl'Hash'EAFNOSUPPORT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EAFNOSUPPORT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(957,22,957,68)"), injective{}()]
  symbol Lbl'Hash'EAGAIN{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EAGAIN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(910,22,910,56)"), injective{}()]
  symbol Lbl'Hash'EALREADY{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EALREADY"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(947,22,947,60)"), injective{}()]
  symbol Lbl'Hash'EBADF{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EBADF"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(911,22,911,54)"), injective{}()]
  symbol Lbl'Hash'EBUSY{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EBUSY"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(912,22,912,54)"), injective{}()]
  symbol Lbl'Hash'ECHILD{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ECHILD"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(913,22,913,56)"), injective{}()]
  symbol Lbl'Hash'ECONNABORTED{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ECONNABORTED"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(963,22,963,68)"), injective{}()]
  symbol Lbl'Hash'ECONNREFUSED{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ECONNREFUSED"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(971,22,971,68)"), injective{}()]
  symbol Lbl'Hash'ECONNRESET{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ECONNRESET"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(964,22,964,64)"), injective{}()]
  symbol Lbl'Hash'EDEADLK{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EDEADLK"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(914,22,914,58)"), injective{}()]
  symbol Lbl'Hash'EDESTADDRREQ{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EDESTADDRREQ"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(949,22,949,68)"), injective{}()]
  symbol Lbl'Hash'EDOM{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EDOM"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(915,22,915,52)"), injective{}()]
  symbol Lbl'Hash'EEXIST{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EEXIST"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(916,22,916,56)"), injective{}()]
  symbol Lbl'Hash'EFAULT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EFAULT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(917,22,917,56)"), injective{}()]
  symbol Lbl'Hash'EFBIG{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EFBIG"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(918,22,918,54)"), injective{}()]
  symbol Lbl'Hash'EHOSTDOWN{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EHOSTDOWN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(972,22,972,62)"), injective{}()]
  symbol Lbl'Hash'EHOSTUNREACH{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EHOSTUNREACH"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(973,22,973,68)"), injective{}()]
  symbol Lbl'Hash'EINPROGRESS{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EINPROGRESS"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(946,22,946,66)"), injective{}()]
  symbol Lbl'Hash'EINTR{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EINTR"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(919,22,919,54)"), injective{}()]
  symbol Lbl'Hash'EINVAL{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EINVAL"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(920,22,920,56)"), injective{}()]
  symbol Lbl'Hash'EIO{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EIO"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(921,22,921,50)"), injective{}()]
  symbol Lbl'Hash'EISCONN{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EISCONN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(966,22,966,58)"), injective{}()]
  symbol Lbl'Hash'EISDIR{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EISDIR"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(922,22,922,56)"), injective{}()]
  symbol Lbl'Hash'ELOOP{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ELOOP"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(974,22,974,54)"), injective{}()]
  symbol Lbl'Hash'EMFILE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EMFILE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(923,22,923,56)"), injective{}()]
  symbol Lbl'Hash'EMLINK{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EMLINK"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(924,22,924,56)"), injective{}()]
  symbol Lbl'Hash'EMSGSIZE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EMSGSIZE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(950,22,950,60)"), injective{}()]
  symbol Lbl'Hash'ENAMETOOLONG{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENAMETOOLONG"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(925,22,925,68)"), injective{}()]
  symbol Lbl'Hash'ENETDOWN{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENETDOWN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(960,22,960,60)"), injective{}()]
  symbol Lbl'Hash'ENETRESET{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENETRESET"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(962,22,962,62)"), injective{}()]
  symbol Lbl'Hash'ENETUNREACH{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENETUNREACH"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(961,22,961,66)"), injective{}()]
  symbol Lbl'Hash'ENFILE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENFILE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(926,22,926,56)"), injective{}()]
  symbol Lbl'Hash'ENOBUFS{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOBUFS"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(965,22,965,58)"), injective{}()]
  symbol Lbl'Hash'ENODEV{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENODEV"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(927,22,927,56)"), injective{}()]
  symbol Lbl'Hash'ENOENT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOENT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(928,22,928,56)"), injective{}()]
  symbol Lbl'Hash'ENOEXEC{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOEXEC"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(929,22,929,58)"), injective{}()]
  symbol Lbl'Hash'ENOLCK{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOLCK"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(930,22,930,56)"), injective{}()]
  symbol Lbl'Hash'ENOMEM{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOMEM"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(931,22,931,56)"), injective{}()]
  symbol Lbl'Hash'ENOPROTOOPT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOPROTOOPT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(952,22,952,66)"), injective{}()]
  symbol Lbl'Hash'ENOSPC{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOSPC"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(932,22,932,56)"), injective{}()]
  symbol Lbl'Hash'ENOSYS{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOSYS"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(933,22,933,56)"), injective{}()]
  symbol Lbl'Hash'ENOTCONN{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOTCONN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(967,22,967,60)"), injective{}()]
  symbol Lbl'Hash'ENOTDIR{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOTDIR"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(934,22,934,58)"), injective{}()]
  symbol Lbl'Hash'ENOTEMPTY{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOTEMPTY"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(935,22,935,62)"), injective{}()]
  symbol Lbl'Hash'ENOTSOCK{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOTSOCK"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(948,22,948,60)"), injective{}()]
  symbol Lbl'Hash'ENOTTY{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOTTY"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(936,22,936,56)"), injective{}()]
  symbol Lbl'Hash'ENXIO{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENXIO"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(937,22,937,54)"), injective{}()]
  symbol Lbl'Hash'EOF{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EOF"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(907,22,907,50)"), injective{}()]
  symbol Lbl'Hash'EOPNOTSUPP{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EOPNOTSUPP"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(955,22,955,64)"), injective{}()]
  symbol Lbl'Hash'EOVERFLOW{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EOVERFLOW"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(975,22,975,62)"), injective{}()]
  symbol Lbl'Hash'EPERM{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EPERM"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(938,22,938,54)"), injective{}()]
  symbol Lbl'Hash'EPFNOSUPPORT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EPFNOSUPPORT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(956,22,956,68)"), injective{}()]
  symbol Lbl'Hash'EPIPE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EPIPE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(939,22,939,54)"), injective{}()]
  symbol Lbl'Hash'EPROTONOSUPPORT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EPROTONOSUPPORT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(953,22,953,74)"), injective{}()]
  symbol Lbl'Hash'EPROTOTYPE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EPROTOTYPE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(951,22,951,64)"), injective{}()]
  symbol Lbl'Hash'ERANGE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ERANGE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(940,22,940,56)"), injective{}()]
  symbol Lbl'Hash'EROFS{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EROFS"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(941,22,941,54)"), injective{}()]
  symbol Lbl'Hash'ESHUTDOWN{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ESHUTDOWN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(968,22,968,62)"), injective{}()]
  symbol Lbl'Hash'ESOCKTNOSUPPORT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ESOCKTNOSUPPORT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(954,22,954,74)"), injective{}()]
  symbol Lbl'Hash'ESPIPE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ESPIPE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(942,22,942,56)"), injective{}()]
  symbol Lbl'Hash'ESRCH{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ESRCH"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(943,22,943,54)"), injective{}()]
  symbol Lbl'Hash'ETIMEDOUT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ETIMEDOUT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(970,22,970,62)"), injective{}()]
  symbol Lbl'Hash'ETOOMANYREFS{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ETOOMANYREFS"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(969,22,969,68)"), injective{}()]
  symbol Lbl'Hash'EWOULDBLOCK{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EWOULDBLOCK"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(945,22,945,66)"), injective{}()]
  symbol Lbl'Hash'EXDEV{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EXDEV"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(944,22,944,54)"), injective{}()]
  hooked-symbol Lbl'Hash'accept'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(SortInt{}) : SortIOInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.accept"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(984,18,984,78)"), function{}()]
  hooked-symbol Lbl'Hash'argv'LParRParUnds'K-REFLECTION'Unds'List{}() : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("#argv"), hook{}("KREFLECTION.argv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(881,19,881,60)"), function{}()]
  symbol Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(SortK{}) : SortStream{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("#buffer"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1012,21,1012,30)"), injective{}()]
  hooked-symbol Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.close"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(987,16,987,74)"), function{}()]
  hooked-symbol Lbl'Hash'configuration'Unds'K-REFLECTION'Unds'K{}() : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), impure{}(), hook{}("KREFLECTION.configuration"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(872,16,872,83)"), function{}()]
  symbol Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}() : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(SortK{}, SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  symbol Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), functional{}(), injective{}()]
  hooked-symbol Lbl'Hash'fresh'LParUndsRParUnds'K-REFLECTION'Unds'KItem'Unds'String{}(SortString{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), impure{}(), klabel{}("#fresh"), hook{}("KREFLECTION.fresh"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(874,20,874,79)"), function{}()]
  hooked-symbol Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(SortInt{}) : SortIOInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.getc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(983,18,983,86)"), function{}()]
  hooked-symbol Lbl'Hash'getenv'LParUndsRParUnds'K-REFLECTION'Unds'String'Unds'String{}(SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), impure{}(), klabel{}("#getenv"), hook{}("KREFLECTION.getenv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(877,21,877,80)"), function{}()]
  hooked-symbol Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(SortBool{}, SortSort, SortSort) : SortSort [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), smt-hook{}("ite"), hook{}("KEQUAL.ite"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(860,26,860,125)"), function{}()]
  hooked-symbol Lbl'Hash'lock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.lock"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(992,16,992,90)"), function{}()]
  hooked-symbol Lbl'Hash'logToFile{}(SortString{}, SortString{}) : SortK{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), returnsUnit{}(), symbol'Kywd'{}(), impure{}(), klabel{}("#logToFile"), hook{}("IO.log"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1022,16,1022,120)"), function{}()]
  hooked-symbol Lbl'Hash'lstat'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String{}(SortString{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.lstat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(997,20,997,77)"), function{}()]
  hooked-symbol Lbl'Hash'mkstemp'LParUndsRParUnds'K-IO'Unds'IOFile'Unds'String{}(SortString{}) : SortIOFile{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), impure{}(), klabel{}("#mkstemp"), hook{}("IO.mkstemp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1024,21,1024,83)"), function{}()]
  symbol Lbl'Hash'noParse{}(SortString{}) : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#noParse"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(886,22,886,73)"), injective{}()]
  symbol Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String{}(SortString{}) : SortIOInt{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(980,20,980,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortIOInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.open"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(981,18,981,96)"), function{}()]
  hooked-symbol Lbl'Hash'opendir'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String{}(SortString{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.opendir"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(998,20,998,81)"), function{}()]
  hooked-symbol Lbl'Hash'parseKAST'LParUndsRParUnds'K-REFLECTION'Unds'Sort'Unds'String{SortSort}(SortString{}) : SortSort [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("#parseKAST"), hook{}("KREFLECTION.parseKAST"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(885,26,885,83)"), function{}()]
  hooked-symbol Lbl'Hash'parseKORE'LParUndsRParUnds'K-REFLECTION'Unds'Sort'Unds'String{SortSort}(SortString{}) : SortSort [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("#parseKORE"), hook{}("KREFLECTION.parseKORE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(884,26,884,83)"), function{}()]
  hooked-symbol Lbl'Hash'putc'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.putc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(990,16,990,92)"), function{}()]
  hooked-symbol Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortIOString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.read"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(985,23,985,98)"), function{}()]
  hooked-symbol Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String{}(SortString{}) : SortK{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), impure{}(), klabel{}("#remove"), hook{}("IO.remove"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1028,16,1028,84)"), function{}()]
  hooked-symbol Lbl'Hash'seek'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.seek"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(988,16,988,87)"), function{}()]
  hooked-symbol Lbl'Hash'seekEnd'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.seekEnd"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(989,16,989,95)"), function{}()]
  hooked-symbol Lbl'Hash'shutdownWrite'LParUndsRParUnds'K-IO'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.shutdownWrite"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(994,16,994,90)"), function{}()]
  hooked-symbol Lbl'Hash'sort'LParUndsRParUnds'K-REFLECTION'Unds'String'Unds'K{}(SortK{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("#sort"), hook{}("KREFLECTION.sort"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(873,21,873,63)"), function{}()]
  hooked-symbol Lbl'Hash'stat'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String{}(SortString{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.stat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(996,20,996,75)"), function{}()]
  symbol Lbl'Hash'stderr'Unds'K-IO'Unds'Int{}() : SortInt{} [functional{}(), function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1006,19,1006,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)")]
  symbol Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}() : SortInt{} [functional{}(), function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1004,18,1004,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)")]
  symbol Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}() : SortInt{} [functional{}(), function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1005,19,1005,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'Hash'system'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String{}(SortString{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), impure{}(), klabel{}("#system"), hook{}("IO.system"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1019,20,1019,73)"), function{}()]
  symbol Lbl'Hash'systemResult{}(SortInt{}, SortString{}, SortString{}) : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#systemResult"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1020,20,1020,142)"), injective{}()]
  hooked-symbol Lbl'Hash'tell'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(SortInt{}) : SortIOInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.tell"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(982,18,982,74)"), function{}()]
  symbol Lbl'Hash'tempFile{}(SortString{}, SortInt{}) : SortIOFile{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#tempFile"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1026,21,1026,92)"), injective{}()]
  hooked-symbol Lbl'Hash'time'LParRParUnds'K-IO'Unds'Int{}() : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.time"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1000,18,1000,66)"), function{}()]
  symbol Lbl'Hash'unknownIOError{}(SortInt{}) : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#unknownIOError"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(907,54,907,89)"), injective{}()]
  hooked-symbol Lbl'Hash'unlock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.unlock"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(993,16,993,94)"), function{}()]
  hooked-symbol Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String{}(SortInt{}, SortString{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.write"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(991,16,991,92)"), function{}()]
  hooked-symbol Lbl'Stop'List{}() : SortList{} [latex{}("\\dotCt{List}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), smtlib{}("smt_seq_nil"), klabel{}(".List"), hook{}("LIST.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(262,19,262,146)"), function{}()]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList'QuotRBraUnds'IdList{}() : SortIdList{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), klabel{}(".List{\"_,__KT-SYNTAX\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,23,49,35)"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IntList'Unds'Int'Unds'IntList'QuotRBraUnds'IntList{}() : SortIntList{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), klabel{}(".List{\"_,__KT-SYNTAX\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(50,24,50,37)"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'Params'Unds'Id'Unds'Params'QuotRBraUnds'Params{}() : SortParams{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), klabel{}(".List{\"_,__KT-SYNTAX\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,23,28,35)"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'StringList'Unds'String'Unds'StringList'QuotRBraUnds'StringList{}() : SortStringList{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), klabel{}(".List{\"_,__KT-SYNTAX\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(51,27,51,43)"), injective{}()]
  hooked-symbol Lbl'Stop'Map{}() : SortMap{} [latex{}("\\dotCt{Map}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}(".Map"), hook{}("MAP.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(107,18,107,128)"), function{}()]
  hooked-symbol Lbl'Stop'Set{}() : SortSet{} [latex{}("\\dotCt{Set}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}(".Set"), hook{}("SET.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(197,18,197,122)"), function{}()]
  hooked-symbol Lbl'Stop'ThreadCellMap{}() : SortThreadCellMap{} [hook{}("MAP.unit"), function{}()]
  symbol Lbl'-LT-'T'-GT-'{}(SortKCell{}, SortOutCell{}, SortFunctionsCell{}, SortEnvCell{}, SortStoreCell{}, SortLocCell{}) : SortTCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cellName{}("T"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("552"), contentStartColumn{}("19"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(552,19,568,9)"), format{}("%1%i%n%2%n%3%n%4%n%5%n%6%n%7%d%n%8"), injective{}(), cell{}(), topcell{}()]
  symbol Lbl'-LT-'T'-GT-'-fragment{}(SortKCellOpt{}, SortOutCellOpt{}, SortFunctionsCellOpt{}, SortEnvCellOpt{}, SortStoreCellOpt{}, SortLocCellOpt{}) : SortTCellFragment{} [cellFragment{}("TCell"), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'env'-GT-'{}(SortMap{}) : SortEnvCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cellName{}("env"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("552"), contentStartColumn{}("19"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(552,19,568,9)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'functions'-GT-'{}(SortThreadCellMap{}) : SortFunctionsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), color{}("orange"), cellName{}("functions"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("552"), contentStartColumn{}("19"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(552,19,568,9)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'functions'-GT-'-fragment{}(SortThreadCellMap{}) : SortFunctionsCellFragment{} [cellFragment{}("FunctionsCell"), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'generatedCounter'-GT-'{}(SortInt{}) : SortGeneratedCounterCell{} [functional{}(), constructor{}(), cellName{}("generatedCounter"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'generatedTop'-GT-'{}(SortTCell{}, SortGeneratedCounterCell{}) : SortGeneratedTopCell{} [functional{}(), constructor{}(), cellName{}("generatedTop"), format{}("%2"), injective{}(), cell{}(), topcell{}()]
  symbol Lbl'-LT-'generatedTop'-GT-'-fragment{}(SortTCellOpt{}, SortGeneratedCounterCellOpt{}) : SortGeneratedTopCellFragment{} [cellFragment{}("GeneratedTopCell"), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'id'-GT-'{}(SortK{}) : SortIdCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cellName{}("id"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("552"), contentStartColumn{}("19"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(552,19,568,9)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'k'-GT-'{}(SortK{}) : SortKCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), color{}("green"), cellName{}("k"), maincell{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("552"), contentStartColumn{}("19"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(552,19,568,9)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'loc'-GT-'{}(SortInt{}) : SortLocCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cellName{}("loc"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("552"), contentStartColumn{}("19"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(552,19,568,9)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'localEnv'-GT-'{}(SortMap{}) : SortLocalEnvCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cellName{}("localEnv"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("552"), contentStartColumn{}("19"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(552,19,568,9)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'out'-GT-'{}(SortSet{}) : SortOutCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), color{}("red"), cellName{}("out"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("552"), type{}("Set"), contentStartColumn{}("19"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(552,19,568,9)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'params'-GT-'{}(SortK{}) : SortParamsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cellName{}("params"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("552"), contentStartColumn{}("19"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(552,19,568,9)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'scope'-GT-'{}(SortK{}) : SortScopeCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cellName{}("scope"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("552"), contentStartColumn{}("19"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(552,19,568,9)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'store'-GT-'{}(SortMap{}) : SortStoreCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), color{}("yellow"), cellName{}("store"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("552"), contentStartColumn{}("19"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(552,19,568,9)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'temp'-GT-'{}(SortK{}) : SortTempCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cellName{}("temp"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("552"), contentStartColumn{}("19"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(552,19,568,9)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'thread'-GT-'{}(SortIdCell{}, SortScopeCell{}, SortParamsCell{}, SortTempCell{}, SortLocalEnvCell{}) : SortThreadCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), color{}("blue"), cellName{}("thread"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("552"), type{}("Map"), contentStartColumn{}("19"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(552,19,568,9)"), format{}("%1%i%n%2%n%3%n%4%n%5%n%6%d%n%7"), multiplicity{}("*"), injective{}(), cell{}()]
  symbol Lbl'-LT-'thread'-GT-'-fragment{}(SortIdCellOpt{}, SortScopeCellOpt{}, SortParamsCellOpt{}, SortTempCellOpt{}, SortLocalEnvCellOpt{}) : SortThreadCellFragment{} [cellFragment{}("ThreadCell"), constructor{}(), functional{}(), injective{}()]
  hooked-symbol LblBase2String'LParUndsCommUndsRParUnds'STRING'Unds'String'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("Base2String"), hook{}("STRING.base2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(593,21,593,98)"), function{}()]
  symbol LblBoolean'Unds'KT-SYNTAX'Unds'VarType{}() : SortVarType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(39,32,39,40)"), injective{}()]
  hooked-symbol LblFloat2String'LParUndsRParUnds'STRING'Unds'String'Unds'Float{}(SortFloat{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("Float2String"), hook{}("STRING.float2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(588,21,588,105)"), function{}()]
  hooked-symbol LblFloat2String'LParUndsCommUndsRParUnds'STRING'Unds'String'Unds'Float'Unds'String{}(SortFloat{}, SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("FloatFormat"), hook{}("STRING.floatFormat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(589,21,589,121)"), function{}()]
  hooked-symbol LblId2String'LParUndsRParUnds'ID-SYNTAX'Unds'String'Unds'Id{}(SortId{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("Id2String"), hook{}("STRING.token2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(828,21,828,89)"), function{}()]
  hooked-symbol LblInt2String'LParUndsRParUnds'STRING'Unds'String'Unds'Int{}(SortInt{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("Int2String"), hook{}("STRING.int2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(592,21,592,103)"), function{}()]
  symbol LblInt'Unds'KT-SYNTAX'Unds'VarType{}() : SortVarType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(39,24,39,28)"), injective{}()]
  hooked-symbol LblList'Coln'get{}(SortList{}, SortInt{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("List:get"), hook{}("LIST.get"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(270,20,270,98)"), function{}()]
  hooked-symbol LblList'Coln'range{}(SortList{}, SortInt{}, SortInt{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("List:range"), hook{}("LIST.range"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(281,19,281,119)"), function{}()]
  hooked-symbol LblListItem{}(SortKItem{}) : SortList{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), smtlib{}("smt_seq_elem"), klabel{}("ListItem"), hook{}("LIST.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(265,19,265,136)"), function{}()]
  hooked-symbol LblMap'Coln'lookup{}(SortMap{}, SortKItem{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("Map:lookup"), hook{}("MAP.lookup"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(118,20,118,112)"), function{}()]
  hooked-symbol LblMap'Coln'update{}(SortMap{}, SortKItem{}, SortKItem{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), prefer{}(), klabel{}("Map:update"), hook{}("MAP.update"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(123,18,123,144)"), function{}()]
  hooked-symbol LblSet'Coln'difference{}(SortSet{}, SortSet{}) : SortSet{} [latex{}("{#1}-_{\\it Set}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("Set:difference"), hook{}("SET.difference"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(208,18,208,146)"), function{}()]
  hooked-symbol LblSet'Coln'in{}(SortKItem{}, SortSet{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("Set:in"), hook{}("SET.in"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(211,19,211,106)"), function{}()]
  hooked-symbol LblSetItem{}(SortKItem{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("SetItem"), hook{}("SET.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(202,18,202,112)"), function{}()]
  symbol LblSkip'Unds'KT-SYNTAX'Unds'Skip{}() : SortSkip{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(6,21,6,26)"), injective{}()]
  hooked-symbol LblString2Base'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'Int{}(SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("String2Base"), hook{}("STRING.string2base"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(594,21,594,98)"), function{}()]
  hooked-symbol LblString2Float'LParUndsRParUnds'STRING'Unds'Float'Unds'String{}(SortString{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("String2Float"), hook{}("STRING.string2float"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(590,21,590,93)"), function{}()]
  hooked-symbol LblString2Id'LParUndsRParUnds'ID-SYNTAX'Unds'Id'Unds'String{}(SortString{}) : SortId{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("String2Id"), hook{}("STRING.string2token"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(829,17,829,84)"), function{}()]
  hooked-symbol LblString2Int'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("String2Int"), hook{}("STRING.string2int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(591,21,591,91)"), function{}()]
  symbol LblString'Unds'KT-SYNTAX'Unds'VarType{}() : SortVarType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(39,44,39,51)"), injective{}()]
  hooked-symbol LblThreadCellMapItem{}(SortIdCell{}, SortThreadCell{}) : SortThreadCellMap{} [hook{}("MAP.element"), function{}(), format{}("%5")]
  symbol Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'IdList{}(SortIdList{}) : SortArrayList{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(53,65,53,78)"), injective{}()]
  symbol Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'IntList{}(SortIntList{}) : SortArrayList{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(53,26,53,40)"), injective{}()]
  symbol Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'StringList{}(SortStringList{}) : SortArrayList{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(53,44,53,61)"), injective{}()]
  symbol Lbl'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(SortAExp{}, SortAExp{}) : SortBExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(98,19,98,41)"), injective{}()]
  hooked-symbol Lbl'UndsPerc'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\%_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("mod"), klabel{}("_%Int_"), hook{}("INT.tmod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(378,18,378,170)"), function{}()]
  symbol Lbl'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(SortBExp{}, SortBExp{}) : SortBExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(101,25,101,47)"), injective{}()]
  hooked-symbol Lbl'UndsAnd-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\&_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smtlib{}("andInt"), klabel{}("_&Int_"), hook{}("INT.and"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(389,18,389,182)"), function{}()]
  symbol Lbl'UndsLParUndsRParUnds'KT-SYNTAX'Unds'FuncCall'Unds'Id'Unds'IntList{}(SortId{}, SortIntList{}) : SortFuncCall{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(31,25,31,42)"), injective{}()]
  symbol Lbl'UndsLParUndsRParUnds'KT-SYNTAX'Unds'FuncCall'Unds'Id'Unds'StringList{}(SortId{}, SortStringList{}) : SortFuncCall{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,23,32,43)"), injective{}()]
  hooked-symbol Lbl'UndsStar'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\ast_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("*"), klabel{}("_*Int_"), hook{}("INT.mul"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(374,18,374,181)"), function{}()]
  symbol Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(SortAExp{}, SortAExp{}) : SortAExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(81,25,81,55)"), injective{}(), seqstrict{}()]
  symbol Lbl'UndsPlusPlusUnds'KT-SYNTAX'Unds'AExpMod'Unds'Id{}(SortId{}) : SortAExpMod{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(89,24,89,30)"), injective{}()]
  hooked-symbol Lbl'UndsPlus'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{+_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("+"), klabel{}("_+Int_"), hook{}("INT.add"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(383,18,383,178)"), function{}()]
  hooked-symbol Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortString{} [latex{}("{#1}+_{\\scriptstyle\\it String}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), hook{}("STRING.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(574,21,574,139)"), function{}()]
  symbol Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(SortInt{}, SortAExp{}) : SortAExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(84,19,84,48)"), injective{}(), seqstrict{}()]
  symbol Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp{}(SortString{}, SortAExp{}) : SortAExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(85,19,85,51)"), injective{}(), seqstrict{}()]
  symbol Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'IdExp'Unds'Id'Unds'Id{}(SortId{}, SortId{}) : SortIdExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(109,22,109,30)"), injective{}()]
  symbol Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList{}(SortId{}, SortIdList{}) : SortIdList{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), right{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,23,49,35)"), injective{}()]
  symbol Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IntList'Unds'Int'Unds'IntList{}(SortInt{}, SortIntList{}) : SortIntList{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), right{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(50,24,50,37)"), injective{}()]
  symbol Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'Params'Unds'Id'Unds'Params{}(SortId{}, SortParams{}) : SortParams{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), right{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,23,28,35)"), injective{}()]
  symbol Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'StringList'Unds'String'Unds'StringList{}(SortString{}, SortStringList{}) : SortStringList{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), right{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(51,27,51,43)"), injective{}()]
  symbol Lbl'Unds'--'Unds'KT-SYNTAX'Unds'AExpMod'Unds'Id{}(SortId{}) : SortAExpMod{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(89,34,89,40)"), injective{}()]
  hooked-symbol Lbl'Unds'-Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{-_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("-"), klabel{}("_-Int_"), hook{}("INT.sub"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(384,18,384,178)"), function{}()]
  hooked-symbol Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [latex{}("{#1}-_{\\it Map}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), hook{}("MAP.difference"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(130,18,130,120)"), function{}()]
  symbol Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(SortAExp{}, SortAExp{}) : SortAExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(83,19,83,49)"), injective{}(), seqstrict{}()]
  hooked-symbol Lbl'UndsSlsh'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\div_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("div"), klabel{}("_/Int_"), hook{}("INT.tdiv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(377,18,377,172)"), function{}()]
  symbol Lbl'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(SortAExp{}, SortAExp{}) : SortAExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(82,25,82,55)"), injective{}(), seqstrict{}()]
  hooked-symbol Lbl'Unds-LT--LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\ll_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smtlib{}("shlInt"), klabel{}("_<<Int_"), hook{}("INT.shl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(387,18,387,172)"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{\\leq_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("<="), klabel{}("_<=Int_"), hook{}("INT.le"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(403,19,403,176)"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), hook{}("MAP.inclusion"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(153,19,153,91)"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), hook{}("SET.inclusion"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(214,19,214,85)"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), hook{}("STRING.le"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(607,19,607,82)"), function{}()]
  symbol Lbl'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(SortAExp{}, SortAExp{}) : SortBExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(96,19,96,41)"), injective{}()]
  hooked-symbol Lbl'Unds-LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{<_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("<"), klabel{}("_<Int_"), hook{}("INT.lt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(404,19,404,171)"), function{}()]
  hooked-symbol Lbl'Unds-LT-'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), hook{}("STRING.lt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(606,19,606,82)"), function{}()]
  symbol Lbl'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(SortAExp{}, SortAExp{}) : SortBExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(94,19,94,40)"), injective{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("distinct"), klabel{}("_=/=Bool_"), hook{}("BOOL.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(318,19,318,132)"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{{=}{/}{=}_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("distinct"), klabel{}("_=/=Int_"), hook{}("INT.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(408,19,408,188)"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [latex{}("{#1}\\mathrel{\\neq_K}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), notEqualEqualK{}(), smt-hook{}("distinct"), klabel{}("_=/=K_"), hook{}("KEQUAL.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(853,19,853,170)"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), hook{}("STRING.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(602,19,602,94)"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("="), klabel{}("_==Bool_"), hook{}("BOOL.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(317,19,317,124)"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{{=}{=}_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("="), klabel{}("_==Int_"), hook{}("INT.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(407,19,407,177)"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [latex{}("{#1}\\mathrel{=_K}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), smt-hook{}("="), equalEqualK{}(), klabel{}("_==K_"), hook{}("KEQUAL.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(852,19,852,156)"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), hook{}("STRING.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(576,19,576,88)"), function{}()]
  symbol Lbl'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(SortAExp{}, SortAExp{}) : SortBExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(97,19,97,41)"), injective{}()]
  symbol Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(SortVarDeclaration{}, SortAExp{}) : SortAssigner{} [functional{}(), constructor{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(55,25,55,59)"), injective{}()]
  symbol Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'ArrayList{}(SortVarDeclaration{}, SortArrayList{}) : SortAssigner{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(59,23,59,50)"), injective{}()]
  symbol Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp{}(SortVarDeclaration{}, SortBExp{}) : SortAssigner{} [functional{}(), constructor{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(56,23,56,57)"), injective{}()]
  symbol Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'IdExp{}(SortVarDeclaration{}, SortIdExp{}) : SortAssigner{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(58,23,58,46)"), injective{}()]
  symbol Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(SortId{}, SortAExp{}) : SortIdAssigner{} [functional{}(), constructor{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(62,27,62,49)"), injective{}()]
  symbol Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(SortId{}, SortArrayList{}) : SortIdAssigner{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(66,23,66,38)"), injective{}()]
  symbol Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(SortId{}, SortBExp{}) : SortIdAssigner{} [functional{}(), constructor{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(63,23,63,45)"), injective{}()]
  symbol Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(SortId{}, SortIdExp{}) : SortIdAssigner{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(65,23,65,34)"), injective{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{\\geq_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}(">="), klabel{}("_>=Int_"), hook{}("INT.ge"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(405,19,405,176)"), function{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), hook{}("STRING.ge"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(609,19,609,82)"), function{}()]
  symbol Lbl'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(SortAExp{}, SortAExp{}) : SortBExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(95,19,95,41)"), injective{}()]
  hooked-symbol Lbl'Unds-GT--GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\gg_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smtlib{}("shrInt"), klabel{}("_>>Int_"), hook{}("INT.shr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(386,18,386,172)"), function{}()]
  hooked-symbol Lbl'Unds-GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{>_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}(">"), klabel{}("_>Int_"), hook{}("INT.gt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(406,19,406,171)"), function{}()]
  hooked-symbol Lbl'Unds-GT-'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), hook{}("STRING.gt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(608,19,608,82)"), function{}()]
  symbol Lbl'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(SortAExp{}, SortAExp{}) : SortBExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(93,19,93,40)"), injective{}()]
  hooked-symbol Lbl'Unds'List'Unds'{}(SortList{}, SortList{}) : SortList{} [unit{}(".List"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), element{}("ListItem"), symbol'Kywd'{}(), assoc{}(), smtlib{}("smt_seq_concat"), klabel{}("_List_"), hook{}("LIST.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(260,19,260,192)"), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'Unds'Map'Unds'{}(SortMap{}, SortMap{}) : SortMap{} [unit{}(".Map"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), element{}("_|->_"), symbol'Kywd'{}(), comm{}(), assoc{}(), index{}("0"), klabel{}("_Map_"), hook{}("MAP.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(105,18,105,172)"), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'Unds'Set'Unds'{}(SortSet{}, SortSet{}) : SortSet{} [unit{}(".Set"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), element{}("SetItem"), symbol'Kywd'{}(), idem{}(), comm{}(), assoc{}(), klabel{}("_Set_"), hook{}("SET.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(195,18,195,176)"), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'Unds'ThreadCellMap'Unds'{}(SortThreadCellMap{}, SortThreadCellMap{}) : SortThreadCellMap{} [unit{}(".ThreadCellMap"), element{}("ThreadCellMapItem"), comm{}(), cellCollection{}(), assoc{}(), hook{}("MAP.concat"), avoid{}(), function{}(), wrapElement{}("<thread>")]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("List:set"), hook{}("LIST.update"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(272,19,272,107)"), function{}()]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(SortMap{}, SortKItem{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("_[_<-undef]"), hook{}("MAP.remove"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(126,18,126,121)"), function{}()]
  hooked-symbol Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(SortMap{}, SortKItem{}, SortKItem{}) : SortKItem{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("Map:lookupOrDefault"), hook{}("MAP.lookupOrDefault"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(120,20,120,138)"), function{}()]
  hooked-symbol Lbl'UndsXor-Perc'Int'UndsUnds'{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("(mod (^ #1 #2) #3)"), klabel{}("_^%Int__"), hook{}("INT.powmod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(372,18,372,138)"), function{}()]
  hooked-symbol Lbl'UndsXor-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{{\\char`\\^}_{\\!\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("^"), klabel{}("_^Int_"), hook{}("INT.pow"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(371,18,371,177)"), function{}()]
  symbol Lbl'UndsUndsColn'Boolean'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(SortVarMod{}, SortIdList{}) : SortVarDeclaration{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(44,27,44,53)"), injective{}()]
  symbol Lbl'UndsUndsColn'Int'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(SortVarMod{}, SortIdList{}) : SortVarDeclaration{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(43,31,43,53)"), injective{}()]
  symbol Lbl'UndsUndsColn'String'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(SortVarMod{}, SortIdList{}) : SortVarDeclaration{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(45,27,45,52)"), injective{}()]
  symbol Lbl'UndsUndsUnds'KT-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(SortStmt{}, SortStmt{}) : SortStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(11,19,11,34)"), injective{}()]
  hooked-symbol Lbl'Unds'andBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [latex{}("{#1}\\wedge_{\\scriptstyle\\it Bool}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("and"), boolOperation{}(), klabel{}("_andBool_"), hook{}("BOOL.and"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(310,19,310,189)"), function{}()]
  hooked-symbol Lbl'Unds'andThenBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("and"), boolOperation{}(), klabel{}("_andThenBool_"), hook{}("BOOL.andThen"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(311,19,311,151)"), function{}()]
  hooked-symbol Lbl'Unds'divInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("div"), klabel{}("_divInt_"), hook{}("INT.ediv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(380,18,380,121)"), function{}()]
  symbol Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortBool{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(409,19,409,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'Unds'impliesBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("=>"), boolOperation{}(), klabel{}("_impliesBool_"), hook{}("BOOL.implies"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(315,19,315,150)"), function{}()]
  hooked-symbol Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(SortKItem{}, SortList{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("_inList_"), hook{}("LIST.in"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(284,19,284,101)"), function{}()]
  hooked-symbol Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(SortKItem{}, SortMap{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), hook{}("MAP.in_keys"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(144,19,144,93)"), function{}()]
  hooked-symbol Lbl'Unds'modInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("mod"), klabel{}("_modInt_"), hook{}("INT.emod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(381,18,381,121)"), function{}()]
  hooked-symbol Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(SortBool{}, SortBool{}) : SortBool{} [latex{}("{#1}\\vee_{\\scriptstyle\\it Bool}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), smt-hook{}("or"), boolOperation{}(), klabel{}("_orBool_"), hook{}("BOOL.or"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(313,19,313,176)"), function{}()]
  hooked-symbol Lbl'Unds'orElseBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("or"), boolOperation{}(), klabel{}("_orElseBool_"), hook{}("BOOL.orElse"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(314,19,314,148)"), function{}()]
  hooked-symbol Lbl'Unds'xorBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("xor"), boolOperation{}(), klabel{}("_xorBool_"), hook{}("BOOL.xor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(312,19,312,143)"), function{}()]
  hooked-symbol Lbl'Unds'xorInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\oplus_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smtlib{}("xorInt"), klabel{}("_xorInt_"), hook{}("INT.xor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(391,18,391,188)"), function{}()]
  hooked-symbol Lbl'UndsPipe'-'-GT-Unds'{}(SortKItem{}, SortKItem{}) : SortMap{} [latex{}("{#1}\\mapsto{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("_|->_"), hook{}("MAP.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(112,18,112,144)"), function{}()]
  hooked-symbol Lbl'UndsPipe'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{|_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smtlib{}("orInt"), klabel{}("_|Int_"), hook{}("INT.or"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(393,18,393,179)"), function{}()]
  symbol Lbl'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(SortBExp{}, SortBExp{}) : SortBExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(102,19,102,47)"), injective{}()]
  hooked-symbol LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), smtlib{}("int_abs"), klabel{}("absInt"), hook{}("INT.abs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(397,18,397,102)"), function{}()]
  hooked-symbol LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("bitRangeInt"), hook{}("INT.bitRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(400,18,400,102)"), function{}()]
  hooked-symbol LblcategoryChar'LParUndsRParUnds'STRING'Unds'String'Unds'String{}(SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("categoryChar"), hook{}("STRING.category"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(611,21,611,80)"), function{}()]
  hooked-symbol Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map{}(SortMap{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("Map:choice"), hook{}("MAP.choice"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(156,20,156,100)"), function{}()]
  hooked-symbol Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set{}(SortSet{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("Set:choice"), hook{}("SET.choice"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(220,20,220,94)"), function{}()]
  hooked-symbol LblchrChar'LParUndsRParUnds'STRING'Unds'String'Unds'Int{}(SortInt{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("chrChar"), hook{}("STRING.chr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(579,21,579,69)"), function{}()]
  hooked-symbol LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), hook{}("STRING.countAllOccurrences"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(600,18,600,150)"), function{}()]
  hooked-symbol LbldirectionalityChar'LParUndsRParUnds'STRING'Unds'String'Unds'String{}(SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("directionalityChar"), hook{}("STRING.directionality"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(612,21,612,86)"), function{}()]
  symbol Lbldo'Unds'while'LParUndsRParUnds'KT-SYNTAX'Unds'DoWhileStmt'Unds'Block'Unds'BExp{}(SortBlock{}, SortBExp{}) : SortDoWhileStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(122,28,122,58)"), injective{}()]
  symbol Lblelse'UndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'Block{}(SortBlock{}) : SortElseIfStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(116,23,116,34)"), injective{}()]
  symbol Lblelseif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'BExp'Unds'Block{}(SortBExp{}, SortBlock{}) : SortElseIfStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(114,27,114,54)"), injective{}()]
  symbol Lblelseif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt{}(SortBExp{}, SortBlock{}, SortElseIfStmt{}) : SortElseIfStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(115,23,115,61)"), injective{}()]
  hooked-symbol LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("fillList"), hook{}("LIST.fill"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(278,19,278,99)"), function{}()]
  hooked-symbol LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("findChar"), hook{}("STRING.findChar"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(585,18,585,115)"), function{}()]
  hooked-symbol LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("findString"), hook{}("STRING.find"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(583,18,583,110)"), function{}()]
  symbol Lblfor'LParUndsSClnUndsSClnUndsRParUndsUnds'KT-SYNTAX'Unds'ForStmt'Unds'IdAssigner'Unds'BExp'Unds'AExpMod'Unds'Block{}(SortIdAssigner{}, SortBExp{}, SortAExpMod{}, SortBlock{}) : SortForStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(124,24,124,74)"), injective{}()]
  symbol Lblforeach'LParUnds'in'UndsRParUndsUnds'KT-SYNTAX'Unds'ForEachStmt'Unds'Id'Unds'ArrayList'Unds'Block{}(SortId{}, SortArrayList{}, SortBlock{}) : SortForEachStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(126,28,126,68)"), injective{}()]
  symbol LblfreshId'LParUndsRParUnds'ID-SYNTAX'Unds'Id'Unds'Int{}(SortInt{}) : SortId{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), freshGenerator{}(), klabel{}("freshId"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(830,17,830,70)"), function{}()]
  symbol LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), freshGenerator{}(), klabel{}("freshInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(475,18,475,72)"), function{}()]
  symbol Lblfun'UndsLParUndsRParColn'Int'UndsUnds'KT-SYNTAX'Unds'FuncDec'Unds'Id'Unds'Params'Unds'Block{}(SortId{}, SortParams{}, SortBlock{}) : SortFuncDec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,24,29,62)"), injective{}()]
  symbol Lblfun'UndsLParUndsRParUndsUnds'KT-SYNTAX'Unds'FuncDec'Unds'Id'Unds'Params'Unds'Block{}(SortId{}, SortParams{}, SortBlock{}) : SortFuncDec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(30,23,30,51)"), injective{}()]
  symbol Lblfunmain'LParRParLBraUndsRBraUnds'KT-SYNTAX'Unds'Fun'Unds'Block{}(SortBlock{}) : SortFun{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(4,20,4,53)"), injective{}()]
  symbol LblgetGeneratedCounterCell{}(SortGeneratedTopCell{}) : SortGeneratedCounterCell{} [function{}()]
  hooked-symbol LblgetKLabel'LParUndsRParUnds'K-REFLECTION'Unds'KItem'Unds'K{}(SortK{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("getKLabel"), hook{}("KREFLECTION.getKLabel"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(875,20,875,72)"), function{}()]
  symbol Lblif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block{}(SortBExp{}, SortBlock{}) : SortIfStmt{} [functional{}(), constructor{}(), strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(111,23,111,57)"), injective{}()]
  symbol Lblif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt{}(SortBExp{}, SortBlock{}, SortElseIfStmt{}) : SortIfStmt{} [functional{}(), constructor{}(), strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(112,19,112,64)"), injective{}()]
  symbol LblinitEnvCell{}() : SortEnvCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitFunctionsCell{}() : SortFunctionsCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitGeneratedCounterCell{}() : SortGeneratedCounterCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitGeneratedTopCell{}(SortMap{}) : SortGeneratedTopCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitIdCell{}() : SortIdCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitKCell{}(SortMap{}) : SortKCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitLocCell{}() : SortLocCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitLocalEnvCell{}() : SortLocalEnvCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitOutCell{}() : SortOutCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitParamsCell{}() : SortParamsCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitScopeCell{}() : SortScopeCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitStoreCell{}() : SortStoreCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitTCell{}(SortMap{}) : SortTCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitTempCell{}() : SortTempCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitThreadCell{}() : SortThreadCellMap{} [initializer{}(), function{}(), noThread{}()]
  hooked-symbol LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("intersectSet"), hook{}("SET.intersection"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(205,18,205,88)"), function{}()]
  symbol LblisAExp{}(SortK{}) : SortBool{} [function{}(), predicate{}("AExp")]
  symbol LblisAExpMod{}(SortK{}) : SortBool{} [function{}(), predicate{}("AExpMod")]
  symbol LblisArrayList{}(SortK{}) : SortBool{} [function{}(), predicate{}("ArrayList")]
  symbol LblisAssigner{}(SortK{}) : SortBool{} [function{}(), predicate{}("Assigner")]
  symbol LblisBExp{}(SortK{}) : SortBool{} [function{}(), predicate{}("BExp")]
  symbol LblisBlock{}(SortK{}) : SortBool{} [function{}(), predicate{}("Block")]
  symbol LblisBool{}(SortK{}) : SortBool{} [function{}(), predicate{}("Bool")]
  symbol LblisCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("Cell")]
  symbol LblisDoWhileStmt{}(SortK{}) : SortBool{} [function{}(), predicate{}("DoWhileStmt")]
  symbol LblisElseIfStmt{}(SortK{}) : SortBool{} [function{}(), predicate{}("ElseIfStmt")]
  symbol LblisEnvCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("EnvCell")]
  symbol LblisEnvCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("EnvCellOpt")]
  symbol LblisFloat{}(SortK{}) : SortBool{} [function{}(), predicate{}("Float")]
  symbol LblisForEachStmt{}(SortK{}) : SortBool{} [function{}(), predicate{}("ForEachStmt")]
  symbol LblisForStmt{}(SortK{}) : SortBool{} [function{}(), predicate{}("ForStmt")]
  symbol LblisFun{}(SortK{}) : SortBool{} [function{}(), predicate{}("Fun")]
  symbol LblisFuncCall{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncCall")]
  symbol LblisFuncDec{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncDec")]
  symbol LblisFunctionsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("FunctionsCell")]
  symbol LblisFunctionsCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("FunctionsCellFragment")]
  symbol LblisFunctionsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("FunctionsCellOpt")]
  symbol LblisGeneratedCounterCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("GeneratedCounterCell")]
  symbol LblisGeneratedCounterCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("GeneratedCounterCellOpt")]
  symbol LblisGeneratedTopCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("GeneratedTopCell")]
  symbol LblisGeneratedTopCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("GeneratedTopCellFragment")]
  symbol LblisIOError{}(SortK{}) : SortBool{} [function{}(), predicate{}("IOError")]
  symbol LblisIOFile{}(SortK{}) : SortBool{} [function{}(), predicate{}("IOFile")]
  symbol LblisIOInt{}(SortK{}) : SortBool{} [function{}(), predicate{}("IOInt")]
  symbol LblisIOString{}(SortK{}) : SortBool{} [function{}(), predicate{}("IOString")]
  symbol LblisId{}(SortK{}) : SortBool{} [function{}(), predicate{}("Id")]
  symbol LblisIdAssigner{}(SortK{}) : SortBool{} [function{}(), predicate{}("IdAssigner")]
  symbol LblisIdCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("IdCell")]
  symbol LblisIdCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("IdCellOpt")]
  symbol LblisIdExp{}(SortK{}) : SortBool{} [function{}(), predicate{}("IdExp")]
  symbol LblisIdList{}(SortK{}) : SortBool{} [function{}(), predicate{}("IdList")]
  symbol LblisIfStmt{}(SortK{}) : SortBool{} [function{}(), predicate{}("IfStmt")]
  symbol LblisInt{}(SortK{}) : SortBool{} [function{}(), predicate{}("Int")]
  symbol LblisIntList{}(SortK{}) : SortBool{} [function{}(), predicate{}("IntList")]
  symbol LblisK{}(SortK{}) : SortBool{} [function{}(), predicate{}("K")]
  symbol LblisKCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("KCell")]
  symbol LblisKCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("KCellOpt")]
  symbol LblisKConfigVar{}(SortK{}) : SortBool{} [function{}(), predicate{}("KConfigVar")]
  symbol LblisKItem{}(SortK{}) : SortBool{} [function{}(), predicate{}("KItem")]
  symbol LblisKResult{}(SortK{}) : SortBool{} [function{}(), predicate{}("KResult")]
  symbol LblisKVariable{}(SortK{}) : SortBool{} [function{}(), predicate{}("KVariable")]
  symbol LblisList{}(SortK{}) : SortBool{} [function{}(), predicate{}("List")]
  symbol LblisLocCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("LocCell")]
  symbol LblisLocCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("LocCellOpt")]
  symbol LblisLocal{}(SortK{}) : SortBool{} [function{}(), predicate{}("Local")]
  symbol LblisLocalEnvCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("LocalEnvCell")]
  symbol LblisLocalEnvCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("LocalEnvCellOpt")]
  symbol LblisMap{}(SortK{}) : SortBool{} [function{}(), predicate{}("Map")]
  symbol LblisOutCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("OutCell")]
  symbol LblisOutCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("OutCellOpt")]
  symbol LblisParams{}(SortK{}) : SortBool{} [function{}(), predicate{}("Params")]
  symbol LblisParamsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("ParamsCell")]
  symbol LblisParamsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("ParamsCellOpt")]
  symbol LblisPrint{}(SortK{}) : SortBool{} [function{}(), predicate{}("Print")]
  symbol LblisScopeCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("ScopeCell")]
  symbol LblisScopeCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("ScopeCellOpt")]
  symbol LblisSet{}(SortK{}) : SortBool{} [function{}(), predicate{}("Set")]
  symbol LblisSkip{}(SortK{}) : SortBool{} [function{}(), predicate{}("Skip")]
  symbol LblisStmt{}(SortK{}) : SortBool{} [function{}(), predicate{}("Stmt")]
  symbol LblisStoreCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("StoreCell")]
  symbol LblisStoreCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("StoreCellOpt")]
  symbol LblisStream{}(SortK{}) : SortBool{} [function{}(), predicate{}("Stream")]
  symbol LblisString{}(SortK{}) : SortBool{} [function{}(), predicate{}("String")]
  symbol LblisStringList{}(SortK{}) : SortBool{} [function{}(), predicate{}("StringList")]
  symbol LblisTCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("TCell")]
  symbol LblisTCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("TCellFragment")]
  symbol LblisTCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("TCellOpt")]
  symbol LblisTempCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("TempCell")]
  symbol LblisTempCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("TempCellOpt")]
  symbol LblisThreadCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("ThreadCell")]
  symbol LblisThreadCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("ThreadCellFragment")]
  symbol LblisThreadCellMap{}(SortK{}) : SortBool{} [function{}(), predicate{}("ThreadCellMap")]
  symbol LblisValueType{}(SortK{}) : SortBool{} [function{}(), predicate{}("ValueType")]
  symbol LblisVarDeclaration{}(SortK{}) : SortBool{} [function{}(), predicate{}("VarDeclaration")]
  symbol LblisVarMod{}(SortK{}) : SortBool{} [function{}(), predicate{}("VarMod")]
  symbol LblisVarType{}(SortK{}) : SortBool{} [function{}(), predicate{}("VarType")]
  symbol LblisWhileStmt{}(SortK{}) : SortBool{} [function{}(), predicate{}("WhileStmt")]
  hooked-symbol Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(SortMap{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("keys"), hook{}("MAP.keys"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(141,18,141,86)"), function{}()]
  hooked-symbol Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [hook{}("MAP.keys_list"), function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(142,19,142,79)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)")]
  hooked-symbol LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("lengthString"), hook{}("STRING.length"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(578,18,578,84)"), function{}()]
  symbol Lbllocal'LParUndsCommUndsRParUnds'KT-SYNTAX'Unds'Local'Unds'Id'Unds'Stmt{}(SortId{}, SortStmt{}) : SortLocal{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(33,22,33,48)"), injective{}()]
  hooked-symbol Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("log2Int"), hook{}("INT.log2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(398,18,398,74)"), function{}()]
  hooked-symbol LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem{}(SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("makeList"), hook{}("LIST.make"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(274,19,274,81)"), function{}()]
  hooked-symbol LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), smtlib{}("int_max"), hook{}("INT.max"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(396,18,396,102)"), function{}()]
  hooked-symbol LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), smtlib{}("int_min"), hook{}("INT.min"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(395,18,395,102)"), function{}()]
  hooked-symbol LblnewUUID'Unds'STRING'Unds'String{}() : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), impure{}(), hook{}("STRING.uuid"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(614,21,614,67)"), function{}()]
  symbol LblnoEnvCell{}() : SortEnvCellOpt{} [cellOptAbsent{}("EnvCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoFunctionsCell{}() : SortFunctionsCellOpt{} [cellOptAbsent{}("FunctionsCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoGeneratedCounterCell{}() : SortGeneratedCounterCellOpt{} [cellOptAbsent{}("GeneratedCounterCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoIdCell{}() : SortIdCellOpt{} [cellOptAbsent{}("IdCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoKCell{}() : SortKCellOpt{} [cellOptAbsent{}("KCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoLocCell{}() : SortLocCellOpt{} [cellOptAbsent{}("LocCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoLocalEnvCell{}() : SortLocalEnvCellOpt{} [cellOptAbsent{}("LocalEnvCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoOutCell{}() : SortOutCellOpt{} [cellOptAbsent{}("OutCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoParamsCell{}() : SortParamsCellOpt{} [cellOptAbsent{}("ParamsCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoScopeCell{}() : SortScopeCellOpt{} [cellOptAbsent{}("ScopeCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoStoreCell{}() : SortStoreCellOpt{} [cellOptAbsent{}("StoreCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoTCell{}() : SortTCellOpt{} [cellOptAbsent{}("TCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoTempCell{}() : SortTempCellOpt{} [cellOptAbsent{}("TempCell"), constructor{}(), functional{}(), injective{}()]
  hooked-symbol LblnotBool'Unds'{}(SortBool{}) : SortBool{} [latex{}("\\neg_{\\scriptstyle\\it Bool}{#1}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), smt-hook{}("not"), boolOperation{}(), klabel{}("notBool_"), hook{}("BOOL.not"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(309,19,309,176)"), function{}()]
  hooked-symbol LblordChar'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("ordChar"), hook{}("STRING.ord"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(580,18,580,69)"), function{}()]
  symbol Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'IdList{}(SortIdList{}) : SortPrint{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,19,36,40)"), injective{}()]
  symbol Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'IntList{}(SortIntList{}) : SortPrint{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,22,35,44)"), injective{}()]
  symbol Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'StringList{}(SortStringList{}) : SortPrint{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,19,37,44)"), injective{}()]
  symbol Lblproject'ColnHash'tempFile'Coln'fd{}(SortIOFile{}) : SortInt{} [function{}()]
  symbol Lblproject'ColnHash'tempFile'Coln'path{}(SortIOFile{}) : SortString{} [function{}()]
  symbol Lblproject'ColnHash'unknownIOError'Coln'errno{}(SortIOError{}) : SortInt{} [function{}()]
  symbol Lblproject'Coln'AExp{}(SortK{}) : SortAExp{} [function{}(), projection{}()]
  symbol Lblproject'Coln'AExpMod{}(SortK{}) : SortAExpMod{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ArrayList{}(SortK{}) : SortArrayList{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Assigner{}(SortK{}) : SortAssigner{} [function{}(), projection{}()]
  symbol Lblproject'Coln'BExp{}(SortK{}) : SortBExp{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Block{}(SortK{}) : SortBlock{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Bool{}(SortK{}) : SortBool{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Cell{}(SortK{}) : SortCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'DoWhileStmt{}(SortK{}) : SortDoWhileStmt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ElseIfStmt{}(SortK{}) : SortElseIfStmt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'EnvCell{}(SortK{}) : SortEnvCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'EnvCellOpt{}(SortK{}) : SortEnvCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Float{}(SortK{}) : SortFloat{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ForEachStmt{}(SortK{}) : SortForEachStmt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ForStmt{}(SortK{}) : SortForStmt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Fun{}(SortK{}) : SortFun{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FuncCall{}(SortK{}) : SortFuncCall{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FuncDec{}(SortK{}) : SortFuncDec{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FunctionsCell{}(SortK{}) : SortFunctionsCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FunctionsCellFragment{}(SortK{}) : SortFunctionsCellFragment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FunctionsCellOpt{}(SortK{}) : SortFunctionsCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GeneratedCounterCell{}(SortK{}) : SortGeneratedCounterCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GeneratedCounterCellOpt{}(SortK{}) : SortGeneratedCounterCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GeneratedTopCell{}(SortK{}) : SortGeneratedTopCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GeneratedTopCellFragment{}(SortK{}) : SortGeneratedTopCellFragment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'IOError{}(SortK{}) : SortIOError{} [function{}(), projection{}()]
  symbol Lblproject'Coln'IOFile{}(SortK{}) : SortIOFile{} [function{}(), projection{}()]
  symbol Lblproject'Coln'IOInt{}(SortK{}) : SortIOInt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'IOString{}(SortK{}) : SortIOString{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Id{}(SortK{}) : SortId{} [function{}(), projection{}()]
  symbol Lblproject'Coln'IdAssigner{}(SortK{}) : SortIdAssigner{} [function{}(), projection{}()]
  symbol Lblproject'Coln'IdCell{}(SortK{}) : SortIdCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'IdCellOpt{}(SortK{}) : SortIdCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'IdExp{}(SortK{}) : SortIdExp{} [function{}(), projection{}()]
  symbol Lblproject'Coln'IdList{}(SortK{}) : SortIdList{} [function{}(), projection{}()]
  symbol Lblproject'Coln'IfStmt{}(SortK{}) : SortIfStmt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Int{}(SortK{}) : SortInt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'IntList{}(SortK{}) : SortIntList{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KCell{}(SortK{}) : SortKCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KCellOpt{}(SortK{}) : SortKCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KItem{}(SortK{}) : SortKItem{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KResult{}(SortK{}) : SortKResult{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KVariable{}(SortK{}) : SortKVariable{} [function{}(), projection{}()]
  symbol Lblproject'Coln'List{}(SortK{}) : SortList{} [function{}(), projection{}()]
  symbol Lblproject'Coln'LocCell{}(SortK{}) : SortLocCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'LocCellOpt{}(SortK{}) : SortLocCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Local{}(SortK{}) : SortLocal{} [function{}(), projection{}()]
  symbol Lblproject'Coln'LocalEnvCell{}(SortK{}) : SortLocalEnvCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'LocalEnvCellOpt{}(SortK{}) : SortLocalEnvCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Map{}(SortK{}) : SortMap{} [function{}(), projection{}()]
  symbol Lblproject'Coln'OutCell{}(SortK{}) : SortOutCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'OutCellOpt{}(SortK{}) : SortOutCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Params{}(SortK{}) : SortParams{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ParamsCell{}(SortK{}) : SortParamsCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ParamsCellOpt{}(SortK{}) : SortParamsCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Print{}(SortK{}) : SortPrint{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ScopeCell{}(SortK{}) : SortScopeCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ScopeCellOpt{}(SortK{}) : SortScopeCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Set{}(SortK{}) : SortSet{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Skip{}(SortK{}) : SortSkip{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Stmt{}(SortK{}) : SortStmt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'StoreCell{}(SortK{}) : SortStoreCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'StoreCellOpt{}(SortK{}) : SortStoreCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Stream{}(SortK{}) : SortStream{} [function{}(), projection{}()]
  symbol Lblproject'Coln'String{}(SortK{}) : SortString{} [function{}(), projection{}()]
  symbol Lblproject'Coln'StringList{}(SortK{}) : SortStringList{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TCell{}(SortK{}) : SortTCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TCellFragment{}(SortK{}) : SortTCellFragment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TCellOpt{}(SortK{}) : SortTCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TempCell{}(SortK{}) : SortTempCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TempCellOpt{}(SortK{}) : SortTempCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ThreadCell{}(SortK{}) : SortThreadCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ThreadCellFragment{}(SortK{}) : SortThreadCellFragment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ThreadCellMap{}(SortK{}) : SortThreadCellMap{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ValueType{}(SortK{}) : SortValueType{} [function{}(), projection{}()]
  symbol Lblproject'Coln'VarDeclaration{}(SortK{}) : SortVarDeclaration{} [function{}(), projection{}()]
  symbol Lblproject'Coln'VarMod{}(SortK{}) : SortVarMod{} [function{}(), projection{}()]
  symbol Lblproject'Coln'VarType{}(SortK{}) : SortVarType{} [function{}(), projection{}()]
  symbol Lblproject'Coln'WhileStmt{}(SortK{}) : SortWhileStmt{} [function{}(), projection{}()]
  hooked-symbol LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("randInt"), hook{}("INT.rand"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(478,18,478,56)"), function{}()]
  hooked-symbol LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(SortMap{}, SortSet{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("removeAll"), hook{}("MAP.removeAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(138,18,138,91)"), function{}()]
  hooked-symbol Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortString{}, SortInt{}) : SortString{} [hook{}("STRING.replace"), function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(598,21,598,145)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)")]
  hooked-symbol LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), hook{}("STRING.replaceAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(597,21,597,153)"), function{}()]
  hooked-symbol LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), hook{}("STRING.replaceFirst"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(599,21,599,155)"), function{}()]
  hooked-symbol LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("rfindChar"), hook{}("STRING.rfindChar"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(586,18,586,116)"), function{}()]
  hooked-symbol LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("rfindString"), hook{}("STRING.rfind"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(584,18,584,111)"), function{}()]
  hooked-symbol LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("signExtendBitRangeInt"), hook{}("INT.signExtendBitRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(401,18,401,112)"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(SortList{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), smtlib{}("smt_seq_len"), klabel{}("sizeList"), hook{}("LIST.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(287,18,287,121)"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(SortMap{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("sizeMap"), hook{}("MAP.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(150,18,150,103)"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(SortSet{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("size"), hook{}("SET.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(217,18,217,80)"), function{}()]
  hooked-symbol LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("srandInt"), hook{}("INT.srand"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(479,16,479,56)"), function{}()]
  hooked-symbol LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(SortString{}, SortInt{}, SortInt{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("substrString"), hook{}("STRING.substr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(582,21,582,121)"), function{}()]
  hooked-symbol LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List{}(SortList{}, SortInt{}, SortList{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("updateList"), hook{}("LIST.updateAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(276,19,276,96)"), function{}()]
  hooked-symbol LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("updateMap"), hook{}("MAP.updateAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(135,18,135,91)"), function{}()]
  symbol Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(SortId{}, SortAExp{}) : SortIdAssigner{} [functional{}(), constructor{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(70,23,70,51)"), injective{}()]
  symbol Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(SortId{}, SortArrayList{}) : SortIdAssigner{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(74,23,74,44)"), injective{}()]
  symbol Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(SortId{}, SortBExp{}) : SortIdAssigner{} [functional{}(), constructor{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(71,23,71,51)"), injective{}()]
  symbol Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(SortId{}, SortIdExp{}) : SortIdAssigner{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(72,23,72,40)"), injective{}()]
  symbol Lblval'Unds'KT-SYNTAX'Unds'VarMod{}() : SortVarMod{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(41,31,41,35)"), injective{}()]
  hooked-symbol Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), klabel{}("values"), hook{}("MAP.values"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(147,19,147,76)"), function{}()]
  symbol Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(SortId{}, SortAExp{}) : SortIdAssigner{} [functional{}(), constructor{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(67,23,67,51)"), injective{}()]
  symbol Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(SortId{}, SortArrayList{}) : SortIdAssigner{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(73,23,73,44)"), injective{}()]
  symbol Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(SortId{}, SortBExp{}) : SortIdAssigner{} [functional{}(), constructor{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(68,23,68,51)"), injective{}()]
  symbol Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(SortId{}, SortIdExp{}) : SortIdAssigner{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(69,23,69,40)"), injective{}()]
  symbol Lblvar'Unds'KT-SYNTAX'Unds'VarMod{}() : SortVarMod{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(41,23,41,27)"), injective{}()]
  symbol Lblwhile'LParUndsRParUndsUnds'KT-SYNTAX'Unds'WhileStmt'Unds'BExp'Unds'Block{}(SortBExp{}, SortBlock{}) : SortWhileStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(120,26,120,51)"), injective{}()]
  symbol Lbl'LBraUndsRBraUnds'KT-SYNTAX'Unds'Block'Unds'Stmt{}(SortStmt{}) : SortBlock{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(8,22,8,33)"), injective{}()]
  hooked-symbol Lbl'Tild'Int'Unds'{}(SortInt{}) : SortInt{} [latex{}("\\mathop{\\sim_{\\scriptstyle\\it Int}}{#1}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), symbol'Kywd'{}(), smtlib{}("notInt"), klabel{}("~Int_"), hook{}("INT.not"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(369,18,369,172)"), function{}()]

// generated axioms
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStoreCellOpt{}, SortKItem{}} (From:SortStoreCellOpt{}))) [subsort{SortStoreCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStringList{}, SortKItem{}} (From:SortStringList{}))) [subsort{SortStringList{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCell{}, SortKItem{}} (From:SortCell{}))) [subsort{SortCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortValueType{}, SortKItem{}} (From:SortValueType{}))) [subsort{SortValueType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOString{}, SortKItem{}} (From:SortIOString{}))) [subsort{SortIOString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortString{}, SortKItem{}} (From:SortString{}))) [subsort{SortString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKResult{}, \equals{SortKResult{}, R} (Val:SortKResult{}, inj{SortInt{}, SortKResult{}} (From:SortInt{}))) [subsort{SortInt{}, SortKResult{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortWhileStmt{}, SortKItem{}} (From:SortWhileStmt{}))) [subsort{SortWhileStmt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortTempCell{}, SortCell{}} (From:SortTempCell{}))) [subsort{SortTempCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortLocCell{}, SortCell{}} (From:SortLocCell{}))) [subsort{SortLocCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortAExp{}, SortKItem{}} (From:SortAExp{}))) [subsort{SortAExp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCell{}, SortKItem{}} (From:SortTCell{}))) [subsort{SortTCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortScopeCellOpt{}, \equals{SortScopeCellOpt{}, R} (Val:SortScopeCellOpt{}, inj{SortScopeCell{}, SortScopeCellOpt{}} (From:SortScopeCell{}))) [subsort{SortScopeCell{}, SortScopeCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortValueType{}, \equals{SortValueType{}, R} (Val:SortValueType{}, inj{SortInt{}, SortValueType{}} (From:SortInt{}))) [subsort{SortInt{}, SortValueType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortPrint{}, SortKItem{}} (From:SortPrint{}))) [subsort{SortPrint{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortDoWhileStmt{}, SortStmt{}} (From:SortDoWhileStmt{}))) [subsort{SortDoWhileStmt{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIdAssigner{}, SortKItem{}} (From:SortIdAssigner{}))) [subsort{SortIdAssigner{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCellOpt{}, SortKItem{}} (From:SortKCellOpt{}))) [subsort{SortKCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortParams{}, SortKItem{}} (From:SortParams{}))) [subsort{SortParams{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedCounterCellOpt{}, SortKItem{}} (From:SortGeneratedCounterCellOpt{}))) [subsort{SortGeneratedCounterCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKResult{}, SortKItem{}} (From:SortKResult{}))) [subsort{SortKResult{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortIfStmt{}, SortStmt{}} (From:SortIfStmt{}))) [subsort{SortIfStmt{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R} (Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}} (From:SortGeneratedCounterCell{}))) [subsort{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, inj{SortBool{}, SortBExp{}} (From:SortBool{}))) [subsort{SortBool{}, SortBExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFunctionsCellOpt{}, SortKItem{}} (From:SortFunctionsCellOpt{}))) [subsort{SortFunctionsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortEnvCellOpt{}, SortKItem{}} (From:SortEnvCellOpt{}))) [subsort{SortEnvCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCell{}, SortKItem{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCellOpt{}, SortKItem{}} (From:SortTCellOpt{}))) [subsort{SortTCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTempCellOpt{}, SortKItem{}} (From:SortTempCellOpt{}))) [subsort{SortTempCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortVarDeclaration{}, SortStmt{}} (From:SortVarDeclaration{}))) [subsort{SortVarDeclaration{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortIdCell{}, SortCell{}} (From:SortIdCell{}))) [subsort{SortIdCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortLocCellOpt{}, \equals{SortLocCellOpt{}, R} (Val:SortLocCellOpt{}, inj{SortLocCell{}, SortLocCellOpt{}} (From:SortLocCell{}))) [subsort{SortLocCell{}, SortLocCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFunctionsCellOpt{}, \equals{SortFunctionsCellOpt{}, R} (Val:SortFunctionsCellOpt{}, inj{SortFunctionsCell{}, SortFunctionsCellOpt{}} (From:SortFunctionsCell{}))) [subsort{SortFunctionsCell{}, SortFunctionsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLocCell{}, SortKItem{}} (From:SortLocCell{}))) [subsort{SortLocCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncDec{}, SortKItem{}} (From:SortFuncDec{}))) [subsort{SortFuncDec{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOutCell{}, SortKItem{}} (From:SortOutCell{}))) [subsort{SortOutCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortParamsCell{}, SortKItem{}} (From:SortParamsCell{}))) [subsort{SortParamsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortValueType{}, \equals{SortValueType{}, R} (Val:SortValueType{}, inj{SortString{}, SortValueType{}} (From:SortString{}))) [subsort{SortString{}, SortValueType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortAExpMod{}, SortKItem{}} (From:SortAExpMod{}))) [subsort{SortAExpMod{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOInt{}, \equals{SortIOInt{}, R} (Val:SortIOInt{}, inj{SortIOError{}, SortIOInt{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortIOInt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortParamsCellOpt{}, \equals{SortParamsCellOpt{}, R} (Val:SortParamsCellOpt{}, inj{SortParamsCell{}, SortParamsCellOpt{}} (From:SortParamsCell{}))) [subsort{SortParamsCell{}, SortParamsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, inj{SortKCell{}, SortKCellOpt{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortSkip{}, SortStmt{}} (From:SortSkip{}))) [subsort{SortSkip{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSet{}, SortKItem{}} (From:SortSet{}))) [subsort{SortSet{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStoreCell{}, SortKItem{}} (From:SortStoreCell{}))) [subsort{SortStoreCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOError{}, SortKItem{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBlock{}, SortKItem{}} (From:SortBlock{}))) [subsort{SortBlock{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIdExp{}, SortKItem{}} (From:SortIdExp{}))) [subsort{SortIdExp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKVariable{}, \equals{SortKVariable{}, R} (Val:SortKVariable{}, inj{SortId{}, SortKVariable{}} (From:SortId{}))) [subsort{SortId{}, SortKVariable{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortEnvCell{}, SortCell{}} (From:SortEnvCell{}))) [subsort{SortEnvCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortScopeCell{}, SortCell{}} (From:SortScopeCell{}))) [subsort{SortScopeCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortVarMod{}, SortKItem{}} (From:SortVarMod{}))) [subsort{SortVarMod{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (From:SortGeneratedCounterCell{}))) [subsort{SortGeneratedCounterCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOInt{}, \equals{SortIOInt{}, R} (Val:SortIOInt{}, inj{SortInt{}, SortIOInt{}} (From:SortInt{}))) [subsort{SortInt{}, SortIOInt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTCellOpt{}, \equals{SortTCellOpt{}, R} (Val:SortTCellOpt{}, inj{SortTCell{}, SortTCellOpt{}} (From:SortTCell{}))) [subsort{SortTCell{}, SortTCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortAssigner{}, SortKItem{}} (From:SortAssigner{}))) [subsort{SortAssigner{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCellFragment{}, SortKItem{}} (From:SortTCellFragment{}))) [subsort{SortTCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortOutCellOpt{}, \equals{SortOutCellOpt{}, R} (Val:SortOutCellOpt{}, inj{SortOutCell{}, SortOutCellOpt{}} (From:SortOutCell{}))) [subsort{SortOutCell{}, SortOutCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortPrint{}, SortStmt{}} (From:SortPrint{}))) [subsort{SortPrint{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIdCellOpt{}, \equals{SortIdCellOpt{}, R} (Val:SortIdCellOpt{}, inj{SortIdCell{}, SortIdCellOpt{}} (From:SortIdCell{}))) [subsort{SortIdCell{}, SortIdCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIfStmt{}, SortKItem{}} (From:SortIfStmt{}))) [subsort{SortIfStmt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortIdAssigner{}, SortStmt{}} (From:SortIdAssigner{}))) [subsort{SortIdAssigner{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortForEachStmt{}, SortKItem{}} (From:SortForEachStmt{}))) [subsort{SortForEachStmt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortAExp{}, SortStmt{}} (From:SortAExp{}))) [subsort{SortAExp{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortTCell{}, SortCell{}} (From:SortTCell{}))) [subsort{SortTCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIdCellOpt{}, SortKItem{}} (From:SortIdCellOpt{}))) [subsort{SortIdCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStream{}, SortKItem{}} (From:SortStream{}))) [subsort{SortStream{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOFile{}, SortKItem{}} (From:SortIOFile{}))) [subsort{SortIOFile{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIntList{}, SortKItem{}} (From:SortIntList{}))) [subsort{SortIntList{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortOutCell{}, SortCell{}} (From:SortOutCell{}))) [subsort{SortOutCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCell{}, SortKItem{}} (From:SortGeneratedTopCell{}))) [subsort{SortGeneratedTopCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortAssigner{}, SortStmt{}} (From:SortAssigner{}))) [subsort{SortAssigner{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortVarType{}, SortKItem{}} (From:SortVarType{}))) [subsort{SortVarType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortThreadCellMap{}, SortKItem{}} (From:SortThreadCellMap{}))) [subsort{SortThreadCellMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortValueType{}, \equals{SortValueType{}, R} (Val:SortValueType{}, inj{SortBool{}, SortValueType{}} (From:SortBool{}))) [subsort{SortBool{}, SortValueType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortAExp{}, \equals{SortAExp{}, R} (Val:SortAExp{}, inj{SortInt{}, SortAExp{}} (From:SortInt{}))) [subsort{SortInt{}, SortAExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortEnvCellOpt{}, \equals{SortEnvCellOpt{}, R} (Val:SortEnvCellOpt{}, inj{SortEnvCell{}, SortEnvCellOpt{}} (From:SortEnvCell{}))) [subsort{SortEnvCell{}, SortEnvCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOInt{}, SortKItem{}} (From:SortIOInt{}))) [subsort{SortIOInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStoreCellOpt{}, \equals{SortStoreCellOpt{}, R} (Val:SortStoreCellOpt{}, inj{SortStoreCell{}, SortStoreCellOpt{}} (From:SortStoreCell{}))) [subsort{SortStoreCell{}, SortStoreCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortParamsCellOpt{}, SortKItem{}} (From:SortParamsCellOpt{}))) [subsort{SortParamsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortVarDeclaration{}, SortKItem{}} (From:SortVarDeclaration{}))) [subsort{SortVarDeclaration{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFun{}, SortKItem{}} (From:SortFun{}))) [subsort{SortFun{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOutCellOpt{}, SortKItem{}} (From:SortOutCellOpt{}))) [subsort{SortOutCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncCall{}, SortKItem{}} (From:SortFuncCall{}))) [subsort{SortFuncCall{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSkip{}, SortKItem{}} (From:SortSkip{}))) [subsort{SortSkip{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortFuncCall{}, SortStmt{}} (From:SortFuncCall{}))) [subsort{SortFuncCall{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortFuncDec{}, SortStmt{}} (From:SortFuncDec{}))) [subsort{SortFuncDec{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortElseIfStmt{}, SortKItem{}} (From:SortElseIfStmt{}))) [subsort{SortElseIfStmt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortList{}, SortKItem{}} (From:SortList{}))) [subsort{SortList{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortForStmt{}, SortKItem{}} (From:SortForStmt{}))) [subsort{SortForStmt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOString{}, \equals{SortIOString{}, R} (Val:SortIOString{}, inj{SortString{}, SortIOString{}} (From:SortString{}))) [subsort{SortString{}, SortIOString{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortScopeCellOpt{}, SortKItem{}} (From:SortScopeCellOpt{}))) [subsort{SortScopeCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortAExpMod{}, SortStmt{}} (From:SortAExpMod{}))) [subsort{SortAExpMod{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortId{}, SortKItem{}} (From:SortId{}))) [subsort{SortId{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortLocalEnvCell{}, SortCell{}} (From:SortLocalEnvCell{}))) [subsort{SortLocalEnvCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortScopeCell{}, SortKItem{}} (From:SortScopeCell{}))) [subsort{SortScopeCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFloat{}, SortKItem{}} (From:SortFloat{}))) [subsort{SortFloat{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBool{}, SortKItem{}} (From:SortBool{}))) [subsort{SortBool{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLocalEnvCellOpt{}, SortKItem{}} (From:SortLocalEnvCellOpt{}))) [subsort{SortLocalEnvCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFunctionsCellFragment{}, SortKItem{}} (From:SortFunctionsCellFragment{}))) [subsort{SortFunctionsCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLocal{}, SortKItem{}} (From:SortLocal{}))) [subsort{SortLocal{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortFunctionsCell{}, SortCell{}} (From:SortFunctionsCell{}))) [subsort{SortFunctionsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortAExp{}, \equals{SortAExp{}, R} (Val:SortAExp{}, inj{SortId{}, SortAExp{}} (From:SortId{}))) [subsort{SortId{}, SortAExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortStoreCell{}, SortCell{}} (From:SortStoreCell{}))) [subsort{SortStoreCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortKCell{}, SortCell{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKVariable{}, SortKItem{}} (From:SortKVariable{}))) [subsort{SortKVariable{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortParamsCell{}, SortCell{}} (From:SortParamsCell{}))) [subsort{SortParamsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInt{}, SortKItem{}} (From:SortInt{}))) [subsort{SortInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (From:SortGeneratedTopCellFragment{}))) [subsort{SortGeneratedTopCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTempCellOpt{}, \equals{SortTempCellOpt{}, R} (Val:SortTempCellOpt{}, inj{SortTempCell{}, SortTempCellOpt{}} (From:SortTempCell{}))) [subsort{SortTempCell{}, SortTempCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortThreadCell{}, SortKItem{}} (From:SortThreadCell{}))) [subsort{SortThreadCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBExp{}, SortKItem{}} (From:SortBExp{}))) [subsort{SortBExp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortEnvCell{}, SortKItem{}} (From:SortEnvCell{}))) [subsort{SortEnvCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIdCell{}, SortKItem{}} (From:SortIdCell{}))) [subsort{SortIdCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTempCell{}, SortKItem{}} (From:SortTempCell{}))) [subsort{SortTempCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortBExp{}, SortStmt{}} (From:SortBExp{}))) [subsort{SortBExp{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortThreadCell{}, SortCell{}} (From:SortThreadCell{}))) [subsort{SortThreadCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStmt{}, SortKItem{}} (From:SortStmt{}))) [subsort{SortStmt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMap{}, SortKItem{}} (From:SortMap{}))) [subsort{SortMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortAExp{}, \equals{SortAExp{}, R} (Val:SortAExp{}, inj{SortString{}, SortAExp{}} (From:SortString{}))) [subsort{SortString{}, SortAExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortBlock{}, \equals{SortBlock{}, R} (Val:SortBlock{}, inj{SortStmt{}, SortBlock{}} (From:SortStmt{}))) [subsort{SortStmt{}, SortBlock{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDoWhileStmt{}, SortKItem{}} (From:SortDoWhileStmt{}))) [subsort{SortDoWhileStmt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKResult{}, \equals{SortKResult{}, R} (Val:SortKResult{}, inj{SortBool{}, SortKResult{}} (From:SortBool{}))) [subsort{SortBool{}, SortKResult{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOString{}, \equals{SortIOString{}, R} (Val:SortIOString{}, inj{SortIOError{}, SortIOString{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortIOString{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortThreadCellFragment{}, SortKItem{}} (From:SortThreadCellFragment{}))) [subsort{SortThreadCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFunctionsCell{}, SortKItem{}} (From:SortFunctionsCell{}))) [subsort{SortFunctionsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortForEachStmt{}, SortStmt{}} (From:SortForEachStmt{}))) [subsort{SortForEachStmt{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOFile{}, \equals{SortIOFile{}, R} (Val:SortIOFile{}, inj{SortIOError{}, SortIOFile{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortIOFile{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortForStmt{}, SortStmt{}} (From:SortForStmt{}))) [subsort{SortForStmt{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKResult{}, \equals{SortKResult{}, R} (Val:SortKResult{}, inj{SortString{}, SortKResult{}} (From:SortString{}))) [subsort{SortString{}, SortKResult{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIdList{}, SortKItem{}} (From:SortIdList{}))) [subsort{SortIdList{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLocCellOpt{}, SortKItem{}} (From:SortLocCellOpt{}))) [subsort{SortLocCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLocalEnvCell{}, SortKItem{}} (From:SortLocalEnvCell{}))) [subsort{SortLocalEnvCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortArrayList{}, SortKItem{}} (From:SortArrayList{}))) [subsort{SortArrayList{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortThreadCellMap{}, \equals{SortThreadCellMap{}, R} (Val:SortThreadCellMap{}, inj{SortThreadCell{}, SortThreadCellMap{}} (From:SortThreadCell{}))) [subsort{SortThreadCell{}, SortThreadCellMap{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortWhileStmt{}, SortStmt{}} (From:SortWhileStmt{}))) [subsort{SortWhileStmt{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortLocalEnvCellOpt{}, \equals{SortLocalEnvCellOpt{}, R} (Val:SortLocalEnvCellOpt{}, inj{SortLocalEnvCell{}, SortLocalEnvCellOpt{}} (From:SortLocalEnvCell{}))) [subsort{SortLocalEnvCell{}, SortLocalEnvCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, Lbl'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp{}(K0:SortBExp{}))) [functional{}()] // functional
  axiom{}\implies{SortBExp{}} (\and{SortBExp{}} (Lbl'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp{}(X0:SortBExp{}), Lbl'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp{}(Y0:SortBExp{})), Lbl'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp{}(\and{SortBExp{}} (X0:SortBExp{}, Y0:SortBExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp{}(X0:SortBExp{}), Lbl'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp{}(X0:SortBExp{}), Lbl'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(Y0:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp{}(X0:SortBExp{}), Lbl'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp{}(X0:SortBExp{}), Lbl'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp{}(X0:SortBExp{}), Lbl'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp{}(X0:SortBExp{}), Lbl'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp{}(X0:SortBExp{}), Lbl'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp{}(X0:SortBExp{}), Lbl'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(Y0:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'E2BIG{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EACCES{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EADDRINUSE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EADDRNOTAVAIL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EACCES{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EADDRINUSE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EADDRNOTAVAIL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EADDRINUSE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EADDRNOTAVAIL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EADDRNOTAVAIL{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EAFNOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EAGAIN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EALREADY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EBADF{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EBUSY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECHILD{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECONNABORTED{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECONNREFUSED{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECONNRESET{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EDEADLK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EDESTADDRREQ{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EDOM{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EEXIST{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EFAULT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EFBIG{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EHOSTDOWN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EHOSTUNREACH{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EINPROGRESS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EINTR{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EINVAL{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EIO{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EISCONN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EISDIR{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ELOOP{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EMFILE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EMLINK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EMSGSIZE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENAMETOOLONG{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENETDOWN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENETRESET{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENETUNREACH{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENFILE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOBUFS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENODEV{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOENT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOEXEC{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOLCK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOMEM{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOPROTOOPT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOSPC{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOSYS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTCONN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTDIR{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTEMPTY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTSOCK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTTY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENXIO{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EOF{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EOPNOTSUPP{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EOVERFLOW{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPERM{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPFNOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPIPE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPROTONOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPROTOTYPE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ERANGE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EROFS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESHUTDOWN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESOCKTNOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESPIPE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESRCH{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ETIMEDOUT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ETOOMANYREFS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EWOULDBLOCK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EWOULDBLOCK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EWOULDBLOCK{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EWOULDBLOCK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EXDEV{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EXDEV{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EXDEV{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(Y0:SortK{})), Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(Y0:SortK{}, Y1:SortK{})), Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}), \and{SortK{}} (X1:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R, SortSort} \exists{R} (Val:SortSort, \equals{SortSort, R} (Val:SortSort, Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(K0:SortBool{}, K1:SortSort, K2:SortSort))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'logToFile{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'noParse{}(K0:SortString{}))) [functional{}()] // functional
  axiom{}\implies{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'noParse{}(X0:SortString{}), Lbl'Hash'noParse{}(Y0:SortString{})), Lbl'Hash'noParse{}(\and{SortString{}} (X0:SortString{}, Y0:SortString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'noParse{}(X0:SortString{}), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'stderr'Unds'K-IO'Unds'Int{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'systemResult{}(K0:SortInt{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{})), Lbl'Hash'systemResult{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortString{}} (X1:SortString{}, Y1:SortString{}), \and{SortString{}} (X2:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIOFile{}, \equals{SortIOFile{}, R} (Val:SortIOFile{}, Lbl'Hash'tempFile{}(K0:SortString{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIOFile{}} (\and{SortIOFile{}} (Lbl'Hash'tempFile{}(X0:SortString{}, X1:SortInt{}), Lbl'Hash'tempFile{}(Y0:SortString{}, Y1:SortInt{})), Lbl'Hash'tempFile{}(\and{SortString{}} (X0:SortString{}, Y0:SortString{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'unknownIOError{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'unknownIOError{}(X0:SortInt{}), Lbl'Hash'unknownIOError{}(Y0:SortInt{})), Lbl'Hash'unknownIOError{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Stop'List{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIdList{}, \equals{SortIdList{}, R} (Val:SortIdList{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList'QuotRBraUnds'IdList{}())) [functional{}()] // functional
  axiom{}\not{SortIdList{}} (\and{SortIdList{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList'QuotRBraUnds'IdList{}(), Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList{}(Y0:SortId{}, Y1:SortIdList{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIntList{}, \equals{SortIntList{}, R} (Val:SortIntList{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IntList'Unds'Int'Unds'IntList'QuotRBraUnds'IntList{}())) [functional{}()] // functional
  axiom{}\not{SortIntList{}} (\and{SortIntList{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IntList'Unds'Int'Unds'IntList'QuotRBraUnds'IntList{}(), Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IntList'Unds'Int'Unds'IntList{}(Y0:SortInt{}, Y1:SortIntList{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortParams{}, \equals{SortParams{}, R} (Val:SortParams{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'Params'Unds'Id'Unds'Params'QuotRBraUnds'Params{}())) [functional{}()] // functional
  axiom{}\not{SortParams{}} (\and{SortParams{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'Params'Unds'Id'Unds'Params'QuotRBraUnds'Params{}(), Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'Params'Unds'Id'Unds'Params{}(Y0:SortId{}, Y1:SortParams{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStringList{}, \equals{SortStringList{}, R} (Val:SortStringList{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'StringList'Unds'String'Unds'StringList'QuotRBraUnds'StringList{}())) [functional{}()] // functional
  axiom{}\not{SortStringList{}} (\and{SortStringList{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'StringList'Unds'String'Unds'StringList'QuotRBraUnds'StringList{}(), Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'StringList'Unds'String'Unds'StringList{}(Y0:SortString{}, Y1:SortStringList{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Stop'Map{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'Stop'Set{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTCell{}, \equals{SortTCell{}, R} (Val:SortTCell{}, Lbl'-LT-'T'-GT-'{}(K0:SortKCell{}, K1:SortOutCell{}, K2:SortFunctionsCell{}, K3:SortEnvCell{}, K4:SortStoreCell{}, K5:SortLocCell{}))) [functional{}()] // functional
  axiom{}\implies{SortTCell{}} (\and{SortTCell{}} (Lbl'-LT-'T'-GT-'{}(X0:SortKCell{}, X1:SortOutCell{}, X2:SortFunctionsCell{}, X3:SortEnvCell{}, X4:SortStoreCell{}, X5:SortLocCell{}), Lbl'-LT-'T'-GT-'{}(Y0:SortKCell{}, Y1:SortOutCell{}, Y2:SortFunctionsCell{}, Y3:SortEnvCell{}, Y4:SortStoreCell{}, Y5:SortLocCell{})), Lbl'-LT-'T'-GT-'{}(\and{SortKCell{}} (X0:SortKCell{}, Y0:SortKCell{}), \and{SortOutCell{}} (X1:SortOutCell{}, Y1:SortOutCell{}), \and{SortFunctionsCell{}} (X2:SortFunctionsCell{}, Y2:SortFunctionsCell{}), \and{SortEnvCell{}} (X3:SortEnvCell{}, Y3:SortEnvCell{}), \and{SortStoreCell{}} (X4:SortStoreCell{}, Y4:SortStoreCell{}), \and{SortLocCell{}} (X5:SortLocCell{}, Y5:SortLocCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTCellFragment{}, \equals{SortTCellFragment{}, R} (Val:SortTCellFragment{}, Lbl'-LT-'T'-GT-'-fragment{}(K0:SortKCellOpt{}, K1:SortOutCellOpt{}, K2:SortFunctionsCellOpt{}, K3:SortEnvCellOpt{}, K4:SortStoreCellOpt{}, K5:SortLocCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortTCellFragment{}} (\and{SortTCellFragment{}} (Lbl'-LT-'T'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortOutCellOpt{}, X2:SortFunctionsCellOpt{}, X3:SortEnvCellOpt{}, X4:SortStoreCellOpt{}, X5:SortLocCellOpt{}), Lbl'-LT-'T'-GT-'-fragment{}(Y0:SortKCellOpt{}, Y1:SortOutCellOpt{}, Y2:SortFunctionsCellOpt{}, Y3:SortEnvCellOpt{}, Y4:SortStoreCellOpt{}, Y5:SortLocCellOpt{})), Lbl'-LT-'T'-GT-'-fragment{}(\and{SortKCellOpt{}} (X0:SortKCellOpt{}, Y0:SortKCellOpt{}), \and{SortOutCellOpt{}} (X1:SortOutCellOpt{}, Y1:SortOutCellOpt{}), \and{SortFunctionsCellOpt{}} (X2:SortFunctionsCellOpt{}, Y2:SortFunctionsCellOpt{}), \and{SortEnvCellOpt{}} (X3:SortEnvCellOpt{}, Y3:SortEnvCellOpt{}), \and{SortStoreCellOpt{}} (X4:SortStoreCellOpt{}, Y4:SortStoreCellOpt{}), \and{SortLocCellOpt{}} (X5:SortLocCellOpt{}, Y5:SortLocCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortEnvCell{}, \equals{SortEnvCell{}, R} (Val:SortEnvCell{}, Lbl'-LT-'env'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortEnvCell{}} (\and{SortEnvCell{}} (Lbl'-LT-'env'-GT-'{}(X0:SortMap{}), Lbl'-LT-'env'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'env'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFunctionsCell{}, \equals{SortFunctionsCell{}, R} (Val:SortFunctionsCell{}, Lbl'-LT-'functions'-GT-'{}(K0:SortThreadCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortFunctionsCell{}} (\and{SortFunctionsCell{}} (Lbl'-LT-'functions'-GT-'{}(X0:SortThreadCellMap{}), Lbl'-LT-'functions'-GT-'{}(Y0:SortThreadCellMap{})), Lbl'-LT-'functions'-GT-'{}(\and{SortThreadCellMap{}} (X0:SortThreadCellMap{}, Y0:SortThreadCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFunctionsCellFragment{}, \equals{SortFunctionsCellFragment{}, R} (Val:SortFunctionsCellFragment{}, Lbl'-LT-'functions'-GT-'-fragment{}(K0:SortThreadCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortFunctionsCellFragment{}} (\and{SortFunctionsCellFragment{}} (Lbl'-LT-'functions'-GT-'-fragment{}(X0:SortThreadCellMap{}), Lbl'-LT-'functions'-GT-'-fragment{}(Y0:SortThreadCellMap{})), Lbl'-LT-'functions'-GT-'-fragment{}(\and{SortThreadCellMap{}} (X0:SortThreadCellMap{}, Y0:SortThreadCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedCounterCell{}, \equals{SortGeneratedCounterCell{}, R} (Val:SortGeneratedCounterCell{}, Lbl'-LT-'generatedCounter'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedCounterCell{}} (\and{SortGeneratedCounterCell{}} (Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{}), Lbl'-LT-'generatedCounter'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'generatedCounter'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCell{}, \equals{SortGeneratedTopCell{}, R} (Val:SortGeneratedTopCell{}, Lbl'-LT-'generatedTop'-GT-'{}(K0:SortTCell{}, K1:SortGeneratedCounterCell{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCell{}} (\and{SortGeneratedTopCell{}} (Lbl'-LT-'generatedTop'-GT-'{}(X0:SortTCell{}, X1:SortGeneratedCounterCell{}), Lbl'-LT-'generatedTop'-GT-'{}(Y0:SortTCell{}, Y1:SortGeneratedCounterCell{})), Lbl'-LT-'generatedTop'-GT-'{}(\and{SortTCell{}} (X0:SortTCell{}, Y0:SortTCell{}), \and{SortGeneratedCounterCell{}} (X1:SortGeneratedCounterCell{}, Y1:SortGeneratedCounterCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCellFragment{}, \equals{SortGeneratedTopCellFragment{}, R} (Val:SortGeneratedTopCellFragment{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(K0:SortTCellOpt{}, K1:SortGeneratedCounterCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCellFragment{}} (\and{SortGeneratedTopCellFragment{}} (Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortTCellOpt{}, X1:SortGeneratedCounterCellOpt{}), Lbl'-LT-'generatedTop'-GT-'-fragment{}(Y0:SortTCellOpt{}, Y1:SortGeneratedCounterCellOpt{})), Lbl'-LT-'generatedTop'-GT-'-fragment{}(\and{SortTCellOpt{}} (X0:SortTCellOpt{}, Y0:SortTCellOpt{}), \and{SortGeneratedCounterCellOpt{}} (X1:SortGeneratedCounterCellOpt{}, Y1:SortGeneratedCounterCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIdCell{}, \equals{SortIdCell{}, R} (Val:SortIdCell{}, Lbl'-LT-'id'-GT-'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortIdCell{}} (\and{SortIdCell{}} (Lbl'-LT-'id'-GT-'{}(X0:SortK{}), Lbl'-LT-'id'-GT-'{}(Y0:SortK{})), Lbl'-LT-'id'-GT-'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKCell{}, \equals{SortKCell{}, R} (Val:SortKCell{}, Lbl'-LT-'k'-GT-'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKCell{}} (\and{SortKCell{}} (Lbl'-LT-'k'-GT-'{}(X0:SortK{}), Lbl'-LT-'k'-GT-'{}(Y0:SortK{})), Lbl'-LT-'k'-GT-'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortLocCell{}, \equals{SortLocCell{}, R} (Val:SortLocCell{}, Lbl'-LT-'loc'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortLocCell{}} (\and{SortLocCell{}} (Lbl'-LT-'loc'-GT-'{}(X0:SortInt{}), Lbl'-LT-'loc'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'loc'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortLocalEnvCell{}, \equals{SortLocalEnvCell{}, R} (Val:SortLocalEnvCell{}, Lbl'-LT-'localEnv'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortLocalEnvCell{}} (\and{SortLocalEnvCell{}} (Lbl'-LT-'localEnv'-GT-'{}(X0:SortMap{}), Lbl'-LT-'localEnv'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'localEnv'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortOutCell{}, \equals{SortOutCell{}, R} (Val:SortOutCell{}, Lbl'-LT-'out'-GT-'{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{}\implies{SortOutCell{}} (\and{SortOutCell{}} (Lbl'-LT-'out'-GT-'{}(X0:SortSet{}), Lbl'-LT-'out'-GT-'{}(Y0:SortSet{})), Lbl'-LT-'out'-GT-'{}(\and{SortSet{}} (X0:SortSet{}, Y0:SortSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortParamsCell{}, \equals{SortParamsCell{}, R} (Val:SortParamsCell{}, Lbl'-LT-'params'-GT-'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortParamsCell{}} (\and{SortParamsCell{}} (Lbl'-LT-'params'-GT-'{}(X0:SortK{}), Lbl'-LT-'params'-GT-'{}(Y0:SortK{})), Lbl'-LT-'params'-GT-'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortScopeCell{}, \equals{SortScopeCell{}, R} (Val:SortScopeCell{}, Lbl'-LT-'scope'-GT-'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortScopeCell{}} (\and{SortScopeCell{}} (Lbl'-LT-'scope'-GT-'{}(X0:SortK{}), Lbl'-LT-'scope'-GT-'{}(Y0:SortK{})), Lbl'-LT-'scope'-GT-'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortStoreCell{}, \equals{SortStoreCell{}, R} (Val:SortStoreCell{}, Lbl'-LT-'store'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortStoreCell{}} (\and{SortStoreCell{}} (Lbl'-LT-'store'-GT-'{}(X0:SortMap{}), Lbl'-LT-'store'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'store'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTempCell{}, \equals{SortTempCell{}, R} (Val:SortTempCell{}, Lbl'-LT-'temp'-GT-'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortTempCell{}} (\and{SortTempCell{}} (Lbl'-LT-'temp'-GT-'{}(X0:SortK{}), Lbl'-LT-'temp'-GT-'{}(Y0:SortK{})), Lbl'-LT-'temp'-GT-'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortThreadCell{}, \equals{SortThreadCell{}, R} (Val:SortThreadCell{}, Lbl'-LT-'thread'-GT-'{}(K0:SortIdCell{}, K1:SortScopeCell{}, K2:SortParamsCell{}, K3:SortTempCell{}, K4:SortLocalEnvCell{}))) [functional{}()] // functional
  axiom{}\implies{SortThreadCell{}} (\and{SortThreadCell{}} (Lbl'-LT-'thread'-GT-'{}(X0:SortIdCell{}, X1:SortScopeCell{}, X2:SortParamsCell{}, X3:SortTempCell{}, X4:SortLocalEnvCell{}), Lbl'-LT-'thread'-GT-'{}(Y0:SortIdCell{}, Y1:SortScopeCell{}, Y2:SortParamsCell{}, Y3:SortTempCell{}, Y4:SortLocalEnvCell{})), Lbl'-LT-'thread'-GT-'{}(\and{SortIdCell{}} (X0:SortIdCell{}, Y0:SortIdCell{}), \and{SortScopeCell{}} (X1:SortScopeCell{}, Y1:SortScopeCell{}), \and{SortParamsCell{}} (X2:SortParamsCell{}, Y2:SortParamsCell{}), \and{SortTempCell{}} (X3:SortTempCell{}, Y3:SortTempCell{}), \and{SortLocalEnvCell{}} (X4:SortLocalEnvCell{}, Y4:SortLocalEnvCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortThreadCellFragment{}, \equals{SortThreadCellFragment{}, R} (Val:SortThreadCellFragment{}, Lbl'-LT-'thread'-GT-'-fragment{}(K0:SortIdCellOpt{}, K1:SortScopeCellOpt{}, K2:SortParamsCellOpt{}, K3:SortTempCellOpt{}, K4:SortLocalEnvCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortThreadCellFragment{}} (\and{SortThreadCellFragment{}} (Lbl'-LT-'thread'-GT-'-fragment{}(X0:SortIdCellOpt{}, X1:SortScopeCellOpt{}, X2:SortParamsCellOpt{}, X3:SortTempCellOpt{}, X4:SortLocalEnvCellOpt{}), Lbl'-LT-'thread'-GT-'-fragment{}(Y0:SortIdCellOpt{}, Y1:SortScopeCellOpt{}, Y2:SortParamsCellOpt{}, Y3:SortTempCellOpt{}, Y4:SortLocalEnvCellOpt{})), Lbl'-LT-'thread'-GT-'-fragment{}(\and{SortIdCellOpt{}} (X0:SortIdCellOpt{}, Y0:SortIdCellOpt{}), \and{SortScopeCellOpt{}} (X1:SortScopeCellOpt{}, Y1:SortScopeCellOpt{}), \and{SortParamsCellOpt{}} (X2:SortParamsCellOpt{}, Y2:SortParamsCellOpt{}), \and{SortTempCellOpt{}} (X3:SortTempCellOpt{}, Y3:SortTempCellOpt{}), \and{SortLocalEnvCellOpt{}} (X4:SortLocalEnvCellOpt{}, Y4:SortLocalEnvCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortVarType{}, \equals{SortVarType{}, R} (Val:SortVarType{}, LblBoolean'Unds'KT-SYNTAX'Unds'VarType{}())) [functional{}()] // functional
  axiom{}\not{SortVarType{}} (\and{SortVarType{}} (LblBoolean'Unds'KT-SYNTAX'Unds'VarType{}(), LblInt'Unds'KT-SYNTAX'Unds'VarType{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortVarType{}} (\and{SortVarType{}} (LblBoolean'Unds'KT-SYNTAX'Unds'VarType{}(), LblString'Unds'KT-SYNTAX'Unds'VarType{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblFloat2String'LParUndsRParUnds'STRING'Unds'String'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblId2String'LParUndsRParUnds'ID-SYNTAX'Unds'String'Unds'Id{}(K0:SortId{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblInt2String'LParUndsRParUnds'STRING'Unds'String'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortVarType{}, \equals{SortVarType{}, R} (Val:SortVarType{}, LblInt'Unds'KT-SYNTAX'Unds'VarType{}())) [functional{}()] // functional
  axiom{}\not{SortVarType{}} (\and{SortVarType{}} (LblInt'Unds'KT-SYNTAX'Unds'VarType{}(), LblString'Unds'KT-SYNTAX'Unds'VarType{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, LblListItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblMap'Coln'update{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSet'Coln'difference{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblSet'Coln'in{}(K0:SortKItem{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSetItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSkip{}, \equals{SortSkip{}, R} (Val:SortSkip{}, LblSkip'Unds'KT-SYNTAX'Unds'Skip{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortId{}, \equals{SortId{}, R} (Val:SortId{}, LblString2Id'LParUndsRParUnds'ID-SYNTAX'Unds'Id'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortVarType{}, \equals{SortVarType{}, R} (Val:SortVarType{}, LblString'Unds'KT-SYNTAX'Unds'VarType{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortArrayList{}, \equals{SortArrayList{}, R} (Val:SortArrayList{}, Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'IdList{}(K0:SortIdList{}))) [functional{}()] // functional
  axiom{}\implies{SortArrayList{}} (\and{SortArrayList{}} (Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'IdList{}(X0:SortIdList{}), Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'IdList{}(Y0:SortIdList{})), Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'IdList{}(\and{SortIdList{}} (X0:SortIdList{}, Y0:SortIdList{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortArrayList{}} (\and{SortArrayList{}} (Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'IdList{}(X0:SortIdList{}), Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'IntList{}(Y0:SortIntList{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortArrayList{}} (\and{SortArrayList{}} (Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'IdList{}(X0:SortIdList{}), Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'StringList{}(Y0:SortStringList{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortArrayList{}, \equals{SortArrayList{}, R} (Val:SortArrayList{}, Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'IntList{}(K0:SortIntList{}))) [functional{}()] // functional
  axiom{}\implies{SortArrayList{}} (\and{SortArrayList{}} (Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'IntList{}(X0:SortIntList{}), Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'IntList{}(Y0:SortIntList{})), Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'IntList{}(\and{SortIntList{}} (X0:SortIntList{}, Y0:SortIntList{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortArrayList{}} (\and{SortArrayList{}} (Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'IntList{}(X0:SortIntList{}), Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'StringList{}(Y0:SortStringList{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortArrayList{}, \equals{SortArrayList{}, R} (Val:SortArrayList{}, Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'StringList{}(K0:SortStringList{}))) [functional{}()] // functional
  axiom{}\implies{SortArrayList{}} (\and{SortArrayList{}} (Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'StringList{}(X0:SortStringList{}), Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'StringList{}(Y0:SortStringList{})), Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'StringList{}(\and{SortStringList{}} (X0:SortStringList{}, Y0:SortStringList{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, Lbl'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{})), Lbl'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(Y0:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(Y0:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, Lbl'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(K0:SortBExp{}, K1:SortBExp{}))) [functional{}()] // functional
  axiom{}\implies{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(X0:SortBExp{}, X1:SortBExp{}), Lbl'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(Y0:SortBExp{}, Y1:SortBExp{})), Lbl'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(\and{SortBExp{}} (X0:SortBExp{}, Y0:SortBExp{}), \and{SortBExp{}} (X1:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(X0:SortBExp{}, X1:SortBExp{}), Lbl'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(X0:SortBExp{}, X1:SortBExp{}), Lbl'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(X0:SortBExp{}, X1:SortBExp{}), Lbl'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(X0:SortBExp{}, X1:SortBExp{}), Lbl'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(X0:SortBExp{}, X1:SortBExp{}), Lbl'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(X0:SortBExp{}, X1:SortBExp{}), Lbl'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(Y0:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsAnd-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFuncCall{}, \equals{SortFuncCall{}, R} (Val:SortFuncCall{}, Lbl'UndsLParUndsRParUnds'KT-SYNTAX'Unds'FuncCall'Unds'Id'Unds'IntList{}(K0:SortId{}, K1:SortIntList{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncCall{}} (\and{SortFuncCall{}} (Lbl'UndsLParUndsRParUnds'KT-SYNTAX'Unds'FuncCall'Unds'Id'Unds'IntList{}(X0:SortId{}, X1:SortIntList{}), Lbl'UndsLParUndsRParUnds'KT-SYNTAX'Unds'FuncCall'Unds'Id'Unds'IntList{}(Y0:SortId{}, Y1:SortIntList{})), Lbl'UndsLParUndsRParUnds'KT-SYNTAX'Unds'FuncCall'Unds'Id'Unds'IntList{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortIntList{}} (X1:SortIntList{}, Y1:SortIntList{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortFuncCall{}} (\and{SortFuncCall{}} (Lbl'UndsLParUndsRParUnds'KT-SYNTAX'Unds'FuncCall'Unds'Id'Unds'IntList{}(X0:SortId{}, X1:SortIntList{}), Lbl'UndsLParUndsRParUnds'KT-SYNTAX'Unds'FuncCall'Unds'Id'Unds'StringList{}(Y0:SortId{}, Y1:SortStringList{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFuncCall{}, \equals{SortFuncCall{}, R} (Val:SortFuncCall{}, Lbl'UndsLParUndsRParUnds'KT-SYNTAX'Unds'FuncCall'Unds'Id'Unds'StringList{}(K0:SortId{}, K1:SortStringList{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncCall{}} (\and{SortFuncCall{}} (Lbl'UndsLParUndsRParUnds'KT-SYNTAX'Unds'FuncCall'Unds'Id'Unds'StringList{}(X0:SortId{}, X1:SortStringList{}), Lbl'UndsLParUndsRParUnds'KT-SYNTAX'Unds'FuncCall'Unds'Id'Unds'StringList{}(Y0:SortId{}, Y1:SortStringList{})), Lbl'UndsLParUndsRParUnds'KT-SYNTAX'Unds'FuncCall'Unds'Id'Unds'StringList{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortStringList{}} (X1:SortStringList{}, Y1:SortStringList{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsStar'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortAExp{}, \equals{SortAExp{}, R} (Val:SortAExp{}, Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{})), Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(Y0:SortInt{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp{}(Y0:SortString{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAExpMod{}, \equals{SortAExpMod{}, R} (Val:SortAExpMod{}, Lbl'UndsPlusPlusUnds'KT-SYNTAX'Unds'AExpMod'Unds'Id{}(K0:SortId{}))) [functional{}()] // functional
  axiom{}\implies{SortAExpMod{}} (\and{SortAExpMod{}} (Lbl'UndsPlusPlusUnds'KT-SYNTAX'Unds'AExpMod'Unds'Id{}(X0:SortId{}), Lbl'UndsPlusPlusUnds'KT-SYNTAX'Unds'AExpMod'Unds'Id{}(Y0:SortId{})), Lbl'UndsPlusPlusUnds'KT-SYNTAX'Unds'AExpMod'Unds'Id{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAExpMod{}} (\and{SortAExpMod{}} (Lbl'UndsPlusPlusUnds'KT-SYNTAX'Unds'AExpMod'Unds'Id{}(X0:SortId{}), Lbl'Unds'--'Unds'KT-SYNTAX'Unds'AExpMod'Unds'Id{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPlus'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortAExp{}, \equals{SortAExp{}, R} (Val:SortAExp{}, Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(K0:SortInt{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(X0:SortInt{}, X1:SortAExp{}), Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(Y0:SortInt{}, Y1:SortAExp{})), Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(X0:SortInt{}, X1:SortAExp{}), Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp{}(Y0:SortString{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(X0:SortInt{}, X1:SortAExp{}), Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(X0:SortInt{}, X1:SortAExp{}), Lbl'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAExp{}, \equals{SortAExp{}, R} (Val:SortAExp{}, Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp{}(K0:SortString{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp{}(X0:SortString{}, X1:SortAExp{}), Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp{}(Y0:SortString{}, Y1:SortAExp{})), Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp{}(\and{SortString{}} (X0:SortString{}, Y0:SortString{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp{}(X0:SortString{}, X1:SortAExp{}), Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp{}(X0:SortString{}, X1:SortAExp{}), Lbl'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIdExp{}, \equals{SortIdExp{}, R} (Val:SortIdExp{}, Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'IdExp'Unds'Id'Unds'Id{}(K0:SortId{}, K1:SortId{}))) [functional{}()] // functional
  axiom{}\implies{SortIdExp{}} (\and{SortIdExp{}} (Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'IdExp'Unds'Id'Unds'Id{}(X0:SortId{}, X1:SortId{}), Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'IdExp'Unds'Id'Unds'Id{}(Y0:SortId{}, Y1:SortId{})), Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'IdExp'Unds'Id'Unds'Id{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortId{}} (X1:SortId{}, Y1:SortId{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIdList{}, \equals{SortIdList{}, R} (Val:SortIdList{}, Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList{}(K0:SortId{}, K1:SortIdList{}))) [functional{}()] // functional
  axiom{}\implies{SortIdList{}} (\and{SortIdList{}} (Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList{}(X0:SortId{}, X1:SortIdList{}), Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList{}(Y0:SortId{}, Y1:SortIdList{})), Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortIdList{}} (X1:SortIdList{}, Y1:SortIdList{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIntList{}, \equals{SortIntList{}, R} (Val:SortIntList{}, Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IntList'Unds'Int'Unds'IntList{}(K0:SortInt{}, K1:SortIntList{}))) [functional{}()] // functional
  axiom{}\implies{SortIntList{}} (\and{SortIntList{}} (Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IntList'Unds'Int'Unds'IntList{}(X0:SortInt{}, X1:SortIntList{}), Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IntList'Unds'Int'Unds'IntList{}(Y0:SortInt{}, Y1:SortIntList{})), Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IntList'Unds'Int'Unds'IntList{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortIntList{}} (X1:SortIntList{}, Y1:SortIntList{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortParams{}, \equals{SortParams{}, R} (Val:SortParams{}, Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'Params'Unds'Id'Unds'Params{}(K0:SortId{}, K1:SortParams{}))) [functional{}()] // functional
  axiom{}\implies{SortParams{}} (\and{SortParams{}} (Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'Params'Unds'Id'Unds'Params{}(X0:SortId{}, X1:SortParams{}), Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'Params'Unds'Id'Unds'Params{}(Y0:SortId{}, Y1:SortParams{})), Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'Params'Unds'Id'Unds'Params{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortParams{}} (X1:SortParams{}, Y1:SortParams{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortStringList{}, \equals{SortStringList{}, R} (Val:SortStringList{}, Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'StringList'Unds'String'Unds'StringList{}(K0:SortString{}, K1:SortStringList{}))) [functional{}()] // functional
  axiom{}\implies{SortStringList{}} (\and{SortStringList{}} (Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'StringList'Unds'String'Unds'StringList{}(X0:SortString{}, X1:SortStringList{}), Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'StringList'Unds'String'Unds'StringList{}(Y0:SortString{}, Y1:SortStringList{})), Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'StringList'Unds'String'Unds'StringList{}(\and{SortString{}} (X0:SortString{}, Y0:SortString{}), \and{SortStringList{}} (X1:SortStringList{}, Y1:SortStringList{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortAExpMod{}, \equals{SortAExpMod{}, R} (Val:SortAExpMod{}, Lbl'Unds'--'Unds'KT-SYNTAX'Unds'AExpMod'Unds'Id{}(K0:SortId{}))) [functional{}()] // functional
  axiom{}\implies{SortAExpMod{}} (\and{SortAExpMod{}} (Lbl'Unds'--'Unds'KT-SYNTAX'Unds'AExpMod'Unds'Id{}(X0:SortId{}), Lbl'Unds'--'Unds'KT-SYNTAX'Unds'AExpMod'Unds'Id{}(Y0:SortId{})), Lbl'Unds'--'Unds'KT-SYNTAX'Unds'AExpMod'Unds'Id{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'-Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortAExp{}, \equals{SortAExp{}, R} (Val:SortAExp{}, Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortAExp{}} (\and{SortAExp{}} (Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{})), Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAExp{}, \equals{SortAExp{}, R} (Val:SortAExp{}, Lbl'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{})), Lbl'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, Lbl'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{})), Lbl'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(Y0:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, Lbl'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{})), Lbl'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(Y0:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, Lbl'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{})), Lbl'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(Y0:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAssigner{}, \equals{SortAssigner{}, R} (Val:SortAssigner{}, Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(K0:SortVarDeclaration{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortAssigner{}} (\and{SortAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(X0:SortVarDeclaration{}, X1:SortAExp{}), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(Y0:SortVarDeclaration{}, Y1:SortAExp{})), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(\and{SortVarDeclaration{}} (X0:SortVarDeclaration{}, Y0:SortVarDeclaration{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAssigner{}} (\and{SortAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(X0:SortVarDeclaration{}, X1:SortAExp{}), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'ArrayList{}(Y0:SortVarDeclaration{}, Y1:SortArrayList{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAssigner{}} (\and{SortAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(X0:SortVarDeclaration{}, X1:SortAExp{}), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp{}(Y0:SortVarDeclaration{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAssigner{}} (\and{SortAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(X0:SortVarDeclaration{}, X1:SortAExp{}), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'IdExp{}(Y0:SortVarDeclaration{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAssigner{}, \equals{SortAssigner{}, R} (Val:SortAssigner{}, Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'ArrayList{}(K0:SortVarDeclaration{}, K1:SortArrayList{}))) [functional{}()] // functional
  axiom{}\implies{SortAssigner{}} (\and{SortAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'ArrayList{}(X0:SortVarDeclaration{}, X1:SortArrayList{}), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'ArrayList{}(Y0:SortVarDeclaration{}, Y1:SortArrayList{})), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'ArrayList{}(\and{SortVarDeclaration{}} (X0:SortVarDeclaration{}, Y0:SortVarDeclaration{}), \and{SortArrayList{}} (X1:SortArrayList{}, Y1:SortArrayList{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAssigner{}} (\and{SortAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'ArrayList{}(X0:SortVarDeclaration{}, X1:SortArrayList{}), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp{}(Y0:SortVarDeclaration{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAssigner{}} (\and{SortAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'ArrayList{}(X0:SortVarDeclaration{}, X1:SortArrayList{}), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'IdExp{}(Y0:SortVarDeclaration{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAssigner{}, \equals{SortAssigner{}, R} (Val:SortAssigner{}, Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp{}(K0:SortVarDeclaration{}, K1:SortBExp{}))) [functional{}()] // functional
  axiom{}\implies{SortAssigner{}} (\and{SortAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp{}(X0:SortVarDeclaration{}, X1:SortBExp{}), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp{}(Y0:SortVarDeclaration{}, Y1:SortBExp{})), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp{}(\and{SortVarDeclaration{}} (X0:SortVarDeclaration{}, Y0:SortVarDeclaration{}), \and{SortBExp{}} (X1:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAssigner{}} (\and{SortAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp{}(X0:SortVarDeclaration{}, X1:SortBExp{}), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'IdExp{}(Y0:SortVarDeclaration{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAssigner{}, \equals{SortAssigner{}, R} (Val:SortAssigner{}, Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'IdExp{}(K0:SortVarDeclaration{}, K1:SortIdExp{}))) [functional{}()] // functional
  axiom{}\implies{SortAssigner{}} (\and{SortAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'IdExp{}(X0:SortVarDeclaration{}, X1:SortIdExp{}), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'IdExp{}(Y0:SortVarDeclaration{}, Y1:SortIdExp{})), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'IdExp{}(\and{SortVarDeclaration{}} (X0:SortVarDeclaration{}, Y0:SortVarDeclaration{}), \and{SortIdExp{}} (X1:SortIdExp{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIdAssigner{}, \equals{SortIdAssigner{}, R} (Val:SortIdAssigner{}, Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(K0:SortId{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(Y0:SortId{}, Y1:SortAExp{})), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(Y0:SortId{}, Y1:SortArrayList{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(Y0:SortId{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(Y0:SortId{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(Y0:SortId{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(Y0:SortId{}, Y1:SortArrayList{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(Y0:SortId{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(Y0:SortId{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(Y0:SortId{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(Y0:SortId{}, Y1:SortArrayList{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(Y0:SortId{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(Y0:SortId{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIdAssigner{}, \equals{SortIdAssigner{}, R} (Val:SortIdAssigner{}, Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(K0:SortId{}, K1:SortArrayList{}))) [functional{}()] // functional
  axiom{}\implies{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(X0:SortId{}, X1:SortArrayList{}), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(Y0:SortId{}, Y1:SortArrayList{})), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortArrayList{}} (X1:SortArrayList{}, Y1:SortArrayList{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(X0:SortId{}, X1:SortArrayList{}), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(Y0:SortId{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(X0:SortId{}, X1:SortArrayList{}), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(Y0:SortId{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(X0:SortId{}, X1:SortArrayList{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(Y0:SortId{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(X0:SortId{}, X1:SortArrayList{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(Y0:SortId{}, Y1:SortArrayList{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(X0:SortId{}, X1:SortArrayList{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(Y0:SortId{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(X0:SortId{}, X1:SortArrayList{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(Y0:SortId{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(X0:SortId{}, X1:SortArrayList{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(Y0:SortId{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(X0:SortId{}, X1:SortArrayList{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(Y0:SortId{}, Y1:SortArrayList{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(X0:SortId{}, X1:SortArrayList{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(Y0:SortId{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(X0:SortId{}, X1:SortArrayList{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(Y0:SortId{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIdAssigner{}, \equals{SortIdAssigner{}, R} (Val:SortIdAssigner{}, Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(K0:SortId{}, K1:SortBExp{}))) [functional{}()] // functional
  axiom{}\implies{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(X0:SortId{}, X1:SortBExp{}), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(Y0:SortId{}, Y1:SortBExp{})), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortBExp{}} (X1:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(X0:SortId{}, X1:SortBExp{}), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(Y0:SortId{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(X0:SortId{}, X1:SortBExp{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(Y0:SortId{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(X0:SortId{}, X1:SortBExp{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(Y0:SortId{}, Y1:SortArrayList{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(X0:SortId{}, X1:SortBExp{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(Y0:SortId{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(X0:SortId{}, X1:SortBExp{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(Y0:SortId{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(X0:SortId{}, X1:SortBExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(Y0:SortId{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(X0:SortId{}, X1:SortBExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(Y0:SortId{}, Y1:SortArrayList{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(X0:SortId{}, X1:SortBExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(Y0:SortId{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(X0:SortId{}, X1:SortBExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(Y0:SortId{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIdAssigner{}, \equals{SortIdAssigner{}, R} (Val:SortIdAssigner{}, Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(K0:SortId{}, K1:SortIdExp{}))) [functional{}()] // functional
  axiom{}\implies{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(X0:SortId{}, X1:SortIdExp{}), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(Y0:SortId{}, Y1:SortIdExp{})), Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortIdExp{}} (X1:SortIdExp{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(X0:SortId{}, X1:SortIdExp{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(Y0:SortId{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(X0:SortId{}, X1:SortIdExp{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(Y0:SortId{}, Y1:SortArrayList{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(X0:SortId{}, X1:SortIdExp{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(Y0:SortId{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(X0:SortId{}, X1:SortIdExp{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(Y0:SortId{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(X0:SortId{}, X1:SortIdExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(Y0:SortId{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(X0:SortId{}, X1:SortIdExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(Y0:SortId{}, Y1:SortArrayList{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(X0:SortId{}, X1:SortIdExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(Y0:SortId{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(X0:SortId{}, X1:SortIdExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(Y0:SortId{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, Lbl'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{})), Lbl'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(Y0:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, Lbl'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{})), Lbl'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(Y0:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(K1:SortList{},K2:SortList{}),K3:SortList{}),Lbl'Unds'List'Unds'{}(K1:SortList{},Lbl'Unds'List'Unds'{}(K2:SortList{},K3:SortList{}))) [assoc{}()] // associativity
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(K:SortList{},Lbl'Stop'List{}()),K:SortList{}) [unit{}()] // right unit
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),K:SortList{}),K:SortList{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Unds'List'Unds'{}(K0:SortList{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Unds'Map'Unds'{}(K1:SortMap{},K2:SortMap{}),K3:SortMap{}),Lbl'Unds'Map'Unds'{}(K1:SortMap{},Lbl'Unds'Map'Unds'{}(K2:SortMap{},K3:SortMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(K1:SortMap{},K2:SortMap{}),Lbl'Unds'Map'Unds'{}(K2:SortMap{},K1:SortMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(K:SortMap{},Lbl'Stop'Map{}()),K:SortMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),K:SortMap{}),K:SortMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(K1:SortSet{},K2:SortSet{}),K3:SortSet{}),Lbl'Unds'Set'Unds'{}(K1:SortSet{},Lbl'Unds'Set'Unds'{}(K2:SortSet{},K3:SortSet{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K1:SortSet{},K2:SortSet{}),Lbl'Unds'Set'Unds'{}(K2:SortSet{},K1:SortSet{})) [comm{}()] // commutativity
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},K:SortSet{}),K:SortSet{}) [idem{}()] // idempotency
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},Lbl'Stop'Set{}()),K:SortSet{}) [unit{}()] // right unit
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Stop'Set{}(),K:SortSet{}),K:SortSet{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'Unds'Set'Unds'{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \equals{SortThreadCellMap{}, R} (Lbl'Unds'ThreadCellMap'Unds'{}(Lbl'Unds'ThreadCellMap'Unds'{}(K1:SortThreadCellMap{},K2:SortThreadCellMap{}),K3:SortThreadCellMap{}),Lbl'Unds'ThreadCellMap'Unds'{}(K1:SortThreadCellMap{},Lbl'Unds'ThreadCellMap'Unds'{}(K2:SortThreadCellMap{},K3:SortThreadCellMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortThreadCellMap{}, R} (Lbl'Unds'ThreadCellMap'Unds'{}(K1:SortThreadCellMap{},K2:SortThreadCellMap{}),Lbl'Unds'ThreadCellMap'Unds'{}(K2:SortThreadCellMap{},K1:SortThreadCellMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortThreadCellMap{}, R} (Lbl'Unds'ThreadCellMap'Unds'{}(K:SortThreadCellMap{},Lbl'Stop'ThreadCellMap{}()),K:SortThreadCellMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortThreadCellMap{}, R} (Lbl'Unds'ThreadCellMap'Unds'{}(Lbl'Stop'ThreadCellMap{}(),K:SortThreadCellMap{}),K:SortThreadCellMap{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(K0:SortMap{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortVarDeclaration{}, \equals{SortVarDeclaration{}, R} (Val:SortVarDeclaration{}, Lbl'UndsUndsColn'Boolean'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(K0:SortVarMod{}, K1:SortIdList{}))) [functional{}()] // functional
  axiom{}\implies{SortVarDeclaration{}} (\and{SortVarDeclaration{}} (Lbl'UndsUndsColn'Boolean'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(X0:SortVarMod{}, X1:SortIdList{}), Lbl'UndsUndsColn'Boolean'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(Y0:SortVarMod{}, Y1:SortIdList{})), Lbl'UndsUndsColn'Boolean'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(\and{SortVarMod{}} (X0:SortVarMod{}, Y0:SortVarMod{}), \and{SortIdList{}} (X1:SortIdList{}, Y1:SortIdList{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortVarDeclaration{}} (\and{SortVarDeclaration{}} (Lbl'UndsUndsColn'Boolean'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(X0:SortVarMod{}, X1:SortIdList{}), Lbl'UndsUndsColn'Int'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(Y0:SortVarMod{}, Y1:SortIdList{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortVarDeclaration{}} (\and{SortVarDeclaration{}} (Lbl'UndsUndsColn'Boolean'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(X0:SortVarMod{}, X1:SortIdList{}), Lbl'UndsUndsColn'String'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(Y0:SortVarMod{}, Y1:SortIdList{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortVarDeclaration{}, \equals{SortVarDeclaration{}, R} (Val:SortVarDeclaration{}, Lbl'UndsUndsColn'Int'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(K0:SortVarMod{}, K1:SortIdList{}))) [functional{}()] // functional
  axiom{}\implies{SortVarDeclaration{}} (\and{SortVarDeclaration{}} (Lbl'UndsUndsColn'Int'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(X0:SortVarMod{}, X1:SortIdList{}), Lbl'UndsUndsColn'Int'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(Y0:SortVarMod{}, Y1:SortIdList{})), Lbl'UndsUndsColn'Int'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(\and{SortVarMod{}} (X0:SortVarMod{}, Y0:SortVarMod{}), \and{SortIdList{}} (X1:SortIdList{}, Y1:SortIdList{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortVarDeclaration{}} (\and{SortVarDeclaration{}} (Lbl'UndsUndsColn'Int'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(X0:SortVarMod{}, X1:SortIdList{}), Lbl'UndsUndsColn'String'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(Y0:SortVarMod{}, Y1:SortIdList{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortVarDeclaration{}, \equals{SortVarDeclaration{}, R} (Val:SortVarDeclaration{}, Lbl'UndsUndsColn'String'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(K0:SortVarMod{}, K1:SortIdList{}))) [functional{}()] // functional
  axiom{}\implies{SortVarDeclaration{}} (\and{SortVarDeclaration{}} (Lbl'UndsUndsColn'String'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(X0:SortVarMod{}, X1:SortIdList{}), Lbl'UndsUndsColn'String'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(Y0:SortVarMod{}, Y1:SortIdList{})), Lbl'UndsUndsColn'String'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(\and{SortVarMod{}} (X0:SortVarMod{}, Y0:SortVarMod{}), \and{SortIdList{}} (X1:SortIdList{}, Y1:SortIdList{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbl'UndsUndsUnds'KT-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(K0:SortStmt{}, K1:SortStmt{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KT-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lbl'UndsUndsUnds'KT-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Y0:SortStmt{}, Y1:SortStmt{})), Lbl'UndsUndsUnds'KT-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(\and{SortStmt{}} (X0:SortStmt{}, Y0:SortStmt{}), \and{SortStmt{}} (X1:SortStmt{}, Y1:SortStmt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andThenBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'impliesBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(K0:SortKItem{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(K0:SortKItem{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orElseBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'xorBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'xorInt'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsPipe'-'-GT-Unds'{}(K0:SortKItem{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPipe'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, Lbl'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(K0:SortBExp{}, K1:SortBExp{}))) [functional{}()] // functional
  axiom{}\implies{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(X0:SortBExp{}, X1:SortBExp{}), Lbl'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(Y0:SortBExp{}, Y1:SortBExp{})), Lbl'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(\and{SortBExp{}} (X0:SortBExp{}, Y0:SortBExp{}), \and{SortBExp{}} (X1:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortDoWhileStmt{}, \equals{SortDoWhileStmt{}, R} (Val:SortDoWhileStmt{}, Lbldo'Unds'while'LParUndsRParUnds'KT-SYNTAX'Unds'DoWhileStmt'Unds'Block'Unds'BExp{}(K0:SortBlock{}, K1:SortBExp{}))) [functional{}()] // functional
  axiom{}\implies{SortDoWhileStmt{}} (\and{SortDoWhileStmt{}} (Lbldo'Unds'while'LParUndsRParUnds'KT-SYNTAX'Unds'DoWhileStmt'Unds'Block'Unds'BExp{}(X0:SortBlock{}, X1:SortBExp{}), Lbldo'Unds'while'LParUndsRParUnds'KT-SYNTAX'Unds'DoWhileStmt'Unds'Block'Unds'BExp{}(Y0:SortBlock{}, Y1:SortBExp{})), Lbldo'Unds'while'LParUndsRParUnds'KT-SYNTAX'Unds'DoWhileStmt'Unds'Block'Unds'BExp{}(\and{SortBlock{}} (X0:SortBlock{}, Y0:SortBlock{}), \and{SortBExp{}} (X1:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortElseIfStmt{}, \equals{SortElseIfStmt{}, R} (Val:SortElseIfStmt{}, Lblelse'UndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'Block{}(K0:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortElseIfStmt{}} (\and{SortElseIfStmt{}} (Lblelse'UndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'Block{}(X0:SortBlock{}), Lblelse'UndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'Block{}(Y0:SortBlock{})), Lblelse'UndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'Block{}(\and{SortBlock{}} (X0:SortBlock{}, Y0:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortElseIfStmt{}} (\and{SortElseIfStmt{}} (Lblelse'UndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'Block{}(X0:SortBlock{}), Lblelseif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'BExp'Unds'Block{}(Y0:SortBExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortElseIfStmt{}} (\and{SortElseIfStmt{}} (Lblelse'UndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'Block{}(X0:SortBlock{}), Lblelseif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt{}(Y0:SortBExp{}, Y1:SortBlock{}, Y2:SortElseIfStmt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortElseIfStmt{}, \equals{SortElseIfStmt{}, R} (Val:SortElseIfStmt{}, Lblelseif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'BExp'Unds'Block{}(K0:SortBExp{}, K1:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortElseIfStmt{}} (\and{SortElseIfStmt{}} (Lblelseif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'BExp'Unds'Block{}(X0:SortBExp{}, X1:SortBlock{}), Lblelseif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'BExp'Unds'Block{}(Y0:SortBExp{}, Y1:SortBlock{})), Lblelseif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'BExp'Unds'Block{}(\and{SortBExp{}} (X0:SortBExp{}, Y0:SortBExp{}), \and{SortBlock{}} (X1:SortBlock{}, Y1:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortElseIfStmt{}} (\and{SortElseIfStmt{}} (Lblelseif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'BExp'Unds'Block{}(X0:SortBExp{}, X1:SortBlock{}), Lblelseif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt{}(Y0:SortBExp{}, Y1:SortBlock{}, Y2:SortElseIfStmt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortElseIfStmt{}, \equals{SortElseIfStmt{}, R} (Val:SortElseIfStmt{}, Lblelseif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt{}(K0:SortBExp{}, K1:SortBlock{}, K2:SortElseIfStmt{}))) [functional{}()] // functional
  axiom{}\implies{SortElseIfStmt{}} (\and{SortElseIfStmt{}} (Lblelseif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt{}(X0:SortBExp{}, X1:SortBlock{}, X2:SortElseIfStmt{}), Lblelseif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt{}(Y0:SortBExp{}, Y1:SortBlock{}, Y2:SortElseIfStmt{})), Lblelseif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt{}(\and{SortBExp{}} (X0:SortBExp{}, Y0:SortBExp{}), \and{SortBlock{}} (X1:SortBlock{}, Y1:SortBlock{}), \and{SortElseIfStmt{}} (X2:SortElseIfStmt{}, Y2:SortElseIfStmt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortForStmt{}, \equals{SortForStmt{}, R} (Val:SortForStmt{}, Lblfor'LParUndsSClnUndsSClnUndsRParUndsUnds'KT-SYNTAX'Unds'ForStmt'Unds'IdAssigner'Unds'BExp'Unds'AExpMod'Unds'Block{}(K0:SortIdAssigner{}, K1:SortBExp{}, K2:SortAExpMod{}, K3:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortForStmt{}} (\and{SortForStmt{}} (Lblfor'LParUndsSClnUndsSClnUndsRParUndsUnds'KT-SYNTAX'Unds'ForStmt'Unds'IdAssigner'Unds'BExp'Unds'AExpMod'Unds'Block{}(X0:SortIdAssigner{}, X1:SortBExp{}, X2:SortAExpMod{}, X3:SortBlock{}), Lblfor'LParUndsSClnUndsSClnUndsRParUndsUnds'KT-SYNTAX'Unds'ForStmt'Unds'IdAssigner'Unds'BExp'Unds'AExpMod'Unds'Block{}(Y0:SortIdAssigner{}, Y1:SortBExp{}, Y2:SortAExpMod{}, Y3:SortBlock{})), Lblfor'LParUndsSClnUndsSClnUndsRParUndsUnds'KT-SYNTAX'Unds'ForStmt'Unds'IdAssigner'Unds'BExp'Unds'AExpMod'Unds'Block{}(\and{SortIdAssigner{}} (X0:SortIdAssigner{}, Y0:SortIdAssigner{}), \and{SortBExp{}} (X1:SortBExp{}, Y1:SortBExp{}), \and{SortAExpMod{}} (X2:SortAExpMod{}, Y2:SortAExpMod{}), \and{SortBlock{}} (X3:SortBlock{}, Y3:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortForEachStmt{}, \equals{SortForEachStmt{}, R} (Val:SortForEachStmt{}, Lblforeach'LParUnds'in'UndsRParUndsUnds'KT-SYNTAX'Unds'ForEachStmt'Unds'Id'Unds'ArrayList'Unds'Block{}(K0:SortId{}, K1:SortArrayList{}, K2:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortForEachStmt{}} (\and{SortForEachStmt{}} (Lblforeach'LParUnds'in'UndsRParUndsUnds'KT-SYNTAX'Unds'ForEachStmt'Unds'Id'Unds'ArrayList'Unds'Block{}(X0:SortId{}, X1:SortArrayList{}, X2:SortBlock{}), Lblforeach'LParUnds'in'UndsRParUndsUnds'KT-SYNTAX'Unds'ForEachStmt'Unds'Id'Unds'ArrayList'Unds'Block{}(Y0:SortId{}, Y1:SortArrayList{}, Y2:SortBlock{})), Lblforeach'LParUnds'in'UndsRParUndsUnds'KT-SYNTAX'Unds'ForEachStmt'Unds'Id'Unds'ArrayList'Unds'Block{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortArrayList{}} (X1:SortArrayList{}, Y1:SortArrayList{}), \and{SortBlock{}} (X2:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortId{}, \equals{SortId{}, R} (Val:SortId{}, LblfreshId'LParUndsRParUnds'ID-SYNTAX'Unds'Id'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFuncDec{}, \equals{SortFuncDec{}, R} (Val:SortFuncDec{}, Lblfun'UndsLParUndsRParColn'Int'UndsUnds'KT-SYNTAX'Unds'FuncDec'Unds'Id'Unds'Params'Unds'Block{}(K0:SortId{}, K1:SortParams{}, K2:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncDec{}} (\and{SortFuncDec{}} (Lblfun'UndsLParUndsRParColn'Int'UndsUnds'KT-SYNTAX'Unds'FuncDec'Unds'Id'Unds'Params'Unds'Block{}(X0:SortId{}, X1:SortParams{}, X2:SortBlock{}), Lblfun'UndsLParUndsRParColn'Int'UndsUnds'KT-SYNTAX'Unds'FuncDec'Unds'Id'Unds'Params'Unds'Block{}(Y0:SortId{}, Y1:SortParams{}, Y2:SortBlock{})), Lblfun'UndsLParUndsRParColn'Int'UndsUnds'KT-SYNTAX'Unds'FuncDec'Unds'Id'Unds'Params'Unds'Block{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortParams{}} (X1:SortParams{}, Y1:SortParams{}), \and{SortBlock{}} (X2:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortFuncDec{}} (\and{SortFuncDec{}} (Lblfun'UndsLParUndsRParColn'Int'UndsUnds'KT-SYNTAX'Unds'FuncDec'Unds'Id'Unds'Params'Unds'Block{}(X0:SortId{}, X1:SortParams{}, X2:SortBlock{}), Lblfun'UndsLParUndsRParUndsUnds'KT-SYNTAX'Unds'FuncDec'Unds'Id'Unds'Params'Unds'Block{}(Y0:SortId{}, Y1:SortParams{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFuncDec{}, \equals{SortFuncDec{}, R} (Val:SortFuncDec{}, Lblfun'UndsLParUndsRParUndsUnds'KT-SYNTAX'Unds'FuncDec'Unds'Id'Unds'Params'Unds'Block{}(K0:SortId{}, K1:SortParams{}, K2:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncDec{}} (\and{SortFuncDec{}} (Lblfun'UndsLParUndsRParUndsUnds'KT-SYNTAX'Unds'FuncDec'Unds'Id'Unds'Params'Unds'Block{}(X0:SortId{}, X1:SortParams{}, X2:SortBlock{}), Lblfun'UndsLParUndsRParUndsUnds'KT-SYNTAX'Unds'FuncDec'Unds'Id'Unds'Params'Unds'Block{}(Y0:SortId{}, Y1:SortParams{}, Y2:SortBlock{})), Lblfun'UndsLParUndsRParUndsUnds'KT-SYNTAX'Unds'FuncDec'Unds'Id'Unds'Params'Unds'Block{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortParams{}} (X1:SortParams{}, Y1:SortParams{}), \and{SortBlock{}} (X2:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFun{}, \equals{SortFun{}, R} (Val:SortFun{}, Lblfunmain'LParRParLBraUndsRBraUnds'KT-SYNTAX'Unds'Fun'Unds'Block{}(K0:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortFun{}} (\and{SortFun{}} (Lblfunmain'LParRParLBraUndsRBraUnds'KT-SYNTAX'Unds'Fun'Unds'Block{}(X0:SortBlock{}), Lblfunmain'LParRParLBraUndsRBraUnds'KT-SYNTAX'Unds'Fun'Unds'Block{}(Y0:SortBlock{})), Lblfunmain'LParRParLBraUndsRBraUnds'KT-SYNTAX'Unds'Fun'Unds'Block{}(\and{SortBlock{}} (X0:SortBlock{}, Y0:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIfStmt{}, \equals{SortIfStmt{}, R} (Val:SortIfStmt{}, Lblif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block{}(K0:SortBExp{}, K1:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortIfStmt{}} (\and{SortIfStmt{}} (Lblif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block{}(X0:SortBExp{}, X1:SortBlock{}), Lblif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block{}(Y0:SortBExp{}, Y1:SortBlock{})), Lblif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block{}(\and{SortBExp{}} (X0:SortBExp{}, Y0:SortBExp{}), \and{SortBlock{}} (X1:SortBlock{}, Y1:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortIfStmt{}} (\and{SortIfStmt{}} (Lblif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block{}(X0:SortBExp{}, X1:SortBlock{}), Lblif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt{}(Y0:SortBExp{}, Y1:SortBlock{}, Y2:SortElseIfStmt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIfStmt{}, \equals{SortIfStmt{}, R} (Val:SortIfStmt{}, Lblif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt{}(K0:SortBExp{}, K1:SortBlock{}, K2:SortElseIfStmt{}))) [functional{}()] // functional
  axiom{}\implies{SortIfStmt{}} (\and{SortIfStmt{}} (Lblif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt{}(X0:SortBExp{}, X1:SortBlock{}, X2:SortElseIfStmt{}), Lblif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt{}(Y0:SortBExp{}, Y1:SortBlock{}, Y2:SortElseIfStmt{})), Lblif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt{}(\and{SortBExp{}} (X0:SortBExp{}, Y0:SortBExp{}), \and{SortBlock{}} (X1:SortBlock{}, Y1:SortBlock{}), \and{SortElseIfStmt{}} (X2:SortElseIfStmt{}, Y2:SortElseIfStmt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortLocal{}, \equals{SortLocal{}, R} (Val:SortLocal{}, Lbllocal'LParUndsCommUndsRParUnds'KT-SYNTAX'Unds'Local'Unds'Id'Unds'Stmt{}(K0:SortId{}, K1:SortStmt{}))) [functional{}()] // functional
  axiom{}\implies{SortLocal{}} (\and{SortLocal{}} (Lbllocal'LParUndsCommUndsRParUnds'KT-SYNTAX'Unds'Local'Unds'Id'Unds'Stmt{}(X0:SortId{}, X1:SortStmt{}), Lbllocal'LParUndsCommUndsRParUnds'KT-SYNTAX'Unds'Local'Unds'Id'Unds'Stmt{}(Y0:SortId{}, Y1:SortStmt{})), Lbllocal'LParUndsCommUndsRParUnds'KT-SYNTAX'Unds'Local'Unds'Id'Unds'Stmt{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortStmt{}} (X1:SortStmt{}, Y1:SortStmt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortEnvCellOpt{}, \equals{SortEnvCellOpt{}, R} (Val:SortEnvCellOpt{}, LblnoEnvCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFunctionsCellOpt{}, \equals{SortFunctionsCellOpt{}, R} (Val:SortFunctionsCellOpt{}, LblnoFunctionsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R} (Val:SortGeneratedCounterCellOpt{}, LblnoGeneratedCounterCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIdCellOpt{}, \equals{SortIdCellOpt{}, R} (Val:SortIdCellOpt{}, LblnoIdCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, LblnoKCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortLocCellOpt{}, \equals{SortLocCellOpt{}, R} (Val:SortLocCellOpt{}, LblnoLocCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortLocalEnvCellOpt{}, \equals{SortLocalEnvCellOpt{}, R} (Val:SortLocalEnvCellOpt{}, LblnoLocalEnvCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortOutCellOpt{}, \equals{SortOutCellOpt{}, R} (Val:SortOutCellOpt{}, LblnoOutCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortParamsCellOpt{}, \equals{SortParamsCellOpt{}, R} (Val:SortParamsCellOpt{}, LblnoParamsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortScopeCellOpt{}, \equals{SortScopeCellOpt{}, R} (Val:SortScopeCellOpt{}, LblnoScopeCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStoreCellOpt{}, \equals{SortStoreCellOpt{}, R} (Val:SortStoreCellOpt{}, LblnoStoreCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTCellOpt{}, \equals{SortTCellOpt{}, R} (Val:SortTCellOpt{}, LblnoTCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTempCellOpt{}, \equals{SortTempCellOpt{}, R} (Val:SortTempCellOpt{}, LblnoTempCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblnotBool'Unds'{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortPrint{}, \equals{SortPrint{}, R} (Val:SortPrint{}, Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'IdList{}(K0:SortIdList{}))) [functional{}()] // functional
  axiom{}\implies{SortPrint{}} (\and{SortPrint{}} (Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'IdList{}(X0:SortIdList{}), Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'IdList{}(Y0:SortIdList{})), Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'IdList{}(\and{SortIdList{}} (X0:SortIdList{}, Y0:SortIdList{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPrint{}} (\and{SortPrint{}} (Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'IdList{}(X0:SortIdList{}), Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'IntList{}(Y0:SortIntList{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPrint{}} (\and{SortPrint{}} (Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'IdList{}(X0:SortIdList{}), Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'StringList{}(Y0:SortStringList{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPrint{}, \equals{SortPrint{}, R} (Val:SortPrint{}, Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'IntList{}(K0:SortIntList{}))) [functional{}()] // functional
  axiom{}\implies{SortPrint{}} (\and{SortPrint{}} (Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'IntList{}(X0:SortIntList{}), Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'IntList{}(Y0:SortIntList{})), Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'IntList{}(\and{SortIntList{}} (X0:SortIntList{}, Y0:SortIntList{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPrint{}} (\and{SortPrint{}} (Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'IntList{}(X0:SortIntList{}), Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'StringList{}(Y0:SortStringList{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPrint{}, \equals{SortPrint{}, R} (Val:SortPrint{}, Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'StringList{}(K0:SortStringList{}))) [functional{}()] // functional
  axiom{}\implies{SortPrint{}} (\and{SortPrint{}} (Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'StringList{}(X0:SortStringList{}), Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'StringList{}(Y0:SortStringList{})), Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'StringList{}(\and{SortStringList{}} (X0:SortStringList{}, Y0:SortStringList{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(K0:SortMap{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(K0:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(K0:SortString{}, K1:SortInt{}, K2:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIdAssigner{}, \equals{SortIdAssigner{}, R} (Val:SortIdAssigner{}, Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(K0:SortId{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(Y0:SortId{}, Y1:SortAExp{})), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(Y0:SortId{}, Y1:SortArrayList{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(Y0:SortId{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(Y0:SortId{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(Y0:SortId{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(Y0:SortId{}, Y1:SortArrayList{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(Y0:SortId{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(Y0:SortId{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIdAssigner{}, \equals{SortIdAssigner{}, R} (Val:SortIdAssigner{}, Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(K0:SortId{}, K1:SortArrayList{}))) [functional{}()] // functional
  axiom{}\implies{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(X0:SortId{}, X1:SortArrayList{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(Y0:SortId{}, Y1:SortArrayList{})), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortArrayList{}} (X1:SortArrayList{}, Y1:SortArrayList{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(X0:SortId{}, X1:SortArrayList{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(Y0:SortId{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(X0:SortId{}, X1:SortArrayList{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(Y0:SortId{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(X0:SortId{}, X1:SortArrayList{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(Y0:SortId{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(X0:SortId{}, X1:SortArrayList{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(Y0:SortId{}, Y1:SortArrayList{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(X0:SortId{}, X1:SortArrayList{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(Y0:SortId{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(X0:SortId{}, X1:SortArrayList{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(Y0:SortId{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIdAssigner{}, \equals{SortIdAssigner{}, R} (Val:SortIdAssigner{}, Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(K0:SortId{}, K1:SortBExp{}))) [functional{}()] // functional
  axiom{}\implies{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(X0:SortId{}, X1:SortBExp{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(Y0:SortId{}, Y1:SortBExp{})), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortBExp{}} (X1:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(X0:SortId{}, X1:SortBExp{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(Y0:SortId{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(X0:SortId{}, X1:SortBExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(Y0:SortId{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(X0:SortId{}, X1:SortBExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(Y0:SortId{}, Y1:SortArrayList{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(X0:SortId{}, X1:SortBExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(Y0:SortId{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(X0:SortId{}, X1:SortBExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(Y0:SortId{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIdAssigner{}, \equals{SortIdAssigner{}, R} (Val:SortIdAssigner{}, Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(K0:SortId{}, K1:SortIdExp{}))) [functional{}()] // functional
  axiom{}\implies{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(X0:SortId{}, X1:SortIdExp{}), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(Y0:SortId{}, Y1:SortIdExp{})), Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortIdExp{}} (X1:SortIdExp{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(X0:SortId{}, X1:SortIdExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(Y0:SortId{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(X0:SortId{}, X1:SortIdExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(Y0:SortId{}, Y1:SortArrayList{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(X0:SortId{}, X1:SortIdExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(Y0:SortId{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(X0:SortId{}, X1:SortIdExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(Y0:SortId{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortVarMod{}, \equals{SortVarMod{}, R} (Val:SortVarMod{}, Lblval'Unds'KT-SYNTAX'Unds'VarMod{}())) [functional{}()] // functional
  axiom{}\not{SortVarMod{}} (\and{SortVarMod{}} (Lblval'Unds'KT-SYNTAX'Unds'VarMod{}(), Lblvar'Unds'KT-SYNTAX'Unds'VarMod{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIdAssigner{}, \equals{SortIdAssigner{}, R} (Val:SortIdAssigner{}, Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(K0:SortId{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(Y0:SortId{}, Y1:SortAExp{})), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(Y0:SortId{}, Y1:SortArrayList{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(Y0:SortId{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(Y0:SortId{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIdAssigner{}, \equals{SortIdAssigner{}, R} (Val:SortIdAssigner{}, Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(K0:SortId{}, K1:SortArrayList{}))) [functional{}()] // functional
  axiom{}\implies{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(X0:SortId{}, X1:SortArrayList{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(Y0:SortId{}, Y1:SortArrayList{})), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortArrayList{}} (X1:SortArrayList{}, Y1:SortArrayList{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(X0:SortId{}, X1:SortArrayList{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(Y0:SortId{}, Y1:SortBExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(X0:SortId{}, X1:SortArrayList{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(Y0:SortId{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIdAssigner{}, \equals{SortIdAssigner{}, R} (Val:SortIdAssigner{}, Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(K0:SortId{}, K1:SortBExp{}))) [functional{}()] // functional
  axiom{}\implies{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(X0:SortId{}, X1:SortBExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(Y0:SortId{}, Y1:SortBExp{})), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortBExp{}} (X1:SortBExp{}, Y1:SortBExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(X0:SortId{}, X1:SortBExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(Y0:SortId{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIdAssigner{}, \equals{SortIdAssigner{}, R} (Val:SortIdAssigner{}, Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(K0:SortId{}, K1:SortIdExp{}))) [functional{}()] // functional
  axiom{}\implies{SortIdAssigner{}} (\and{SortIdAssigner{}} (Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(X0:SortId{}, X1:SortIdExp{}), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(Y0:SortId{}, Y1:SortIdExp{})), Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortIdExp{}} (X1:SortIdExp{}, Y1:SortIdExp{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortVarMod{}, \equals{SortVarMod{}, R} (Val:SortVarMod{}, Lblvar'Unds'KT-SYNTAX'Unds'VarMod{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortWhileStmt{}, \equals{SortWhileStmt{}, R} (Val:SortWhileStmt{}, Lblwhile'LParUndsRParUndsUnds'KT-SYNTAX'Unds'WhileStmt'Unds'BExp'Unds'Block{}(K0:SortBExp{}, K1:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortWhileStmt{}} (\and{SortWhileStmt{}} (Lblwhile'LParUndsRParUndsUnds'KT-SYNTAX'Unds'WhileStmt'Unds'BExp'Unds'Block{}(X0:SortBExp{}, X1:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'KT-SYNTAX'Unds'WhileStmt'Unds'BExp'Unds'Block{}(Y0:SortBExp{}, Y1:SortBlock{})), Lblwhile'LParUndsRParUndsUnds'KT-SYNTAX'Unds'WhileStmt'Unds'BExp'Unds'Block{}(\and{SortBExp{}} (X0:SortBExp{}, Y0:SortBExp{}), \and{SortBlock{}} (X1:SortBlock{}, Y1:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBlock{}, \equals{SortBlock{}, R} (Val:SortBlock{}, Lbl'LBraUndsRBraUnds'KT-SYNTAX'Unds'Block'Unds'Stmt{}(K0:SortStmt{}))) [functional{}()] // functional
  axiom{}\implies{SortBlock{}} (\and{SortBlock{}} (Lbl'LBraUndsRBraUnds'KT-SYNTAX'Unds'Block'Unds'Stmt{}(X0:SortStmt{}), Lbl'LBraUndsRBraUnds'KT-SYNTAX'Unds'Block'Unds'Stmt{}(Y0:SortStmt{})), Lbl'LBraUndsRBraUnds'KT-SYNTAX'Unds'Block'Unds'Stmt{}(\and{SortStmt{}} (X0:SortStmt{}, Y0:SortStmt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Tild'Int'Unds'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{} \or{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, \exists{SortKItem{}} (X1:SortK{}, Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(X0:SortK{}, X1:SortK{}))), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortInt{}, \exists{SortKItem{}} (X1:SortString{}, \exists{SortKItem{}} (X2:SortString{}, Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{})))), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIntList{}, inj{SortIntList{}, SortKItem{}} (Val:SortIntList{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortArrayList{}, inj{SortArrayList{}, SortKItem{}} (Val:SortArrayList{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIdList{}, inj{SortIdList{}, SortKItem{}} (Val:SortIdList{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortAExpMod{}, inj{SortAExpMod{}, SortKItem{}} (Val:SortAExpMod{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortForStmt{}, inj{SortForStmt{}, SortKItem{}} (Val:SortForStmt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortList{}, inj{SortList{}, SortKItem{}} (Val:SortList{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIdCell{}, inj{SortIdCell{}, SortKItem{}} (Val:SortIdCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortOutCellOpt{}, inj{SortOutCellOpt{}, SortKItem{}} (Val:SortOutCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFunctionsCellOpt{}, inj{SortFunctionsCellOpt{}, SortKItem{}} (Val:SortFunctionsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLocal{}, inj{SortLocal{}, SortKItem{}} (Val:SortLocal{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTCellOpt{}, inj{SortTCellOpt{}, SortKItem{}} (Val:SortTCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortOutCell{}, inj{SortOutCell{}, SortKItem{}} (Val:SortOutCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTCellFragment{}, inj{SortTCellFragment{}, SortKItem{}} (Val:SortTCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKVariable{}, inj{SortKVariable{}, SortKItem{}} (Val:SortKVariable{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortThreadCellFragment{}, inj{SortThreadCellFragment{}, SortKItem{}} (Val:SortThreadCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortString{}, inj{SortString{}, SortKItem{}} (Val:SortString{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIOInt{}, inj{SortIOInt{}, SortKItem{}} (Val:SortIOInt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTCell{}, inj{SortTCell{}, SortKItem{}} (Val:SortTCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortVarType{}, inj{SortVarType{}, SortKItem{}} (Val:SortVarType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBExp{}, inj{SortBExp{}, SortKItem{}} (Val:SortBExp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIdAssigner{}, inj{SortIdAssigner{}, SortKItem{}} (Val:SortIdAssigner{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortParamsCellOpt{}, inj{SortParamsCellOpt{}, SortKItem{}} (Val:SortParamsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCellOpt{}, SortKItem{}} (Val:SortGeneratedCounterCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTempCellOpt{}, inj{SortTempCellOpt{}, SortKItem{}} (Val:SortTempCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortSkip{}, inj{SortSkip{}, SortKItem{}} (Val:SortSkip{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortParamsCell{}, inj{SortParamsCell{}, SortKItem{}} (Val:SortParamsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFunctionsCell{}, inj{SortFunctionsCell{}, SortKItem{}} (Val:SortFunctionsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIdCellOpt{}, inj{SortIdCellOpt{}, SortKItem{}} (Val:SortIdCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (Val:SortGeneratedCounterCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFunctionsCellFragment{}, inj{SortFunctionsCellFragment{}, SortKItem{}} (Val:SortFunctionsCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortId{}, inj{SortId{}, SortKItem{}} (Val:SortId{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStream{}, inj{SortStream{}, SortKItem{}} (Val:SortStream{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCell{}, inj{SortCell{}, SortKItem{}} (Val:SortCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBool{}, inj{SortBool{}, SortKItem{}} (Val:SortBool{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKCell{}, inj{SortKCell{}, SortKItem{}} (Val:SortKCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStoreCell{}, inj{SortStoreCell{}, SortKItem{}} (Val:SortStoreCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIOFile{}, inj{SortIOFile{}, SortKItem{}} (Val:SortIOFile{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStoreCellOpt{}, inj{SortStoreCellOpt{}, SortKItem{}} (Val:SortStoreCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortThreadCell{}, inj{SortThreadCell{}, SortKItem{}} (Val:SortThreadCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKResult{}, inj{SortKResult{}, SortKItem{}} (Val:SortKResult{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortAssigner{}, inj{SortAssigner{}, SortKItem{}} (Val:SortAssigner{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortElseIfStmt{}, inj{SortElseIfStmt{}, SortKItem{}} (Val:SortElseIfStmt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMap{}, inj{SortMap{}, SortKItem{}} (Val:SortMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncDec{}, inj{SortFuncDec{}, SortKItem{}} (Val:SortFuncDec{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortParams{}, inj{SortParams{}, SortKItem{}} (Val:SortParams{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncCall{}, inj{SortFuncCall{}, SortKItem{}} (Val:SortFuncCall{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIdExp{}, inj{SortIdExp{}, SortKItem{}} (Val:SortIdExp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortEnvCell{}, inj{SortEnvCell{}, SortKItem{}} (Val:SortEnvCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLocalEnvCell{}, inj{SortLocalEnvCell{}, SortKItem{}} (Val:SortLocalEnvCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIfStmt{}, inj{SortIfStmt{}, SortKItem{}} (Val:SortIfStmt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortScopeCellOpt{}, inj{SortScopeCellOpt{}, SortKItem{}} (Val:SortScopeCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLocCell{}, inj{SortLocCell{}, SortKItem{}} (Val:SortLocCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortWhileStmt{}, inj{SortWhileStmt{}, SortKItem{}} (Val:SortWhileStmt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKCellOpt{}, inj{SortKCellOpt{}, SortKItem{}} (Val:SortKCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortForEachStmt{}, inj{SortForEachStmt{}, SortKItem{}} (Val:SortForEachStmt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStmt{}, inj{SortStmt{}, SortKItem{}} (Val:SortStmt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortThreadCellMap{}, inj{SortThreadCellMap{}, SortKItem{}} (Val:SortThreadCellMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStringList{}, inj{SortStringList{}, SortKItem{}} (Val:SortStringList{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInt{}, inj{SortInt{}, SortKItem{}} (Val:SortInt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFloat{}, inj{SortFloat{}, SortKItem{}} (Val:SortFloat{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortVarDeclaration{}, inj{SortVarDeclaration{}, SortKItem{}} (Val:SortVarDeclaration{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTempCell{}, inj{SortTempCell{}, SortKItem{}} (Val:SortTempCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFun{}, inj{SortFun{}, SortKItem{}} (Val:SortFun{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortValueType{}, inj{SortValueType{}, SortKItem{}} (Val:SortValueType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDoWhileStmt{}, inj{SortDoWhileStmt{}, SortKItem{}} (Val:SortDoWhileStmt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedTopCell{}, inj{SortGeneratedTopCell{}, SortKItem{}} (Val:SortGeneratedTopCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortEnvCellOpt{}, inj{SortEnvCellOpt{}, SortKItem{}} (Val:SortEnvCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBlock{}, inj{SortBlock{}, SortKItem{}} (Val:SortBlock{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortSet{}, inj{SortSet{}, SortKItem{}} (Val:SortSet{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortVarMod{}, inj{SortVarMod{}, SortKItem{}} (Val:SortVarMod{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortScopeCell{}, inj{SortScopeCell{}, SortKItem{}} (Val:SortScopeCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortPrint{}, inj{SortPrint{}, SortKItem{}} (Val:SortPrint{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLocalEnvCellOpt{}, inj{SortLocalEnvCellOpt{}, SortKItem{}} (Val:SortLocalEnvCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIOString{}, inj{SortIOString{}, SortKItem{}} (Val:SortIOString{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedTopCellFragment{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (Val:SortGeneratedTopCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIOError{}, inj{SortIOError{}, SortKItem{}} (Val:SortIOError{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLocCellOpt{}, inj{SortLocCellOpt{}, SortKItem{}} (Val:SortLocCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortAExp{}, inj{SortAExp{}, SortKItem{}} (Val:SortAExp{})), \bottom{SortKItem{}}())))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortIntList{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IntList'Unds'Int'Unds'IntList'QuotRBraUnds'IntList{}(), \or{SortIntList{}} (\exists{SortIntList{}} (X0:SortInt{}, \exists{SortIntList{}} (X1:SortIntList{}, Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IntList'Unds'Int'Unds'IntList{}(X0:SortInt{}, X1:SortIntList{}))), \bottom{SortIntList{}}())) [constructor{}()] // no junk
  axiom{} \or{SortArrayList{}} (\exists{SortArrayList{}} (X0:SortIdList{}, Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'IdList{}(X0:SortIdList{})), \or{SortArrayList{}} (\exists{SortArrayList{}} (X0:SortIntList{}, Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'IntList{}(X0:SortIntList{})), \or{SortArrayList{}} (\exists{SortArrayList{}} (X0:SortStringList{}, Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'StringList{}(X0:SortStringList{})), \bottom{SortArrayList{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortIdList{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList'QuotRBraUnds'IdList{}(), \or{SortIdList{}} (\exists{SortIdList{}} (X0:SortId{}, \exists{SortIdList{}} (X1:SortIdList{}, Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList{}(X0:SortId{}, X1:SortIdList{}))), \bottom{SortIdList{}}())) [constructor{}()] // no junk
  axiom{} \or{SortAExpMod{}} (\exists{SortAExpMod{}} (X0:SortId{}, Lbl'UndsPlusPlusUnds'KT-SYNTAX'Unds'AExpMod'Unds'Id{}(X0:SortId{})), \or{SortAExpMod{}} (\exists{SortAExpMod{}} (X0:SortId{}, Lbl'Unds'--'Unds'KT-SYNTAX'Unds'AExpMod'Unds'Id{}(X0:SortId{})), \bottom{SortAExpMod{}}())) [constructor{}()] // no junk
  axiom{} \or{SortForStmt{}} (\exists{SortForStmt{}} (X0:SortIdAssigner{}, \exists{SortForStmt{}} (X1:SortBExp{}, \exists{SortForStmt{}} (X2:SortAExpMod{}, \exists{SortForStmt{}} (X3:SortBlock{}, Lblfor'LParUndsSClnUndsSClnUndsRParUndsUnds'KT-SYNTAX'Unds'ForStmt'Unds'IdAssigner'Unds'BExp'Unds'AExpMod'Unds'Block{}(X0:SortIdAssigner{}, X1:SortBExp{}, X2:SortAExpMod{}, X3:SortBlock{}))))), \bottom{SortForStmt{}}()) [constructor{}()] // no junk
  axiom{} \bottom{SortList{}}() [constructor{}()] // no junk
  axiom{} \or{SortIdCell{}} (\exists{SortIdCell{}} (X0:SortK{}, Lbl'-LT-'id'-GT-'{}(X0:SortK{})), \bottom{SortIdCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOutCellOpt{}} (LblnoOutCell{}(), \or{SortOutCellOpt{}} (\exists{SortOutCellOpt{}} (Val:SortOutCell{}, inj{SortOutCell{}, SortOutCellOpt{}} (Val:SortOutCell{})), \bottom{SortOutCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFunctionsCellOpt{}} (LblnoFunctionsCell{}(), \or{SortFunctionsCellOpt{}} (\exists{SortFunctionsCellOpt{}} (Val:SortFunctionsCell{}, inj{SortFunctionsCell{}, SortFunctionsCellOpt{}} (Val:SortFunctionsCell{})), \bottom{SortFunctionsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortLocal{}} (\exists{SortLocal{}} (X0:SortId{}, \exists{SortLocal{}} (X1:SortStmt{}, Lbllocal'LParUndsCommUndsRParUnds'KT-SYNTAX'Unds'Local'Unds'Id'Unds'Stmt{}(X0:SortId{}, X1:SortStmt{}))), \bottom{SortLocal{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTCellOpt{}} (LblnoTCell{}(), \or{SortTCellOpt{}} (\exists{SortTCellOpt{}} (Val:SortTCell{}, inj{SortTCell{}, SortTCellOpt{}} (Val:SortTCell{})), \bottom{SortTCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortOutCell{}} (\exists{SortOutCell{}} (X0:SortSet{}, Lbl'-LT-'out'-GT-'{}(X0:SortSet{})), \bottom{SortOutCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTCellFragment{}} (\exists{SortTCellFragment{}} (X0:SortKCellOpt{}, \exists{SortTCellFragment{}} (X1:SortOutCellOpt{}, \exists{SortTCellFragment{}} (X2:SortFunctionsCellOpt{}, \exists{SortTCellFragment{}} (X3:SortEnvCellOpt{}, \exists{SortTCellFragment{}} (X4:SortStoreCellOpt{}, \exists{SortTCellFragment{}} (X5:SortLocCellOpt{}, Lbl'-LT-'T'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortOutCellOpt{}, X2:SortFunctionsCellOpt{}, X3:SortEnvCellOpt{}, X4:SortStoreCellOpt{}, X5:SortLocCellOpt{}))))))), \bottom{SortTCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKVariable{}} (\exists{SortKVariable{}} (Val:SortId{}, inj{SortId{}, SortKVariable{}} (Val:SortId{})), \bottom{SortKVariable{}}()) [constructor{}()] // no junk
  axiom{} \or{SortThreadCellFragment{}} (\exists{SortThreadCellFragment{}} (X0:SortIdCellOpt{}, \exists{SortThreadCellFragment{}} (X1:SortScopeCellOpt{}, \exists{SortThreadCellFragment{}} (X2:SortParamsCellOpt{}, \exists{SortThreadCellFragment{}} (X3:SortTempCellOpt{}, \exists{SortThreadCellFragment{}} (X4:SortLocalEnvCellOpt{}, Lbl'-LT-'thread'-GT-'-fragment{}(X0:SortIdCellOpt{}, X1:SortScopeCellOpt{}, X2:SortParamsCellOpt{}, X3:SortTempCellOpt{}, X4:SortLocalEnvCellOpt{})))))), \bottom{SortThreadCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortString{}} (\top{SortString{}}(), \bottom{SortString{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortKConfigVar{}} (\top{SortKConfigVar{}}(), \bottom{SortKConfigVar{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortIOInt{}} (\exists{SortIOInt{}} (Val:SortInt{}, inj{SortInt{}, SortIOInt{}} (Val:SortInt{})), \or{SortIOInt{}} (\exists{SortIOInt{}} (Val:SortIOError{}, inj{SortIOError{}, SortIOInt{}} (Val:SortIOError{})), \bottom{SortIOInt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTCell{}} (\exists{SortTCell{}} (X0:SortKCell{}, \exists{SortTCell{}} (X1:SortOutCell{}, \exists{SortTCell{}} (X2:SortFunctionsCell{}, \exists{SortTCell{}} (X3:SortEnvCell{}, \exists{SortTCell{}} (X4:SortStoreCell{}, \exists{SortTCell{}} (X5:SortLocCell{}, Lbl'-LT-'T'-GT-'{}(X0:SortKCell{}, X1:SortOutCell{}, X2:SortFunctionsCell{}, X3:SortEnvCell{}, X4:SortStoreCell{}, X5:SortLocCell{}))))))), \bottom{SortTCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortVarType{}} (LblBoolean'Unds'KT-SYNTAX'Unds'VarType{}(), \or{SortVarType{}} (LblInt'Unds'KT-SYNTAX'Unds'VarType{}(), \or{SortVarType{}} (LblString'Unds'KT-SYNTAX'Unds'VarType{}(), \bottom{SortVarType{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortBExp{}} (\exists{SortBExp{}} (X0:SortBExp{}, Lbl'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp{}(X0:SortBExp{})), \or{SortBExp{}} (\exists{SortBExp{}} (X0:SortAExp{}, \exists{SortBExp{}} (X1:SortAExp{}, Lbl'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}))), \or{SortBExp{}} (\exists{SortBExp{}} (X0:SortBExp{}, \exists{SortBExp{}} (X1:SortBExp{}, Lbl'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(X0:SortBExp{}, X1:SortBExp{}))), \or{SortBExp{}} (\exists{SortBExp{}} (X0:SortAExp{}, \exists{SortBExp{}} (X1:SortAExp{}, Lbl'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}))), \or{SortBExp{}} (\exists{SortBExp{}} (X0:SortAExp{}, \exists{SortBExp{}} (X1:SortAExp{}, Lbl'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}))), \or{SortBExp{}} (\exists{SortBExp{}} (X0:SortAExp{}, \exists{SortBExp{}} (X1:SortAExp{}, Lbl'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}))), \or{SortBExp{}} (\exists{SortBExp{}} (X0:SortAExp{}, \exists{SortBExp{}} (X1:SortAExp{}, Lbl'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}))), \or{SortBExp{}} (\exists{SortBExp{}} (X0:SortAExp{}, \exists{SortBExp{}} (X1:SortAExp{}, Lbl'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}))), \or{SortBExp{}} (\exists{SortBExp{}} (X0:SortBExp{}, \exists{SortBExp{}} (X1:SortBExp{}, Lbl'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(X0:SortBExp{}, X1:SortBExp{}))), \or{SortBExp{}} (\exists{SortBExp{}} (Val:SortBool{}, inj{SortBool{}, SortBExp{}} (Val:SortBool{})), \bottom{SortBExp{}}())))))))))) [constructor{}()] // no junk
  axiom{} \or{SortIdAssigner{}} (\exists{SortIdAssigner{}} (X0:SortId{}, \exists{SortIdAssigner{}} (X1:SortAExp{}, Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}))), \or{SortIdAssigner{}} (\exists{SortIdAssigner{}} (X0:SortId{}, \exists{SortIdAssigner{}} (X1:SortArrayList{}, Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(X0:SortId{}, X1:SortArrayList{}))), \or{SortIdAssigner{}} (\exists{SortIdAssigner{}} (X0:SortId{}, \exists{SortIdAssigner{}} (X1:SortBExp{}, Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(X0:SortId{}, X1:SortBExp{}))), \or{SortIdAssigner{}} (\exists{SortIdAssigner{}} (X0:SortId{}, \exists{SortIdAssigner{}} (X1:SortIdExp{}, Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(X0:SortId{}, X1:SortIdExp{}))), \or{SortIdAssigner{}} (\exists{SortIdAssigner{}} (X0:SortId{}, \exists{SortIdAssigner{}} (X1:SortAExp{}, Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}))), \or{SortIdAssigner{}} (\exists{SortIdAssigner{}} (X0:SortId{}, \exists{SortIdAssigner{}} (X1:SortArrayList{}, Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(X0:SortId{}, X1:SortArrayList{}))), \or{SortIdAssigner{}} (\exists{SortIdAssigner{}} (X0:SortId{}, \exists{SortIdAssigner{}} (X1:SortBExp{}, Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(X0:SortId{}, X1:SortBExp{}))), \or{SortIdAssigner{}} (\exists{SortIdAssigner{}} (X0:SortId{}, \exists{SortIdAssigner{}} (X1:SortIdExp{}, Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(X0:SortId{}, X1:SortIdExp{}))), \or{SortIdAssigner{}} (\exists{SortIdAssigner{}} (X0:SortId{}, \exists{SortIdAssigner{}} (X1:SortAExp{}, Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(X0:SortId{}, X1:SortAExp{}))), \or{SortIdAssigner{}} (\exists{SortIdAssigner{}} (X0:SortId{}, \exists{SortIdAssigner{}} (X1:SortArrayList{}, Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'ArrayList{}(X0:SortId{}, X1:SortArrayList{}))), \or{SortIdAssigner{}} (\exists{SortIdAssigner{}} (X0:SortId{}, \exists{SortIdAssigner{}} (X1:SortBExp{}, Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(X0:SortId{}, X1:SortBExp{}))), \or{SortIdAssigner{}} (\exists{SortIdAssigner{}} (X0:SortId{}, \exists{SortIdAssigner{}} (X1:SortIdExp{}, Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(X0:SortId{}, X1:SortIdExp{}))), \bottom{SortIdAssigner{}}())))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortParamsCellOpt{}} (LblnoParamsCell{}(), \or{SortParamsCellOpt{}} (\exists{SortParamsCellOpt{}} (Val:SortParamsCell{}, inj{SortParamsCell{}, SortParamsCellOpt{}} (Val:SortParamsCell{})), \bottom{SortParamsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCellOpt{}} (LblnoGeneratedCounterCell{}(), \or{SortGeneratedCounterCellOpt{}} (\exists{SortGeneratedCounterCellOpt{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}} (Val:SortGeneratedCounterCell{})), \bottom{SortGeneratedCounterCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTempCellOpt{}} (LblnoTempCell{}(), \or{SortTempCellOpt{}} (\exists{SortTempCellOpt{}} (Val:SortTempCell{}, inj{SortTempCell{}, SortTempCellOpt{}} (Val:SortTempCell{})), \bottom{SortTempCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortSkip{}} (LblSkip'Unds'KT-SYNTAX'Unds'Skip{}(), \bottom{SortSkip{}}()) [constructor{}()] // no junk
  axiom{} \or{SortParamsCell{}} (\exists{SortParamsCell{}} (X0:SortK{}, Lbl'-LT-'params'-GT-'{}(X0:SortK{})), \bottom{SortParamsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFunctionsCell{}} (\exists{SortFunctionsCell{}} (X0:SortThreadCellMap{}, Lbl'-LT-'functions'-GT-'{}(X0:SortThreadCellMap{})), \bottom{SortFunctionsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIdCellOpt{}} (LblnoIdCell{}(), \or{SortIdCellOpt{}} (\exists{SortIdCellOpt{}} (Val:SortIdCell{}, inj{SortIdCell{}, SortIdCellOpt{}} (Val:SortIdCell{})), \bottom{SortIdCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCell{}} (\exists{SortGeneratedCounterCell{}} (X0:SortInt{}, Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{})), \bottom{SortGeneratedCounterCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFunctionsCellFragment{}} (\exists{SortFunctionsCellFragment{}} (X0:SortThreadCellMap{}, Lbl'-LT-'functions'-GT-'-fragment{}(X0:SortThreadCellMap{})), \bottom{SortFunctionsCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortId{}} (\top{SortId{}}(), \bottom{SortId{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortStream{}} (\exists{SortStream{}} (X0:SortK{}, Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{})), \bottom{SortStream{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCell{}} (\exists{SortCell{}} (Val:SortIdCell{}, inj{SortIdCell{}, SortCell{}} (Val:SortIdCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortOutCell{}, inj{SortOutCell{}, SortCell{}} (Val:SortOutCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortTCell{}, inj{SortTCell{}, SortCell{}} (Val:SortTCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortParamsCell{}, inj{SortParamsCell{}, SortCell{}} (Val:SortParamsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortFunctionsCell{}, inj{SortFunctionsCell{}, SortCell{}} (Val:SortFunctionsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortKCell{}, inj{SortKCell{}, SortCell{}} (Val:SortKCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortStoreCell{}, inj{SortStoreCell{}, SortCell{}} (Val:SortStoreCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortThreadCell{}, inj{SortThreadCell{}, SortCell{}} (Val:SortThreadCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortEnvCell{}, inj{SortEnvCell{}, SortCell{}} (Val:SortEnvCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortLocalEnvCell{}, inj{SortLocalEnvCell{}, SortCell{}} (Val:SortLocalEnvCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortLocCell{}, inj{SortLocCell{}, SortCell{}} (Val:SortLocCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortTempCell{}, inj{SortTempCell{}, SortCell{}} (Val:SortTempCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortScopeCell{}, inj{SortScopeCell{}, SortCell{}} (Val:SortScopeCell{})), \bottom{SortCell{}}()))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortBool{}} (\top{SortBool{}}(), \bottom{SortBool{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortKCell{}} (\exists{SortKCell{}} (X0:SortK{}, Lbl'-LT-'k'-GT-'{}(X0:SortK{})), \bottom{SortKCell{}}()) [constructor{}()] // no junk
  axiom{} \bottom{SortK{}}() [constructor{}()] // no junk
  axiom{} \or{SortStoreCell{}} (\exists{SortStoreCell{}} (X0:SortMap{}, Lbl'-LT-'store'-GT-'{}(X0:SortMap{})), \bottom{SortStoreCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIOFile{}} (\exists{SortIOFile{}} (X0:SortString{}, \exists{SortIOFile{}} (X1:SortInt{}, Lbl'Hash'tempFile{}(X0:SortString{}, X1:SortInt{}))), \or{SortIOFile{}} (\exists{SortIOFile{}} (Val:SortIOError{}, inj{SortIOError{}, SortIOFile{}} (Val:SortIOError{})), \bottom{SortIOFile{}}())) [constructor{}()] // no junk
  axiom{} \or{SortStoreCellOpt{}} (LblnoStoreCell{}(), \or{SortStoreCellOpt{}} (\exists{SortStoreCellOpt{}} (Val:SortStoreCell{}, inj{SortStoreCell{}, SortStoreCellOpt{}} (Val:SortStoreCell{})), \bottom{SortStoreCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortThreadCell{}} (\exists{SortThreadCell{}} (X0:SortIdCell{}, \exists{SortThreadCell{}} (X1:SortScopeCell{}, \exists{SortThreadCell{}} (X2:SortParamsCell{}, \exists{SortThreadCell{}} (X3:SortTempCell{}, \exists{SortThreadCell{}} (X4:SortLocalEnvCell{}, Lbl'-LT-'thread'-GT-'{}(X0:SortIdCell{}, X1:SortScopeCell{}, X2:SortParamsCell{}, X3:SortTempCell{}, X4:SortLocalEnvCell{})))))), \bottom{SortThreadCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKResult{}} (\exists{SortKResult{}} (Val:SortString{}, inj{SortString{}, SortKResult{}} (Val:SortString{})), \or{SortKResult{}} (\exists{SortKResult{}} (Val:SortBool{}, inj{SortBool{}, SortKResult{}} (Val:SortBool{})), \or{SortKResult{}} (\exists{SortKResult{}} (Val:SortInt{}, inj{SortInt{}, SortKResult{}} (Val:SortInt{})), \bottom{SortKResult{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortAssigner{}} (\exists{SortAssigner{}} (X0:SortVarDeclaration{}, \exists{SortAssigner{}} (X1:SortAExp{}, Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(X0:SortVarDeclaration{}, X1:SortAExp{}))), \or{SortAssigner{}} (\exists{SortAssigner{}} (X0:SortVarDeclaration{}, \exists{SortAssigner{}} (X1:SortArrayList{}, Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'ArrayList{}(X0:SortVarDeclaration{}, X1:SortArrayList{}))), \or{SortAssigner{}} (\exists{SortAssigner{}} (X0:SortVarDeclaration{}, \exists{SortAssigner{}} (X1:SortBExp{}, Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp{}(X0:SortVarDeclaration{}, X1:SortBExp{}))), \or{SortAssigner{}} (\exists{SortAssigner{}} (X0:SortVarDeclaration{}, \exists{SortAssigner{}} (X1:SortIdExp{}, Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'IdExp{}(X0:SortVarDeclaration{}, X1:SortIdExp{}))), \bottom{SortAssigner{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortElseIfStmt{}} (\exists{SortElseIfStmt{}} (X0:SortBlock{}, Lblelse'UndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'Block{}(X0:SortBlock{})), \or{SortElseIfStmt{}} (\exists{SortElseIfStmt{}} (X0:SortBExp{}, \exists{SortElseIfStmt{}} (X1:SortBlock{}, Lblelseif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'BExp'Unds'Block{}(X0:SortBExp{}, X1:SortBlock{}))), \or{SortElseIfStmt{}} (\exists{SortElseIfStmt{}} (X0:SortBExp{}, \exists{SortElseIfStmt{}} (X1:SortBlock{}, \exists{SortElseIfStmt{}} (X2:SortElseIfStmt{}, Lblelseif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt{}(X0:SortBExp{}, X1:SortBlock{}, X2:SortElseIfStmt{})))), \bottom{SortElseIfStmt{}}()))) [constructor{}()] // no junk
  axiom{} \bottom{SortMap{}}() [constructor{}()] // no junk
  axiom{} \or{SortFuncDec{}} (\exists{SortFuncDec{}} (X0:SortId{}, \exists{SortFuncDec{}} (X1:SortParams{}, \exists{SortFuncDec{}} (X2:SortBlock{}, Lblfun'UndsLParUndsRParColn'Int'UndsUnds'KT-SYNTAX'Unds'FuncDec'Unds'Id'Unds'Params'Unds'Block{}(X0:SortId{}, X1:SortParams{}, X2:SortBlock{})))), \or{SortFuncDec{}} (\exists{SortFuncDec{}} (X0:SortId{}, \exists{SortFuncDec{}} (X1:SortParams{}, \exists{SortFuncDec{}} (X2:SortBlock{}, Lblfun'UndsLParUndsRParUndsUnds'KT-SYNTAX'Unds'FuncDec'Unds'Id'Unds'Params'Unds'Block{}(X0:SortId{}, X1:SortParams{}, X2:SortBlock{})))), \bottom{SortFuncDec{}}())) [constructor{}()] // no junk
  axiom{} \or{SortParams{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'Params'Unds'Id'Unds'Params'QuotRBraUnds'Params{}(), \or{SortParams{}} (\exists{SortParams{}} (X0:SortId{}, \exists{SortParams{}} (X1:SortParams{}, Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'Params'Unds'Id'Unds'Params{}(X0:SortId{}, X1:SortParams{}))), \bottom{SortParams{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFuncCall{}} (\exists{SortFuncCall{}} (X0:SortId{}, \exists{SortFuncCall{}} (X1:SortIntList{}, Lbl'UndsLParUndsRParUnds'KT-SYNTAX'Unds'FuncCall'Unds'Id'Unds'IntList{}(X0:SortId{}, X1:SortIntList{}))), \or{SortFuncCall{}} (\exists{SortFuncCall{}} (X0:SortId{}, \exists{SortFuncCall{}} (X1:SortStringList{}, Lbl'UndsLParUndsRParUnds'KT-SYNTAX'Unds'FuncCall'Unds'Id'Unds'StringList{}(X0:SortId{}, X1:SortStringList{}))), \bottom{SortFuncCall{}}())) [constructor{}()] // no junk
  axiom{} \or{SortIdExp{}} (\exists{SortIdExp{}} (X0:SortId{}, \exists{SortIdExp{}} (X1:SortId{}, Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'IdExp'Unds'Id'Unds'Id{}(X0:SortId{}, X1:SortId{}))), \bottom{SortIdExp{}}()) [constructor{}()] // no junk
  axiom{} \or{SortEnvCell{}} (\exists{SortEnvCell{}} (X0:SortMap{}, Lbl'-LT-'env'-GT-'{}(X0:SortMap{})), \bottom{SortEnvCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortLocalEnvCell{}} (\exists{SortLocalEnvCell{}} (X0:SortMap{}, Lbl'-LT-'localEnv'-GT-'{}(X0:SortMap{})), \bottom{SortLocalEnvCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIfStmt{}} (\exists{SortIfStmt{}} (X0:SortBExp{}, \exists{SortIfStmt{}} (X1:SortBlock{}, Lblif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block{}(X0:SortBExp{}, X1:SortBlock{}))), \or{SortIfStmt{}} (\exists{SortIfStmt{}} (X0:SortBExp{}, \exists{SortIfStmt{}} (X1:SortBlock{}, \exists{SortIfStmt{}} (X2:SortElseIfStmt{}, Lblif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt{}(X0:SortBExp{}, X1:SortBlock{}, X2:SortElseIfStmt{})))), \bottom{SortIfStmt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortScopeCellOpt{}} (LblnoScopeCell{}(), \or{SortScopeCellOpt{}} (\exists{SortScopeCellOpt{}} (Val:SortScopeCell{}, inj{SortScopeCell{}, SortScopeCellOpt{}} (Val:SortScopeCell{})), \bottom{SortScopeCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortLocCell{}} (\exists{SortLocCell{}} (X0:SortInt{}, Lbl'-LT-'loc'-GT-'{}(X0:SortInt{})), \bottom{SortLocCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortWhileStmt{}} (\exists{SortWhileStmt{}} (X0:SortBExp{}, \exists{SortWhileStmt{}} (X1:SortBlock{}, Lblwhile'LParUndsRParUndsUnds'KT-SYNTAX'Unds'WhileStmt'Unds'BExp'Unds'Block{}(X0:SortBExp{}, X1:SortBlock{}))), \bottom{SortWhileStmt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKCellOpt{}} (LblnoKCell{}(), \or{SortKCellOpt{}} (\exists{SortKCellOpt{}} (Val:SortKCell{}, inj{SortKCell{}, SortKCellOpt{}} (Val:SortKCell{})), \bottom{SortKCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortForEachStmt{}} (\exists{SortForEachStmt{}} (X0:SortId{}, \exists{SortForEachStmt{}} (X1:SortArrayList{}, \exists{SortForEachStmt{}} (X2:SortBlock{}, Lblforeach'LParUnds'in'UndsRParUndsUnds'KT-SYNTAX'Unds'ForEachStmt'Unds'Id'Unds'ArrayList'Unds'Block{}(X0:SortId{}, X1:SortArrayList{}, X2:SortBlock{})))), \bottom{SortForEachStmt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortStmt{}, \exists{SortStmt{}} (X1:SortStmt{}, Lbl'UndsUndsUnds'KT-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}))), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortAExpMod{}, inj{SortAExpMod{}, SortStmt{}} (Val:SortAExpMod{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortForStmt{}, inj{SortForStmt{}, SortStmt{}} (Val:SortForStmt{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortString{}, inj{SortString{}, SortStmt{}} (Val:SortString{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortBExp{}, inj{SortBExp{}, SortStmt{}} (Val:SortBExp{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortIdAssigner{}, inj{SortIdAssigner{}, SortStmt{}} (Val:SortIdAssigner{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortSkip{}, inj{SortSkip{}, SortStmt{}} (Val:SortSkip{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortId{}, inj{SortId{}, SortStmt{}} (Val:SortId{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortBool{}, inj{SortBool{}, SortStmt{}} (Val:SortBool{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortAssigner{}, inj{SortAssigner{}, SortStmt{}} (Val:SortAssigner{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortFuncDec{}, inj{SortFuncDec{}, SortStmt{}} (Val:SortFuncDec{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortFuncCall{}, inj{SortFuncCall{}, SortStmt{}} (Val:SortFuncCall{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortIfStmt{}, inj{SortIfStmt{}, SortStmt{}} (Val:SortIfStmt{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortWhileStmt{}, inj{SortWhileStmt{}, SortStmt{}} (Val:SortWhileStmt{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortForEachStmt{}, inj{SortForEachStmt{}, SortStmt{}} (Val:SortForEachStmt{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortInt{}, inj{SortInt{}, SortStmt{}} (Val:SortInt{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortVarDeclaration{}, inj{SortVarDeclaration{}, SortStmt{}} (Val:SortVarDeclaration{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortDoWhileStmt{}, inj{SortDoWhileStmt{}, SortStmt{}} (Val:SortDoWhileStmt{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortPrint{}, inj{SortPrint{}, SortStmt{}} (Val:SortPrint{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortAExp{}, inj{SortAExp{}, SortStmt{}} (Val:SortAExp{})), \bottom{SortStmt{}}())))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortThreadCellMap{}} (\exists{SortThreadCellMap{}} (Val:SortThreadCell{}, inj{SortThreadCell{}, SortThreadCellMap{}} (Val:SortThreadCell{})), \bottom{SortThreadCellMap{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStringList{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'StringList'Unds'String'Unds'StringList'QuotRBraUnds'StringList{}(), \or{SortStringList{}} (\exists{SortStringList{}} (X0:SortString{}, \exists{SortStringList{}} (X1:SortStringList{}, Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'StringList'Unds'String'Unds'StringList{}(X0:SortString{}, X1:SortStringList{}))), \bottom{SortStringList{}}())) [constructor{}()] // no junk
  axiom{} \or{SortInt{}} (\top{SortInt{}}(), \bottom{SortInt{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortFloat{}} (\top{SortFloat{}}(), \bottom{SortFloat{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortVarDeclaration{}} (\exists{SortVarDeclaration{}} (X0:SortVarMod{}, \exists{SortVarDeclaration{}} (X1:SortIdList{}, Lbl'UndsUndsColn'Boolean'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(X0:SortVarMod{}, X1:SortIdList{}))), \or{SortVarDeclaration{}} (\exists{SortVarDeclaration{}} (X0:SortVarMod{}, \exists{SortVarDeclaration{}} (X1:SortIdList{}, Lbl'UndsUndsColn'Int'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(X0:SortVarMod{}, X1:SortIdList{}))), \or{SortVarDeclaration{}} (\exists{SortVarDeclaration{}} (X0:SortVarMod{}, \exists{SortVarDeclaration{}} (X1:SortIdList{}, Lbl'UndsUndsColn'String'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(X0:SortVarMod{}, X1:SortIdList{}))), \bottom{SortVarDeclaration{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortTempCell{}} (\exists{SortTempCell{}} (X0:SortK{}, Lbl'-LT-'temp'-GT-'{}(X0:SortK{})), \bottom{SortTempCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFun{}} (\exists{SortFun{}} (X0:SortBlock{}, Lblfunmain'LParRParLBraUndsRBraUnds'KT-SYNTAX'Unds'Fun'Unds'Block{}(X0:SortBlock{})), \bottom{SortFun{}}()) [constructor{}()] // no junk
  axiom{} \or{SortValueType{}} (\exists{SortValueType{}} (Val:SortString{}, inj{SortString{}, SortValueType{}} (Val:SortString{})), \or{SortValueType{}} (\exists{SortValueType{}} (Val:SortBool{}, inj{SortBool{}, SortValueType{}} (Val:SortBool{})), \or{SortValueType{}} (\exists{SortValueType{}} (Val:SortInt{}, inj{SortInt{}, SortValueType{}} (Val:SortInt{})), \bottom{SortValueType{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortDoWhileStmt{}} (\exists{SortDoWhileStmt{}} (X0:SortBlock{}, \exists{SortDoWhileStmt{}} (X1:SortBExp{}, Lbldo'Unds'while'LParUndsRParUnds'KT-SYNTAX'Unds'DoWhileStmt'Unds'Block'Unds'BExp{}(X0:SortBlock{}, X1:SortBExp{}))), \bottom{SortDoWhileStmt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedTopCell{}} (\exists{SortGeneratedTopCell{}} (X0:SortTCell{}, \exists{SortGeneratedTopCell{}} (X1:SortGeneratedCounterCell{}, Lbl'-LT-'generatedTop'-GT-'{}(X0:SortTCell{}, X1:SortGeneratedCounterCell{}))), \bottom{SortGeneratedTopCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortEnvCellOpt{}} (LblnoEnvCell{}(), \or{SortEnvCellOpt{}} (\exists{SortEnvCellOpt{}} (Val:SortEnvCell{}, inj{SortEnvCell{}, SortEnvCellOpt{}} (Val:SortEnvCell{})), \bottom{SortEnvCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortBlock{}} (\exists{SortBlock{}} (X0:SortStmt{}, Lbl'LBraUndsRBraUnds'KT-SYNTAX'Unds'Block'Unds'Stmt{}(X0:SortStmt{})), \or{SortBlock{}} (\exists{SortBlock{}} (Val:SortAExpMod{}, inj{SortAExpMod{}, SortBlock{}} (Val:SortAExpMod{})), \or{SortBlock{}} (\exists{SortBlock{}} (Val:SortForStmt{}, inj{SortForStmt{}, SortBlock{}} (Val:SortForStmt{})), \or{SortBlock{}} (\exists{SortBlock{}} (Val:SortString{}, inj{SortString{}, SortBlock{}} (Val:SortString{})), \or{SortBlock{}} (\exists{SortBlock{}} (Val:SortBExp{}, inj{SortBExp{}, SortBlock{}} (Val:SortBExp{})), \or{SortBlock{}} (\exists{SortBlock{}} (Val:SortIdAssigner{}, inj{SortIdAssigner{}, SortBlock{}} (Val:SortIdAssigner{})), \or{SortBlock{}} (\exists{SortBlock{}} (Val:SortSkip{}, inj{SortSkip{}, SortBlock{}} (Val:SortSkip{})), \or{SortBlock{}} (\exists{SortBlock{}} (Val:SortId{}, inj{SortId{}, SortBlock{}} (Val:SortId{})), \or{SortBlock{}} (\exists{SortBlock{}} (Val:SortBool{}, inj{SortBool{}, SortBlock{}} (Val:SortBool{})), \or{SortBlock{}} (\exists{SortBlock{}} (Val:SortAssigner{}, inj{SortAssigner{}, SortBlock{}} (Val:SortAssigner{})), \or{SortBlock{}} (\exists{SortBlock{}} (Val:SortFuncDec{}, inj{SortFuncDec{}, SortBlock{}} (Val:SortFuncDec{})), \or{SortBlock{}} (\exists{SortBlock{}} (Val:SortFuncCall{}, inj{SortFuncCall{}, SortBlock{}} (Val:SortFuncCall{})), \or{SortBlock{}} (\exists{SortBlock{}} (Val:SortIfStmt{}, inj{SortIfStmt{}, SortBlock{}} (Val:SortIfStmt{})), \or{SortBlock{}} (\exists{SortBlock{}} (Val:SortWhileStmt{}, inj{SortWhileStmt{}, SortBlock{}} (Val:SortWhileStmt{})), \or{SortBlock{}} (\exists{SortBlock{}} (Val:SortForEachStmt{}, inj{SortForEachStmt{}, SortBlock{}} (Val:SortForEachStmt{})), \or{SortBlock{}} (\exists{SortBlock{}} (Val:SortStmt{}, inj{SortStmt{}, SortBlock{}} (Val:SortStmt{})), \or{SortBlock{}} (\exists{SortBlock{}} (Val:SortInt{}, inj{SortInt{}, SortBlock{}} (Val:SortInt{})), \or{SortBlock{}} (\exists{SortBlock{}} (Val:SortVarDeclaration{}, inj{SortVarDeclaration{}, SortBlock{}} (Val:SortVarDeclaration{})), \or{SortBlock{}} (\exists{SortBlock{}} (Val:SortDoWhileStmt{}, inj{SortDoWhileStmt{}, SortBlock{}} (Val:SortDoWhileStmt{})), \or{SortBlock{}} (\exists{SortBlock{}} (Val:SortPrint{}, inj{SortPrint{}, SortBlock{}} (Val:SortPrint{})), \or{SortBlock{}} (\exists{SortBlock{}} (Val:SortAExp{}, inj{SortAExp{}, SortBlock{}} (Val:SortAExp{})), \bottom{SortBlock{}}()))))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \bottom{SortSet{}}() [constructor{}()] // no junk
  axiom{} \or{SortVarMod{}} (Lblval'Unds'KT-SYNTAX'Unds'VarMod{}(), \or{SortVarMod{}} (Lblvar'Unds'KT-SYNTAX'Unds'VarMod{}(), \bottom{SortVarMod{}}())) [constructor{}()] // no junk
  axiom{} \or{SortScopeCell{}} (\exists{SortScopeCell{}} (X0:SortK{}, Lbl'-LT-'scope'-GT-'{}(X0:SortK{})), \bottom{SortScopeCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortPrint{}} (\exists{SortPrint{}} (X0:SortIdList{}, Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'IdList{}(X0:SortIdList{})), \or{SortPrint{}} (\exists{SortPrint{}} (X0:SortIntList{}, Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'IntList{}(X0:SortIntList{})), \or{SortPrint{}} (\exists{SortPrint{}} (X0:SortStringList{}, Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'StringList{}(X0:SortStringList{})), \bottom{SortPrint{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortLocalEnvCellOpt{}} (LblnoLocalEnvCell{}(), \or{SortLocalEnvCellOpt{}} (\exists{SortLocalEnvCellOpt{}} (Val:SortLocalEnvCell{}, inj{SortLocalEnvCell{}, SortLocalEnvCellOpt{}} (Val:SortLocalEnvCell{})), \bottom{SortLocalEnvCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortIOString{}} (\exists{SortIOString{}} (Val:SortString{}, inj{SortString{}, SortIOString{}} (Val:SortString{})), \or{SortIOString{}} (\exists{SortIOString{}} (Val:SortIOError{}, inj{SortIOError{}, SortIOString{}} (Val:SortIOError{})), \bottom{SortIOString{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedTopCellFragment{}} (\exists{SortGeneratedTopCellFragment{}} (X0:SortTCellOpt{}, \exists{SortGeneratedTopCellFragment{}} (X1:SortGeneratedCounterCellOpt{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortTCellOpt{}, X1:SortGeneratedCounterCellOpt{}))), \bottom{SortGeneratedTopCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIOError{}} (Lbl'Hash'E2BIG{}(), \or{SortIOError{}} (Lbl'Hash'EACCES{}(), \or{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), \or{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), \or{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), \or{SortIOError{}} (Lbl'Hash'EAGAIN{}(), \or{SortIOError{}} (Lbl'Hash'EALREADY{}(), \or{SortIOError{}} (Lbl'Hash'EBADF{}(), \or{SortIOError{}} (Lbl'Hash'EBUSY{}(), \or{SortIOError{}} (Lbl'Hash'ECHILD{}(), \or{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), \or{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), \or{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), \or{SortIOError{}} (Lbl'Hash'EDEADLK{}(), \or{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), \or{SortIOError{}} (Lbl'Hash'EDOM{}(), \or{SortIOError{}} (Lbl'Hash'EEXIST{}(), \or{SortIOError{}} (Lbl'Hash'EFAULT{}(), \or{SortIOError{}} (Lbl'Hash'EFBIG{}(), \or{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), \or{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), \or{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), \or{SortIOError{}} (Lbl'Hash'EINTR{}(), \or{SortIOError{}} (Lbl'Hash'EINVAL{}(), \or{SortIOError{}} (Lbl'Hash'EIO{}(), \or{SortIOError{}} (Lbl'Hash'EISCONN{}(), \or{SortIOError{}} (Lbl'Hash'EISDIR{}(), \or{SortIOError{}} (Lbl'Hash'ELOOP{}(), \or{SortIOError{}} (Lbl'Hash'EMFILE{}(), \or{SortIOError{}} (Lbl'Hash'EMLINK{}(), \or{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), \or{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), \or{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), \or{SortIOError{}} (Lbl'Hash'ENETRESET{}(), \or{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), \or{SortIOError{}} (Lbl'Hash'ENFILE{}(), \or{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), \or{SortIOError{}} (Lbl'Hash'ENODEV{}(), \or{SortIOError{}} (Lbl'Hash'ENOENT{}(), \or{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), \or{SortIOError{}} (Lbl'Hash'ENOLCK{}(), \or{SortIOError{}} (Lbl'Hash'ENOMEM{}(), \or{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), \or{SortIOError{}} (Lbl'Hash'ENOSPC{}(), \or{SortIOError{}} (Lbl'Hash'ENOSYS{}(), \or{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), \or{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), \or{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), \or{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), \or{SortIOError{}} (Lbl'Hash'ENOTTY{}(), \or{SortIOError{}} (Lbl'Hash'ENXIO{}(), \or{SortIOError{}} (Lbl'Hash'EOF{}(), \or{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), \or{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), \or{SortIOError{}} (Lbl'Hash'EPERM{}(), \or{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), \or{SortIOError{}} (Lbl'Hash'EPIPE{}(), \or{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), \or{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), \or{SortIOError{}} (Lbl'Hash'ERANGE{}(), \or{SortIOError{}} (Lbl'Hash'EROFS{}(), \or{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), \or{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), \or{SortIOError{}} (Lbl'Hash'ESPIPE{}(), \or{SortIOError{}} (Lbl'Hash'ESRCH{}(), \or{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), \or{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), \or{SortIOError{}} (Lbl'Hash'EWOULDBLOCK{}(), \or{SortIOError{}} (Lbl'Hash'EXDEV{}(), \or{SortIOError{}} (\exists{SortIOError{}} (X0:SortString{}, Lbl'Hash'noParse{}(X0:SortString{})), \or{SortIOError{}} (\exists{SortIOError{}} (X0:SortInt{}, Lbl'Hash'unknownIOError{}(X0:SortInt{})), \bottom{SortIOError{}}()))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortLocCellOpt{}} (LblnoLocCell{}(), \or{SortLocCellOpt{}} (\exists{SortLocCellOpt{}} (Val:SortLocCell{}, inj{SortLocCell{}, SortLocCellOpt{}} (Val:SortLocCell{})), \bottom{SortLocCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortAExp{}} (\exists{SortAExp{}} (X0:SortAExp{}, \exists{SortAExp{}} (X1:SortAExp{}, Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}))), \or{SortAExp{}} (\exists{SortAExp{}} (X0:SortInt{}, \exists{SortAExp{}} (X1:SortAExp{}, Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(X0:SortInt{}, X1:SortAExp{}))), \or{SortAExp{}} (\exists{SortAExp{}} (X0:SortString{}, \exists{SortAExp{}} (X1:SortAExp{}, Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp{}(X0:SortString{}, X1:SortAExp{}))), \or{SortAExp{}} (\exists{SortAExp{}} (X0:SortAExp{}, \exists{SortAExp{}} (X1:SortAExp{}, Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}))), \or{SortAExp{}} (\exists{SortAExp{}} (X0:SortAExp{}, \exists{SortAExp{}} (X1:SortAExp{}, Lbl'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}))), \or{SortAExp{}} (\exists{SortAExp{}} (Val:SortString{}, inj{SortString{}, SortAExp{}} (Val:SortString{})), \or{SortAExp{}} (\exists{SortAExp{}} (Val:SortId{}, inj{SortId{}, SortAExp{}} (Val:SortId{})), \or{SortAExp{}} (\exists{SortAExp{}} (Val:SortInt{}, inj{SortInt{}, SortAExp{}} (Val:SortInt{})), \bottom{SortAExp{}}())))))))) [constructor{}()] // no junk

// rules
// rule `#if_#then_#else_#fi_K-EQUAL_Sort_Bool_Sort_Sort`{K}(C,B1,_0)=>B1 requires C ensures #token("true","Bool") [UNIQUE_ID(b40db17b830ee9bc7ad48d91713b0acfd528a4caa7b9f56b2654645f58b2f21f) contentStartColumn(8) contentStartLine(862) org.kframework.attributes.Location(Location(862,8,862,59)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        VarC:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortK{},R} (
        Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(VarC:SortBool{},VarB1:SortK{},Var'Unds'0:SortK{}),
        VarB1:SortK{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("862"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(862,8,862,59)"), UNIQUE'Unds'ID{}("b40db17b830ee9bc7ad48d91713b0acfd528a4caa7b9f56b2654645f58b2f21f")]

// rule `#if_#then_#else_#fi_K-EQUAL_Sort_Bool_Sort_Sort`{K}(C,_0,B2)=>B2 requires `notBool_`(C) ensures #token("true","Bool") [UNIQUE_ID(c58758cb7cd533229481b46197a7bcc89c827d31024156fac406fb13a31d73b2) contentStartColumn(8) contentStartLine(863) org.kframework.attributes.Location(Location(863,8,863,67)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(VarC:SortBool{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortK{},R} (
        Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(VarC:SortBool{},Var'Unds'0:SortK{},VarB2:SortK{}),
        VarB2:SortK{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("863"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(863,8,863,67)"), UNIQUE'Unds'ID{}("c58758cb7cd533229481b46197a7bcc89c827d31024156fac406fb13a31d73b2")]

// rule `#open(_)_K-IO_IOInt_String`(S)=>`#open(_,_)_K-IO_IOInt_String_String`(S,#token("\"r+\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(569335f78fe30a33cbf240624728b69a4b2f754fb86768b85047de1f7ce3b0ef) contentStartColumn(8) contentStartLine(1002) org.kframework.attributes.Location(Location(1002,8,1002,48)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIOInt{},R} (
        Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String{}(VarS:SortString{}),
        Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String{}(VarS:SortString{},\dv{SortString{}}("r+"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1002"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1002,8,1002,48)"), UNIQUE'Unds'ID{}("569335f78fe30a33cbf240624728b69a4b2f754fb86768b85047de1f7ce3b0ef")]

// rule `#stderr_K-IO_Int`(.KList)=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(648a904c3812c1cb0fecdba98730749b96204f03d0ceae9cf8dba2a96458d1ea) contentStartColumn(8) contentStartLine(1010) org.kframework.attributes.Location(Location(1010,8,1010,20)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'stderr'Unds'K-IO'Unds'Int{}(),
        \dv{SortInt{}}("2")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1010"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1010,8,1010,20)"), UNIQUE'Unds'ID{}("648a904c3812c1cb0fecdba98730749b96204f03d0ceae9cf8dba2a96458d1ea")]

// rule `#stdin_K-IO_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b272916c87307d1096c0f36d3414bbf8d87233e4d72cb16865787ff20a3f8d74) contentStartColumn(8) contentStartLine(1008) org.kframework.attributes.Location(Location(1008,8,1008,19)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}(),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1008"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1008,8,1008,19)"), UNIQUE'Unds'ID{}("b272916c87307d1096c0f36d3414bbf8d87233e4d72cb16865787ff20a3f8d74")]

// rule `#stdout_K-IO_Int`(.KList)=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d1cffe88ed4a0ac4f38b38f0ee6d54743fa4052ada718e9cea5f7a0ccb082d65) contentStartColumn(8) contentStartLine(1009) org.kframework.attributes.Location(Location(1009,8,1009,20)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}(),
        \dv{SortInt{}}("1")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1009"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1009,8,1009,20)"), UNIQUE'Unds'ID{}("d1cffe88ed4a0ac4f38b38f0ee6d54743fa4052ada718e9cea5f7a0ccb082d65")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{BExp,KItem}(HOLE) #as _8``~>`#freezer!__KT-SYNTAX_BExp_BExp0_`(.KList)~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`!__KT-SYNTAX_BExp_BExp`(HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(331ecf695373b74bb5f8300b4057e29247f234b14f6061485f2f138630cf5c01) cool() cool-like() left() org.kframework.attributes.Location(Location(100,19,100,44)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) seqstrict()]
  alias rule6LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule6LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule6LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp{}(VarHOLE:SortBExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(100,19,100,44)"), UNIQUE'Unds'ID{}("331ecf695373b74bb5f8300b4057e29247f234b14f6061485f2f138630cf5c01"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _8``~>`#freezer_!=__KT-SYNTAX_BExp_AExp_AExp0_`(inj{AExp,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_!=__KT-SYNTAX_BExp_AExp_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(2812dffcf5137a00ff6f1c977cb2da01e393b9d153abe84c65d7f8f91ba6d4ec) cool() cool-like() org.kframework.attributes.Location(Location(98,19,98,41)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule7LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule7LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule7LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(98,19,98,41)"), UNIQUE'Unds'ID{}("2812dffcf5137a00ff6f1c977cb2da01e393b9d153abe84c65d7f8f91ba6d4ec")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _8``~>`#freezer_!=__KT-SYNTAX_BExp_AExp_AExp1_`(inj{AExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_!=__KT-SYNTAX_BExp_AExp_AExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(df1ceeb5323d2ba154aa7d49f7fea1367f5f0d48c8a8be7217c19097541562c9) cool() cool-like() org.kframework.attributes.Location(Location(98,19,98,41)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule8LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule8LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule8LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(98,19,98,41)"), UNIQUE'Unds'ID{}("df1ceeb5323d2ba154aa7d49f7fea1367f5f0d48c8a8be7217c19097541562c9")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{BExp,KItem}(HOLE) #as _8``~>`#freezer_&&__KT-SYNTAX_BExp_BExp_BExp0_`(inj{BExp,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_&&__KT-SYNTAX_BExp_BExp_BExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(011398c92947e12a4e0d7441bcc07421647c2b15a6b1d4f23ee4f60b8ae5ec14) cool() cool-like() org.kframework.attributes.Location(Location(101,25,101,47)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule9LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortBExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule9LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarK0:SortBExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule9LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(VarK0:SortBExp{},VarHOLE:SortBExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(101,25,101,47)"), UNIQUE'Unds'ID{}("011398c92947e12a4e0d7441bcc07421647c2b15a6b1d4f23ee4f60b8ae5ec14")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{BExp,KItem}(HOLE) #as _8``~>`#freezer_&&__KT-SYNTAX_BExp_BExp_BExp1_`(inj{BExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_&&__KT-SYNTAX_BExp_BExp_BExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(62ae06bd922340028929a941ec3125d0c089d59c5662ed5f96992f390fd78a67) cool() cool-like() org.kframework.attributes.Location(Location(101,25,101,47)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule10LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortBExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule10LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK1:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarK1:SortBExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule10LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK1:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(VarHOLE:SortBExp{},VarK1:SortBExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(101,25,101,47)"), UNIQUE'Unds'ID{}("62ae06bd922340028929a941ec3125d0c089d59c5662ed5f96992f390fd78a67")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _8``~>`#freezer_*__KT-SYNTAX_AExp_AExp_AExp0_`(inj{AExp,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(`_*__KT-SYNTAX_AExp_AExp_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(2782b34332a2d90e440d5a0395afdb821d2562303dd587bb9d8dd0280c4dc4a6) cool() cool-like() left() org.kframework.attributes.Location(Location(81,25,81,55)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) seqstrict()]
  alias rule11LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule11LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule11LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(81,25,81,55)"), UNIQUE'Unds'ID{}("2782b34332a2d90e440d5a0395afdb821d2562303dd587bb9d8dd0280c4dc4a6"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _8``~>`#freezer_*__KT-SYNTAX_AExp_AExp_AExp1_`(inj{AExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(`_*__KT-SYNTAX_AExp_AExp_AExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(15a9f60095477ce383ac30c60166d7d4e845be622470c0ab38cab46e82004ef3) cool() cool-like() left() org.kframework.attributes.Location(Location(81,25,81,55)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) seqstrict()]
  alias rule12LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule12LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule12LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(81,25,81,55)"), UNIQUE'Unds'ID{}("15a9f60095477ce383ac30c60166d7d4e845be622470c0ab38cab46e82004ef3"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _8``~>`#freezer_+__KT-SYNTAX_AExp_Int_AExp0_`(inj{Int,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(`_+__KT-SYNTAX_AExp_Int_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(ad486f26e5a076bcf26182d0b33375e5861e638c63316dea2ed965953c39dcd9) cool() cool-like() left() org.kframework.attributes.Location(Location(84,19,84,48)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) seqstrict()]
  alias rule13LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortInt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule13LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarK0:SortInt{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule13LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(VarK0:SortInt{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(84,19,84,48)"), UNIQUE'Unds'ID{}("ad486f26e5a076bcf26182d0b33375e5861e638c63316dea2ed965953c39dcd9"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{Int,KItem}(HOLE) #as _8``~>`#freezer_+__KT-SYNTAX_AExp_Int_AExp1_`(inj{AExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(`_+__KT-SYNTAX_AExp_Int_AExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(5610ed4665e0b7a485803d898d2ddbaf096cd6157d2460747d2f497b80b7879c) cool() cool-like() left() org.kframework.attributes.Location(Location(84,19,84,48)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) seqstrict()]
  alias rule14LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule14LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortInt{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortInt{}, SortKItem{}}(VarHOLE:SortInt{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule14LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortInt{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(VarHOLE:SortInt{},VarK1:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(84,19,84,48)"), UNIQUE'Unds'ID{}("5610ed4665e0b7a485803d898d2ddbaf096cd6157d2460747d2f497b80b7879c"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _8``~>`#freezer_+__KT-SYNTAX_AExp_String_AExp0_`(inj{String,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(`_+__KT-SYNTAX_AExp_String_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(ab19c74335c399ca7ed1c1ddb0f4fc80211bf90503c193229b5f887ffdd1b911) cool() cool-like() left() org.kframework.attributes.Location(Location(85,19,85,51)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) seqstrict()]
  alias rule15LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortString{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule15LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(VarK0:SortString{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule15LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp{}(VarK0:SortString{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(85,19,85,51)"), UNIQUE'Unds'ID{}("ab19c74335c399ca7ed1c1ddb0f4fc80211bf90503c193229b5f887ffdd1b911"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{String,KItem}(HOLE) #as _8``~>`#freezer_+__KT-SYNTAX_AExp_String_AExp1_`(inj{AExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(`_+__KT-SYNTAX_AExp_String_AExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(b8e55134475acf57f663b89f52de0599749427940d47c70ce784aebce7bc2efa) cool() cool-like() left() org.kframework.attributes.Location(Location(85,19,85,51)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) seqstrict()]
  alias rule16LHS{}(SortGeneratedCounterCell{},SortK{},SortString{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule16LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortString{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortString{}, SortKItem{}}(VarHOLE:SortString{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule16LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortString{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp{}(VarHOLE:SortString{},VarK1:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(85,19,85,51)"), UNIQUE'Unds'ID{}("b8e55134475acf57f663b89f52de0599749427940d47c70ce784aebce7bc2efa"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _8``~>`#freezer_-__KT-SYNTAX_AExp_AExp_AExp0_`(inj{AExp,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(`_-__KT-SYNTAX_AExp_AExp_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(9d45b483827ccc79c1b5d5cdde1ec843a5bbbc963f91748a137439d7557408bc) cool() cool-like() left() org.kframework.attributes.Location(Location(83,19,83,49)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) seqstrict()]
  alias rule17LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule17LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule17LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(83,19,83,49)"), UNIQUE'Unds'ID{}("9d45b483827ccc79c1b5d5cdde1ec843a5bbbc963f91748a137439d7557408bc"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _8``~>`#freezer_-__KT-SYNTAX_AExp_AExp_AExp1_`(inj{AExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(`_-__KT-SYNTAX_AExp_AExp_AExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(ef299a2a5c178dd219c2fe5de49eeed9ab0f62d3a49beac3a1427b3efe6446c4) cool() cool-like() left() org.kframework.attributes.Location(Location(83,19,83,49)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) seqstrict()]
  alias rule18LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule18LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule18LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(83,19,83,49)"), UNIQUE'Unds'ID{}("ef299a2a5c178dd219c2fe5de49eeed9ab0f62d3a49beac3a1427b3efe6446c4"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _8``~>`#freezer_/__KT-SYNTAX_AExp_AExp_AExp0_`(inj{AExp,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(`_/__KT-SYNTAX_AExp_AExp_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(52fd3eb759931588ebfe0a145a3c4ea4d7bd7e6e3b76ef85b1dccdc07dc1d51c) cool() cool-like() left() org.kframework.attributes.Location(Location(82,25,82,55)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) seqstrict()]
  alias rule19LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule19LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule19LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(82,25,82,55)"), UNIQUE'Unds'ID{}("52fd3eb759931588ebfe0a145a3c4ea4d7bd7e6e3b76ef85b1dccdc07dc1d51c"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _8``~>`#freezer_/__KT-SYNTAX_AExp_AExp_AExp1_`(inj{AExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(`_/__KT-SYNTAX_AExp_AExp_AExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(e2889a8aeeab1ee5728eb34ae1a4738bd4a34acb987b50cb1752214d2012bacd) cool() cool-like() left() org.kframework.attributes.Location(Location(82,25,82,55)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) seqstrict()]
  alias rule20LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule20LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule20LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(82,25,82,55)"), UNIQUE'Unds'ID{}("e2889a8aeeab1ee5728eb34ae1a4738bd4a34acb987b50cb1752214d2012bacd"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _8``~>`#freezer_<=__KT-SYNTAX_BExp_AExp_AExp0_`(inj{AExp,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_<=__KT-SYNTAX_BExp_AExp_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(2122d4fded4c82ec6c72aaa1fa6d275bc1394357925e429fbb1a2323796c9696) cool() cool-like() org.kframework.attributes.Location(Location(96,19,96,41)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule21LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule21LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule21LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(96,19,96,41)"), UNIQUE'Unds'ID{}("2122d4fded4c82ec6c72aaa1fa6d275bc1394357925e429fbb1a2323796c9696")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _8``~>`#freezer_<=__KT-SYNTAX_BExp_AExp_AExp1_`(inj{AExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_<=__KT-SYNTAX_BExp_AExp_AExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(93f05ecb119461d9fdd6a39084fa96f2ca3ab76a68b201ce39d2ac25631bc7c1) cool() cool-like() org.kframework.attributes.Location(Location(96,19,96,41)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule22LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule22LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule22LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(96,19,96,41)"), UNIQUE'Unds'ID{}("93f05ecb119461d9fdd6a39084fa96f2ca3ab76a68b201ce39d2ac25631bc7c1")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _8``~>`#freezer_<__KT-SYNTAX_BExp_AExp_AExp0_`(inj{AExp,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_<__KT-SYNTAX_BExp_AExp_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(b73fd39dea5a74eff9ac42938e8c49abfc2bb1a4f9f602626e315a0b6ab100d2) cool() cool-like() org.kframework.attributes.Location(Location(94,19,94,40)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule23LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule23LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule23LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(94,19,94,40)"), UNIQUE'Unds'ID{}("b73fd39dea5a74eff9ac42938e8c49abfc2bb1a4f9f602626e315a0b6ab100d2")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _8``~>`#freezer_<__KT-SYNTAX_BExp_AExp_AExp1_`(inj{AExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_<__KT-SYNTAX_BExp_AExp_AExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(ca2d501a83f399d131f0e3a1bcac409a2924703c42ab9f271e17b5f9eddd7d11) cool() cool-like() org.kframework.attributes.Location(Location(94,19,94,40)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule24LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule24LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule24LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(94,19,94,40)"), UNIQUE'Unds'ID{}("ca2d501a83f399d131f0e3a1bcac409a2924703c42ab9f271e17b5f9eddd7d11")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _8``~>`#freezer_==__KT-SYNTAX_BExp_AExp_AExp0_`(inj{AExp,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_==__KT-SYNTAX_BExp_AExp_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(25f9cbe7ffa347cd4a9e43e21cb62fcd983ec82275938586d7a5bbd5d92a3033) cool() cool-like() org.kframework.attributes.Location(Location(97,19,97,41)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule25LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule25LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule25LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(97,19,97,41)"), UNIQUE'Unds'ID{}("25f9cbe7ffa347cd4a9e43e21cb62fcd983ec82275938586d7a5bbd5d92a3033")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _8``~>`#freezer_==__KT-SYNTAX_BExp_AExp_AExp1_`(inj{AExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_==__KT-SYNTAX_BExp_AExp_AExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(28c6036804c81869d79250f1ab5e6a0c1802b70ac9fc97a95617e9bd880fedb5) cool() cool-like() org.kframework.attributes.Location(Location(97,19,97,41)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule26LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule26LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule26LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(97,19,97,41)"), UNIQUE'Unds'ID{}("28c6036804c81869d79250f1ab5e6a0c1802b70ac9fc97a95617e9bd880fedb5")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _8``~>`#freezer_=__KT-SYNTAX_Assigner_VarDeclaration_AExp0_`(inj{VarDeclaration,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(081a6df78ddf50db65b5aca9b0241aac47096134bc6bae3e9843799991717fcb) cool() cool-like() org.kframework.attributes.Location(Location(55,25,55,59)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict(2)]
  alias rule27LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortVarDeclaration{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule27LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortVarDeclaration{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(kseq{}(inj{SortVarDeclaration{}, SortKItem{}}(VarK0:SortVarDeclaration{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule27LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortVarDeclaration{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(VarK0:SortVarDeclaration{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(55,25,55,59)"), UNIQUE'Unds'ID{}("081a6df78ddf50db65b5aca9b0241aac47096134bc6bae3e9843799991717fcb")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{BExp,KItem}(HOLE) #as _8``~>`#freezer_=__KT-SYNTAX_Assigner_VarDeclaration_BExp0_`(inj{VarDeclaration,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_BExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(c9b95d23bb9b4deb68daeb5000d9c771facfce1cee4f098a51639628798c2fb7) cool() cool-like() org.kframework.attributes.Location(Location(56,23,56,57)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict(2)]
  alias rule28LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortVarDeclaration{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule28LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortVarDeclaration{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(kseq{}(inj{SortVarDeclaration{}, SortKItem{}}(VarK0:SortVarDeclaration{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule28LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortVarDeclaration{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp{}(VarK0:SortVarDeclaration{},VarHOLE:SortBExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(56,23,56,57)"), UNIQUE'Unds'ID{}("c9b95d23bb9b4deb68daeb5000d9c771facfce1cee4f098a51639628798c2fb7")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _8``~>`#freezer_=__KT-SYNTAX_IdAssigner_Id_AExp0_`(inj{Id,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(6bf40e9e9da94c66dcf6eb62f5b94ba4645b4261c08ed0839e5c3486c64f1bcf) cool() cool-like() org.kframework.attributes.Location(Location(62,27,62,49)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict(2)]
  alias rule29LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortId{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule29LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule29LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarK0:SortId{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(62,27,62,49)"), UNIQUE'Unds'ID{}("6bf40e9e9da94c66dcf6eb62f5b94ba4645b4261c08ed0839e5c3486c64f1bcf")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{BExp,KItem}(HOLE) #as _8``~>`#freezer_=__KT-SYNTAX_IdAssigner_Id_BExp0_`(inj{Id,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_BExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(d88dea98cfc98b7bc5b021cab7f10b77806b4789b1212608eb441a5cd430afe7) cool() cool-like() org.kframework.attributes.Location(Location(63,23,63,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict(2)]
  alias rule30LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortId{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule30LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule30LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(VarK0:SortId{},VarHOLE:SortBExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(63,23,63,45)"), UNIQUE'Unds'ID{}("d88dea98cfc98b7bc5b021cab7f10b77806b4789b1212608eb441a5cd430afe7")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _8``~>`#freezer_>=__KT-SYNTAX_BExp_AExp_AExp0_`(inj{AExp,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_>=__KT-SYNTAX_BExp_AExp_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(e77676fbd73c04bb96c6cbc75fb20cc88cec72f665d8ce3c8ab98b6bf040718c) cool() cool-like() org.kframework.attributes.Location(Location(95,19,95,41)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule31LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule31LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule31LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(95,19,95,41)"), UNIQUE'Unds'ID{}("e77676fbd73c04bb96c6cbc75fb20cc88cec72f665d8ce3c8ab98b6bf040718c")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _8``~>`#freezer_>=__KT-SYNTAX_BExp_AExp_AExp1_`(inj{AExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_>=__KT-SYNTAX_BExp_AExp_AExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(8fe3818745fe8c6247ada07f9126bbc37fbfc894e936405659aea85f5916715b) cool() cool-like() org.kframework.attributes.Location(Location(95,19,95,41)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule32LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule32LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule32LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(95,19,95,41)"), UNIQUE'Unds'ID{}("8fe3818745fe8c6247ada07f9126bbc37fbfc894e936405659aea85f5916715b")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _8``~>`#freezer_>__KT-SYNTAX_BExp_AExp_AExp0_`(inj{AExp,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_>__KT-SYNTAX_BExp_AExp_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(9e3f117c1772ae3734bfb45fff7e3495d649a6dfb5886faf9b7f5805f7ca899f) cool() cool-like() org.kframework.attributes.Location(Location(93,19,93,40)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule33LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule33LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule33LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(93,19,93,40)"), UNIQUE'Unds'ID{}("9e3f117c1772ae3734bfb45fff7e3495d649a6dfb5886faf9b7f5805f7ca899f")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _8``~>`#freezer_>__KT-SYNTAX_BExp_AExp_AExp1_`(inj{AExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_>__KT-SYNTAX_BExp_AExp_AExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(eaf883fe71eddedfec7c7a7811f8f59d3d735cdae5af155206ed676d4e75da8d) cool() cool-like() org.kframework.attributes.Location(Location(93,19,93,40)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule34LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule34LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule34LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(93,19,93,40)"), UNIQUE'Unds'ID{}("eaf883fe71eddedfec7c7a7811f8f59d3d735cdae5af155206ed676d4e75da8d")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{BExp,KItem}(HOLE) #as _8``~>`#freezer_||__KT-SYNTAX_BExp_BExp_BExp0_`(inj{BExp,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_||__KT-SYNTAX_BExp_BExp_BExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(e01662d0241776bea1a9d97124130782a7f161cf1f3bee0ecab11e611532a44c) cool() cool-like() left() org.kframework.attributes.Location(Location(102,19,102,47)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule35LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortBExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule35LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarK0:SortBExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule35LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(VarK0:SortBExp{},VarHOLE:SortBExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(102,19,102,47)"), UNIQUE'Unds'ID{}("e01662d0241776bea1a9d97124130782a7f161cf1f3bee0ecab11e611532a44c")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{BExp,KItem}(HOLE) #as _8``~>`#freezer_||__KT-SYNTAX_BExp_BExp_BExp1_`(inj{BExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_||__KT-SYNTAX_BExp_BExp_BExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(c3e9ccf91babcbf3378378510df39f4e136238e26ac383c1589fc69108d3d3cf) cool() cool-like() left() org.kframework.attributes.Location(Location(102,19,102,47)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule36LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortBExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule36LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK1:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarK1:SortBExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule36LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK1:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(VarHOLE:SortBExp{},VarK1:SortBExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(102,19,102,47)"), UNIQUE'Unds'ID{}("c3e9ccf91babcbf3378378510df39f4e136238e26ac383c1589fc69108d3d3cf")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{BExp,KItem}(HOLE) #as _8``~>`#freezerif(_)__KT-SYNTAX_IfStmt_BExp_Block1_`(inj{Block,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IfStmt,KItem}(`if(_)__KT-SYNTAX_IfStmt_BExp_Block`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(4717de7d2a5963a18cfe656a40fc3f7961beb4ccb1418e5e2b7c2cd8b472c669) cool() cool-like() org.kframework.attributes.Location(Location(111,23,111,57)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict(1)]
  alias rule37LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortBlock{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule37LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK1:SortBlock{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarK1:SortBlock{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule37LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK1:SortBlock{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIfStmt{}, SortKItem{}}(Lblif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block{}(VarHOLE:SortBExp{},VarK1:SortBlock{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(111,23,111,57)"), UNIQUE'Unds'ID{}("4717de7d2a5963a18cfe656a40fc3f7961beb4ccb1418e5e2b7c2cd8b472c669")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{BExp,KItem}(HOLE) #as _8``~>`#freezerif(_)___KT-SYNTAX_IfStmt_BExp_Block_ElseIfStmt1_`(inj{Block,KItem}(K1),inj{ElseIfStmt,KItem}(K2))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IfStmt,KItem}(`if(_)___KT-SYNTAX_IfStmt_BExp_Block_ElseIfStmt`(HOLE,K1,K2))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(bdc522eef607896f0d18293fec26d2334e0ed442bdb5ef307bfedef24d16c886) cool() cool-like() org.kframework.attributes.Location(Location(112,19,112,64)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict(1)]
  alias rule38LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortBlock{},SortElseIfStmt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule38LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK1:SortBlock{},VarK2:SortElseIfStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarK1:SortBlock{}),dotk{}()),kseq{}(inj{SortElseIfStmt{}, SortKItem{}}(VarK2:SortElseIfStmt{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule38LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK1:SortBlock{},VarK2:SortElseIfStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIfStmt{}, SortKItem{}}(Lblif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt{}(VarHOLE:SortBExp{},VarK1:SortBlock{},VarK2:SortElseIfStmt{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(112,19,112,64)"), UNIQUE'Unds'ID{}("bdc522eef607896f0d18293fec26d2334e0ed442bdb5ef307bfedef24d16c886")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _8``~>`#freezerval_=__KT-SYNTAX_IdAssigner_Id_AExp0_`(inj{Id,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`val_=__KT-SYNTAX_IdAssigner_Id_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(64eeaa83d518946f05f9ec15978460a1203925e0ff77d0d76b0f2bca231720aa) cool() cool-like() org.kframework.attributes.Location(Location(70,23,70,51)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict(2)]
  alias rule39LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortId{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule39LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule39LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarK0:SortId{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(70,23,70,51)"), UNIQUE'Unds'ID{}("64eeaa83d518946f05f9ec15978460a1203925e0ff77d0d76b0f2bca231720aa")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{BExp,KItem}(HOLE) #as _8``~>`#freezerval_=__KT-SYNTAX_IdAssigner_Id_BExp0_`(inj{Id,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`val_=__KT-SYNTAX_IdAssigner_Id_BExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(a26c76c4821f7dbff5fbe79854d2fdd3a7d7743a7bc22e275329d02319ae19c3) cool() cool-like() org.kframework.attributes.Location(Location(71,23,71,51)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict(2)]
  alias rule40LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortId{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule40LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule40LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(VarK0:SortId{},VarHOLE:SortBExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(71,23,71,51)"), UNIQUE'Unds'ID{}("a26c76c4821f7dbff5fbe79854d2fdd3a7d7743a7bc22e275329d02319ae19c3")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _8``~>`#freezervar_=__KT-SYNTAX_IdAssigner_Id_AExp0_`(inj{Id,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(ffb47ef121756a6b5e3260b08ad2d57ebf9d55c15488dfa37ca0765572a3e914) cool() cool-like() org.kframework.attributes.Location(Location(67,23,67,51)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict(2)]
  alias rule41LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortId{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule41LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule41LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarK0:SortId{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(67,23,67,51)"), UNIQUE'Unds'ID{}("ffb47ef121756a6b5e3260b08ad2d57ebf9d55c15488dfa37ca0765572a3e914")]

// rule `<generatedTop>`(`<T>`(`<k>`(``inj{BExp,KItem}(HOLE) #as _8``~>`#freezervar_=__KT-SYNTAX_IdAssigner_Id_BExp0_`(inj{Id,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_BExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_8)) ensures #token("true","Bool") [UNIQUE_ID(b866807c52d83f8810f3594c4555f221f26a92c5ab03fd166819cc1eea8e131e) cool() cool-like() org.kframework.attributes.Location(Location(68,23,68,51)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict(2)]
  alias rule42LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortId{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortKItem{}) : SortGeneratedTopCell{}
  where rule42LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule42LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(VarK0:SortId{},VarHOLE:SortBExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(68,23,68,51)"), UNIQUE'Unds'ID{}("b866807c52d83f8810f3594c4555f221f26a92c5ab03fd166819cc1eea8e131e")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{DoWhileStmt,KItem}(`do_while(_)_KT-SYNTAX_DoWhileStmt_Block_BExp`(`{_}_KT-SYNTAX_Block_Stmt`(S),E) #as _9)~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Stmt,KItem}(S)~>inj{IfStmt,KItem}(`if(_)__KT-SYNTAX_IfStmt_BExp_Block`(E,`{_}_KT-SYNTAX_Block_Stmt`(inj{DoWhileStmt,Stmt}(_9))))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0c32df0a7286dbbddf4adb8e712b754437ac3d9bebdd032c3bdc3d753839dcfc) contentStartColumn(10) contentStartLine(163) org.kframework.attributes.Location(Location(163,10,163,76)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) structural()]
  alias rule43LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortStmt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortDoWhileStmt{}) : SortGeneratedTopCell{}
  where rule43LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarE:SortBExp{},VarS:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'9:SortDoWhileStmt{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortDoWhileStmt{}, SortKItem{}}(\and{SortDoWhileStmt{}}(Lbldo'Unds'while'LParUndsRParUnds'KT-SYNTAX'Unds'DoWhileStmt'Unds'Block'Unds'BExp{}(Lbl'LBraUndsRBraUnds'KT-SYNTAX'Unds'Block'Unds'Stmt{}(VarS:SortStmt{}),VarE:SortBExp{}),Var'Unds'9:SortDoWhileStmt{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule43LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarE:SortBExp{},VarS:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'9:SortDoWhileStmt{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),kseq{}(inj{SortIfStmt{}, SortKItem{}}(Lblif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block{}(VarE:SortBExp{},Lbl'LBraUndsRBraUnds'KT-SYNTAX'Unds'Block'Unds'Stmt{}(inj{SortDoWhileStmt{}, SortStmt{}}(Var'Unds'9:SortDoWhileStmt{})))),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("163"), contentStartColumn{}("10"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(163,10,163,76)"), UNIQUE'Unds'ID{}("0c32df0a7286dbbddf4adb8e712b754437ac3d9bebdd032c3bdc3d753839dcfc")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{WhileStmt,KItem}(`while(_)__KT-SYNTAX_WhileStmt_BExp_Block`(E,`{_}_KT-SYNTAX_Block_Stmt`(S)) #as _9)~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IfStmt,KItem}(`if(_)__KT-SYNTAX_IfStmt_BExp_Block`(E,`{_}_KT-SYNTAX_Block_Stmt`(`___KT-SYNTAX_Stmt_Stmt_Stmt`(S,inj{WhileStmt,Stmt}(_9)))))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(59ffc8fc501ab36c04a2908c14f60b8a45064e98f010665324428c07601c8c53) contentStartColumn(10) contentStartLine(162) org.kframework.attributes.Location(Location(162,10,162,65)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) structural()]
  alias rule44LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortStmt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortWhileStmt{}) : SortGeneratedTopCell{}
  where rule44LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarE:SortBExp{},VarS:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'9:SortWhileStmt{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortWhileStmt{}, SortKItem{}}(\and{SortWhileStmt{}}(Lblwhile'LParUndsRParUndsUnds'KT-SYNTAX'Unds'WhileStmt'Unds'BExp'Unds'Block{}(VarE:SortBExp{},Lbl'LBraUndsRBraUnds'KT-SYNTAX'Unds'Block'Unds'Stmt{}(VarS:SortStmt{})),Var'Unds'9:SortWhileStmt{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule44LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarE:SortBExp{},VarS:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'9:SortWhileStmt{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIfStmt{}, SortKItem{}}(Lblif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block{}(VarE:SortBExp{},Lbl'LBraUndsRBraUnds'KT-SYNTAX'Unds'Block'Unds'Stmt{}(Lbl'UndsUndsUnds'KT-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(VarS:SortStmt{},inj{SortWhileStmt{}, SortStmt{}}(Var'Unds'9:SortWhileStmt{}))))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("162"), contentStartColumn{}("10"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(162,10,162,65)"), UNIQUE'Unds'ID{}("59ffc8fc501ab36c04a2908c14f60b8a45064e98f010665324428c07601c8c53")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Id,KItem}(I)~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I),L),DotVar3)) #as _7,`<store>`(`_Map_`(`_|->_`(L,V),DotVar4)) #as _9,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(V~>DotVar2),_0,_1,_7,_9,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0389400ab02b42fde0be22606d3e79e24ad00b0d812734905348972217007e97) contentStartColumn(10) contentStartLine(467) cool-like() org.kframework.attributes.Location(Location(467,10,469,41)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule45LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortKItem{},SortKItem{},SortOutCell{},SortFunctionsCell{},SortLocCell{},SortEnvCell{},SortStoreCell{}) : SortGeneratedTopCell{}
  where rule45LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI:SortId{},VarL:SortKItem{},VarV:SortKItem{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortLocCell{},Var'Unds'7:SortEnvCell{},Var'Unds'9:SortStoreCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'7:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},VarV:SortKItem{}),VarDotVar4:SortMap{})),Var'Unds'9:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule45LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI:SortId{},VarL:SortKItem{},VarV:SortKItem{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortLocCell{},Var'Unds'7:SortEnvCell{},Var'Unds'9:SortStoreCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(VarV:SortKItem{},VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'7:SortEnvCell{},Var'Unds'9:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("467"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(467,10,469,41)"), UNIQUE'Unds'ID{}("0389400ab02b42fde0be22606d3e79e24ad00b0d812734905348972217007e97")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`!__KT-SYNTAX_BExp_BExp`(HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(HOLE)~>`#freezer!__KT-SYNTAX_BExp_BExp0_`(.KList)~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{BExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(42ae761d6b2bd2033cfa6debb0b077ae21285a8796ccc656c73cc5a8ccaa966b) heat() left() org.kframework.attributes.Location(Location(100,19,100,44)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) seqstrict()]
  alias rule46LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule46LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp{}(VarHOLE:SortBExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule46LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),kseq{}(Lbl'Hash'freezer'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp0'Unds'{}(),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(100,19,100,44)"), UNIQUE'Unds'ID{}("42ae761d6b2bd2033cfa6debb0b077ae21285a8796ccc656c73cc5a8ccaa966b"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`!__KT-SYNTAX_BExp_BExp`(inj{Bool,BExp}(#token("true","Bool") #as _11)))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Bool,KItem}(#token("false","Bool"))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires _11 ensures _11 [UNIQUE_ID(6aa447a400e5aae25b3ac0e11be488059631c1152ae8e61b0bd639f19610053b) contentStartColumn(10) contentStartLine(206) org.kframework.attributes.Location(Location(206,10,206,25)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule47LHS{}(SortGeneratedCounterCell{},SortK{},SortOutCell{},SortFunctionsCell{},SortBool{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule47LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortBool{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Var'Unds'11:SortBool{},
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp{}(inj{SortBool{}, SortBExp{}}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'11:SortBool{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule47LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortBool{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Var'Unds'11:SortBool{},
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(\dv{SortBool{}}("false")),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("206"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(206,10,206,25)"), UNIQUE'Unds'ID{}("6aa447a400e5aae25b3ac0e11be488059631c1152ae8e61b0bd639f19610053b")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`!__KT-SYNTAX_BExp_BExp`(inj{Bool,BExp}(#token("false","Bool"))))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Bool,KItem}(#token("true","Bool"))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(808a075df034f8f61afc6c8e62c65c1f74e08450d02a8c43a293f000d084697c) contentStartColumn(10) contentStartLine(207) org.kframework.attributes.Location(Location(207,10,207,25)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule48LHS{}(SortGeneratedCounterCell{},SortK{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule48LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'BangUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp{}(inj{SortBool{}, SortBExp{}}(\dv{SortBool{}}("false")))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule48LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(\dv{SortBool{}}("true")),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("207"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(207,10,207,25)"), UNIQUE'Unds'ID{}("808a075df034f8f61afc6c8e62c65c1f74e08450d02a8c43a293f000d084697c")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7cc01e097372e726e1b9130596f445ac64cef89564cb6d04f12172b751d2229c) contentStartColumn(10) contentStartLine(133) org.kframework.attributes.Location(Location(133,10,133,19)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule49LHS{}(SortGeneratedCounterCell{},SortK{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule49LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule49LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("133"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(133,10,133,19)"), UNIQUE'Unds'ID{}("7cc01e097372e726e1b9130596f445ac64cef89564cb6d04f12172b751d2229c")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_!=__KT-SYNTAX_BExp_AExp_AExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_!=__KT-SYNTAX_BExp_AExp_AExp1_`(inj{AExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(39cc0f686db8cdb2e76abc14087d616a6f60137a236f2194d24b48db44387040) heat() org.kframework.attributes.Location(Location(98,19,98,41)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule50LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule50LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule50LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(98,19,98,41)"), UNIQUE'Unds'ID{}("39cc0f686db8cdb2e76abc14087d616a6f60137a236f2194d24b48db44387040")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_!=__KT-SYNTAX_BExp_AExp_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_!=__KT-SYNTAX_BExp_AExp_AExp0_`(inj{AExp,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(3b228c8ea39a2de478cc1707883ca52eea24c892466ca2c676c3f26cc59f421f) heat() org.kframework.attributes.Location(Location(98,19,98,41)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule51LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule51LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule51LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(98,19,98,41)"), UNIQUE'Unds'ID{}("3b228c8ea39a2de478cc1707883ca52eea24c892466ca2c676c3f26cc59f421f")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_!=__KT-SYNTAX_BExp_AExp_AExp`(inj{Int,AExp}(I1),inj{Int,AExp}(I2)))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Bool,KItem}(`_=/=K_`(inj{Int,KItem}(I1),inj{Int,KItem}(I2)))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(72a0cd12f33e4ba9d503df507df81bd1b9979562bbd5f56809082a3af6d1b07d) contentStartColumn(10) contentStartLine(205) org.kframework.attributes.Location(Location(205,10,205,40)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule52LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortInt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule52LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(inj{SortInt{}, SortAExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortAExp{}}(VarI2:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule52LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarI1:SortInt{}),dotk{}()),kseq{}(inj{SortInt{}, SortKItem{}}(VarI2:SortInt{}),dotk{}()))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("205"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(205,10,205,40)"), UNIQUE'Unds'ID{}("72a0cd12f33e4ba9d503df507df81bd1b9979562bbd5f56809082a3af6d1b07d")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_&&__KT-SYNTAX_BExp_BExp_BExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(HOLE)~>`#freezer_&&__KT-SYNTAX_BExp_BExp_BExp1_`(inj{BExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{BExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(72a4b47419b7aacc20548f3486c5d7671664822aada09714a3a5daec8d2bc8f4) heat() org.kframework.attributes.Location(Location(101,25,101,47)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule53LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortBExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule53LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK1:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(VarHOLE:SortBExp{},VarK1:SortBExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule53LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK1:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),kseq{}(Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarK1:SortBExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(101,25,101,47)"), UNIQUE'Unds'ID{}("72a4b47419b7aacc20548f3486c5d7671664822aada09714a3a5daec8d2bc8f4")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_&&__KT-SYNTAX_BExp_BExp_BExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(HOLE)~>`#freezer_&&__KT-SYNTAX_BExp_BExp_BExp0_`(inj{BExp,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{BExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(5227c0ae67f51f57297a439ec46ecf733014fb40ae1cacb8f9040f8cd1d4466e) heat() org.kframework.attributes.Location(Location(101,25,101,47)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule54LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortBExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule54LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(VarK0:SortBExp{},VarHOLE:SortBExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule54LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),kseq{}(Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarK0:SortBExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(101,25,101,47)"), UNIQUE'Unds'ID{}("5227c0ae67f51f57297a439ec46ecf733014fb40ae1cacb8f9040f8cd1d4466e")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_&&__KT-SYNTAX_BExp_BExp_BExp`(inj{Bool,BExp}(#token("false","Bool") #as _12),_0))~>DotVar2),_1,_2,_3,_4,_5),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Bool,KItem}(_12)~>DotVar2),_1,_2,_3,_4,_5),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(edea6bd2746756ed3b29c75a2738ab37b595a7be4b721034498bcc4eb2e6d572) contentStartColumn(10) contentStartLine(209) org.kframework.attributes.Location(Location(209,10,209,29)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule55LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortOutCell{},SortBool{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule55LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortBExp{},Var'Unds'1:SortOutCell{},Var'Unds'12:SortBool{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(inj{SortBool{}, SortBExp{}}(\and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'12:SortBool{})),Var'Unds'0:SortBExp{})),VarDotVar2:SortK{})),Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule55LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortBExp{},Var'Unds'1:SortOutCell{},Var'Unds'12:SortBool{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Var'Unds'12:SortBool{}),VarDotVar2:SortK{})),Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("209"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(209,10,209,29)"), UNIQUE'Unds'ID{}("edea6bd2746756ed3b29c75a2738ab37b595a7be4b721034498bcc4eb2e6d572")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_&&__KT-SYNTAX_BExp_BExp_BExp`(inj{Bool,BExp}(#token("true","Bool") #as _11),E))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(E)~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires _11 ensures _11 [UNIQUE_ID(7eb34bcdcc93b83ac0e43fb57aa064a37e0fcdd2bf1ce00facc92686ec3433d6) contentStartColumn(10) contentStartLine(208) org.kframework.attributes.Location(Location(208,10,208,29)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule56LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortOutCell{},SortFunctionsCell{},SortBool{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule56LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarE:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortBool{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Var'Unds'11:SortBool{},
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(inj{SortBool{}, SortBExp{}}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'11:SortBool{})),VarE:SortBExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule56LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarE:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortBool{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Var'Unds'11:SortBool{},
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarE:SortBExp{}),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("208"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(208,10,208,29)"), UNIQUE'Unds'ID{}("7eb34bcdcc93b83ac0e43fb57aa064a37e0fcdd2bf1ce00facc92686ec3433d6")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{FuncCall,KItem}(`_(_)_KT-SYNTAX_FuncCall_Id_IntList`(I,`.List{"_,__KT-SYNTAX_IntList_Int_IntList"}_IntList`(.KList)))~>DotVar2),_0,`<functions>`(`_ThreadCellMap_`(`ThreadCellMapItem`(`<id>`(inj{Id,KItem}(I)),`<thread>`(`<id>`(inj{Id,KItem}(I)),`<scope>`(inj{Stmt,KItem}(S)),`<params>`(P),`<temp>`(inj{Params,KItem}(`.List{"_,__KT-SYNTAX_Params_Id_Params"}_Params`(.KList))),DotVar4)),DotVar3)),_1,_2,_3),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Local,KItem}(`local(_,_)_KT-SYNTAX_Local_Id_Stmt`(I,S))~>DotVar2),_0,`<functions>`(`_ThreadCellMap_`(`ThreadCellMapItem`(`<id>`(inj{Id,KItem}(I)),`<thread>`(`<id>`(inj{Id,KItem}(I)),`<scope>`(inj{Stmt,KItem}(S)),`<params>`(P),`<temp>`(P),DotVar4)),DotVar3)),_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(80b140c0cb5df27b2ee8d87217c613983857ce19c305c5914a0f334f225ca039) contentStartColumn(10) contentStartLine(492) org.kframework.attributes.Location(Location(492,10,500,18)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule57LHS{}(SortGeneratedCounterCell{},SortK{},SortThreadCellMap{},SortLocalEnvCell{},SortId{},SortK{},SortStmt{},SortOutCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule57LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortThreadCellMap{},VarDotVar4:SortLocalEnvCell{},VarI:SortId{},VarP:SortK{},VarS:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortEnvCell{},Var'Unds'2:SortStoreCell{},Var'Unds'3:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFuncCall{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KT-SYNTAX'Unds'FuncCall'Unds'Id'Unds'IntList{}(VarI:SortId{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IntList'Unds'Int'Unds'IntList'QuotRBraUnds'IntList{}())),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Lbl'-LT-'functions'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),dotk{}())),Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),dotk{}())),Lbl'-LT-'scope'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),dotk{}())),Lbl'-LT-'params'-GT-'{}(VarP:SortK{}),Lbl'-LT-'temp'-GT-'{}(kseq{}(inj{SortParams{}, SortKItem{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'Params'Unds'Id'Unds'Params'QuotRBraUnds'Params{}()),dotk{}())),VarDotVar4:SortLocalEnvCell{})),VarDotVar3:SortThreadCellMap{})),Var'Unds'1:SortEnvCell{},Var'Unds'2:SortStoreCell{},Var'Unds'3:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule57LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortThreadCellMap{},VarDotVar4:SortLocalEnvCell{},VarI:SortId{},VarP:SortK{},VarS:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortEnvCell{},Var'Unds'2:SortStoreCell{},Var'Unds'3:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortLocal{}, SortKItem{}}(Lbllocal'LParUndsCommUndsRParUnds'KT-SYNTAX'Unds'Local'Unds'Id'Unds'Stmt{}(VarI:SortId{},VarS:SortStmt{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Lbl'-LT-'functions'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),dotk{}())),Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),dotk{}())),Lbl'-LT-'scope'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),dotk{}())),Lbl'-LT-'params'-GT-'{}(VarP:SortK{}),Lbl'-LT-'temp'-GT-'{}(VarP:SortK{}),VarDotVar4:SortLocalEnvCell{})),VarDotVar3:SortThreadCellMap{})),Var'Unds'1:SortEnvCell{},Var'Unds'2:SortStoreCell{},Var'Unds'3:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("492"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(492,10,500,18)"), UNIQUE'Unds'ID{}("80b140c0cb5df27b2ee8d87217c613983857ce19c305c5914a0f334f225ca039")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{FuncCall,KItem}(`_(_)_KT-SYNTAX_FuncCall_Id_IntList`(I,`_,__KT-SYNTAX_IntList_Int_IntList`(V,Vs)))~>DotVar2),_2,`<functions>`(`_ThreadCellMap_`(`ThreadCellMapItem`(`<id>`(inj{Id,KItem}(I)),`<thread>`(`<id>`(inj{Id,KItem}(I)),_0,_1,`<temp>`(inj{Params,KItem}(`_,__KT-SYNTAX_Params_Id_Params`(P,Ps))),`<localEnv>`(Rho))),DotVar3)),_3,`<store>`(SMap),`<loc>`(L)),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{FuncCall,KItem}(`_(_)_KT-SYNTAX_FuncCall_Id_IntList`(I,Vs))~>DotVar2),_2,`<functions>`(`_ThreadCellMap_`(`ThreadCellMapItem`(`<id>`(inj{Id,KItem}(I)),`<thread>`(`<id>`(inj{Id,KItem}(I)),_0,_1,`<temp>`(inj{Params,KItem}(Ps)),`<localEnv>`(`_Map_`(Rho,`_|->_`(inj{Id,KItem}(P),inj{Int,KItem}(L)))))),DotVar3)),_3,`<store>`(`_Map_`(SMap,`_|->_`(inj{Int,KItem}(L),inj{Int,KItem}(V)))),`<loc>`(`_+Int_`(L,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ce6063720a2d60900da2df1f60c5403e35088249c014eb99bcc19e90fdb57a95) contentStartColumn(10) contentStartLine(502) org.kframework.attributes.Location(Location(502,10,511,35)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule58LHS{}(SortGeneratedCounterCell{},SortK{},SortThreadCellMap{},SortId{},SortInt{},SortId{},SortParams{},SortMap{},SortMap{},SortInt{},SortIntList{},SortScopeCell{},SortParamsCell{},SortOutCell{},SortEnvCell{}) : SortGeneratedTopCell{}
  where rule58LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortThreadCellMap{},VarI:SortId{},VarL:SortInt{},VarP:SortId{},VarPs:SortParams{},VarRho:SortMap{},VarSMap:SortMap{},VarV:SortInt{},VarVs:SortIntList{},Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Var'Unds'2:SortOutCell{},Var'Unds'3:SortEnvCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFuncCall{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KT-SYNTAX'Unds'FuncCall'Unds'Id'Unds'IntList{}(VarI:SortId{},Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IntList'Unds'Int'Unds'IntList{}(VarV:SortInt{},VarVs:SortIntList{}))),VarDotVar2:SortK{})),Var'Unds'2:SortOutCell{},Lbl'-LT-'functions'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),dotk{}())),Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),dotk{}())),Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Lbl'-LT-'temp'-GT-'{}(kseq{}(inj{SortParams{}, SortKItem{}}(Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'Params'Unds'Id'Unds'Params{}(VarP:SortId{},VarPs:SortParams{})),dotk{}())),Lbl'-LT-'localEnv'-GT-'{}(VarRho:SortMap{}))),VarDotVar3:SortThreadCellMap{})),Var'Unds'3:SortEnvCell{},Lbl'-LT-'store'-GT-'{}(VarSMap:SortMap{}),Lbl'-LT-'loc'-GT-'{}(VarL:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule58LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortThreadCellMap{},VarI:SortId{},VarL:SortInt{},VarP:SortId{},VarPs:SortParams{},VarRho:SortMap{},VarSMap:SortMap{},VarV:SortInt{},VarVs:SortIntList{},Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Var'Unds'2:SortOutCell{},Var'Unds'3:SortEnvCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFuncCall{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KT-SYNTAX'Unds'FuncCall'Unds'Id'Unds'IntList{}(VarI:SortId{},VarVs:SortIntList{})),VarDotVar2:SortK{})),Var'Unds'2:SortOutCell{},Lbl'-LT-'functions'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),dotk{}())),Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),dotk{}())),Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Lbl'-LT-'temp'-GT-'{}(kseq{}(inj{SortParams{}, SortKItem{}}(VarPs:SortParams{}),dotk{}())),Lbl'-LT-'localEnv'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarRho:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarP:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{})))))),VarDotVar3:SortThreadCellMap{})),Var'Unds'3:SortEnvCell{},Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarSMap:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortInt{}, SortKItem{}}(VarV:SortInt{})))),Lbl'-LT-'loc'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("502"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(502,10,511,35)"), UNIQUE'Unds'ID{}("ce6063720a2d60900da2df1f60c5403e35088249c014eb99bcc19e90fdb57a95")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(`_*__KT-SYNTAX_AExp_AExp_AExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_*__KT-SYNTAX_AExp_AExp_AExp1_`(inj{AExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(eb0de505737cfe12902d3b0b6e8b003ef04ee55a42ea3e026a6186c226d46e57) heat() left() org.kframework.attributes.Location(Location(81,25,81,55)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) seqstrict()]
  alias rule59LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule59LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule59LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(81,25,81,55)"), UNIQUE'Unds'ID{}("eb0de505737cfe12902d3b0b6e8b003ef04ee55a42ea3e026a6186c226d46e57"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(`_*__KT-SYNTAX_AExp_AExp_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_*__KT-SYNTAX_AExp_AExp_AExp0_`(inj{AExp,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(isKResult(inj{AExp,KItem}(K0)),#token("true","Bool")),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(2ca73c6f9209198cd44b62bf6cd43b13a90f81579f144810a802b3aee59a227d) heat() left() org.kframework.attributes.Location(Location(81,25,81,55)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) seqstrict()]
  alias rule60LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule60LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule60LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(81,25,81,55)"), UNIQUE'Unds'ID{}("2ca73c6f9209198cd44b62bf6cd43b13a90f81579f144810a802b3aee59a227d"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(`_*__KT-SYNTAX_AExp_AExp_AExp`(inj{Int,AExp}(I1),inj{Int,AExp}(I2)))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Int,KItem}(`_*Int_`(I1,I2))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eead6f48316b22ead16ef82b935c7e01c3a25985bd2df614c06b41da7f39afad) contentStartColumn(10) contentStartLine(187) org.kframework.attributes.Location(Location(187,10,187,39)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule61LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortInt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule61LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortInt{}, SortAExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortAExp{}}(VarI2:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule61LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsStar'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("187"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(187,10,187,39)"), UNIQUE'Unds'ID{}("eead6f48316b22ead16ef82b935c7e01c3a25985bd2df614c06b41da7f39afad")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{AExpMod,KItem}(`_++_KT-SYNTAX_AExpMod_Id`(I))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I),L),DotVar3)) #as _8,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)),_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_0,_1,_8,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(`_+Int_`(V,#token("1","Int")))),DotVar4)),_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(62cac6bdd4032ddefb1e4d8c39d9d90ab4a9c094fb953cf1bdc8bd9598accb04) contentStartColumn(10) contentStartLine(190) org.kframework.attributes.Location(Location(190,10,192,55)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule62LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortKItem{},SortInt{},SortOutCell{},SortFunctionsCell{},SortLocCell{},SortEnvCell{}) : SortGeneratedTopCell{}
  where rule62LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortEnvCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExpMod{}, SortKItem{}}(Lbl'UndsPlusPlusUnds'KT-SYNTAX'Unds'AExpMod'Unds'Id{}(VarI:SortId{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'8:SortEnvCell{}),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule62LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortEnvCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'8:SortEnvCell{},Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(Lbl'UndsPlus'Int'Unds'{}(VarV:SortInt{},\dv{SortInt{}}("1")))),VarDotVar4:SortMap{})),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("190"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(190,10,192,55)"), UNIQUE'Unds'ID{}("62cac6bdd4032ddefb1e4d8c39d9d90ab4a9c094fb953cf1bdc8bd9598accb04")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(`_+__KT-SYNTAX_AExp_Int_AExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Int,KItem}(HOLE)~>`#freezer_+__KT-SYNTAX_AExp_Int_AExp1_`(inj{AExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{Int,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(1652e4d1c873689fa07c45d130e59f158b550c09882e78f35ec99019d924d77c) heat() left() org.kframework.attributes.Location(Location(84,19,84,48)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) seqstrict()]
  alias rule63LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule63LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortInt{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarHOLE:SortInt{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(VarHOLE:SortInt{},VarK1:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule63LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortInt{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarHOLE:SortInt{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(84,19,84,48)"), UNIQUE'Unds'ID{}("1652e4d1c873689fa07c45d130e59f158b550c09882e78f35ec99019d924d77c"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(`_+__KT-SYNTAX_AExp_Int_AExp`(I1,inj{Int,AExp}(I2)))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Int,KItem}(`_+Int_`(I1,I2))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e1b9bb3a3e4761b5b11f9bae9b2dbea4982b03af0aea6163cc5e3945e2942cb7) contentStartColumn(10) contentStartLine(185) org.kframework.attributes.Location(Location(185,10,185,39)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule64LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortInt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule64LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(VarI1:SortInt{},inj{SortInt{}, SortAExp{}}(VarI2:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule64LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("185"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(185,10,185,39)"), UNIQUE'Unds'ID{}("e1b9bb3a3e4761b5b11f9bae9b2dbea4982b03af0aea6163cc5e3945e2942cb7")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(`_+__KT-SYNTAX_AExp_Int_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_+__KT-SYNTAX_AExp_Int_AExp0_`(inj{Int,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(isKResult(inj{Int,KItem}(K0)),#token("true","Bool")),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(46fee1e7a79672e0b1e1f356f33363a346aec504657c7854dfc81398883ea979) heat() left() org.kframework.attributes.Location(Location(84,19,84,48)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) seqstrict()]
  alias rule65LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortInt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule65LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarK0:SortInt{}),dotk{}())),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(VarK0:SortInt{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule65LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp0'Unds'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarK0:SortInt{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(84,19,84,48)"), UNIQUE'Unds'ID{}("46fee1e7a79672e0b1e1f356f33363a346aec504657c7854dfc81398883ea979"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(`_+__KT-SYNTAX_AExp_String_AExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{String,KItem}(HOLE)~>`#freezer_+__KT-SYNTAX_AExp_String_AExp1_`(inj{AExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{String,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(06a443884116c05433e0e11ca55b3f1e47cabd9b84199a6f216c95e3914c0f5f) heat() left() org.kframework.attributes.Location(Location(85,19,85,51)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) seqstrict()]
  alias rule66LHS{}(SortGeneratedCounterCell{},SortK{},SortString{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule66LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortString{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortString{}, SortKItem{}}(VarHOLE:SortString{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp{}(VarHOLE:SortString{},VarK1:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule66LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortString{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortString{}, SortKItem{}}(VarHOLE:SortString{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(85,19,85,51)"), UNIQUE'Unds'ID{}("06a443884116c05433e0e11ca55b3f1e47cabd9b84199a6f216c95e3914c0f5f"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(`_+__KT-SYNTAX_AExp_String_AExp`(I1,inj{String,AExp}(I2)))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{String,KItem}(`_+String__STRING_String_String_String`(I1,I2))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(971ebe0f8d5dcd1c74cd157554ab45249c6f7793565cc78e313398b0eb3177f9) contentStartColumn(10) contentStartLine(184) org.kframework.attributes.Location(Location(184,10,184,48)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule67LHS{}(SortGeneratedCounterCell{},SortK{},SortString{},SortString{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule67LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortString{},VarI2:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp{}(VarI1:SortString{},inj{SortString{}, SortAExp{}}(VarI2:SortString{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule67LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortString{},VarI2:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortString{}, SortKItem{}}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(VarI1:SortString{},VarI2:SortString{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("184"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(184,10,184,48)"), UNIQUE'Unds'ID{}("971ebe0f8d5dcd1c74cd157554ab45249c6f7793565cc78e313398b0eb3177f9")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(`_+__KT-SYNTAX_AExp_String_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_+__KT-SYNTAX_AExp_String_AExp0_`(inj{String,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(isKResult(inj{String,KItem}(K0)),#token("true","Bool")),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(3be8ad81b9a93d5f6ff644883f83ab7d95b135d94d993327bf902480cdec3b50) heat() left() org.kframework.attributes.Location(Location(85,19,85,51)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) seqstrict()]
  alias rule68LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortString{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule68LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortString{}, SortKItem{}}(VarK0:SortString{}),dotk{}())),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp{}(VarK0:SortString{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule68LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp0'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(VarK0:SortString{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(85,19,85,51)"), UNIQUE'Unds'ID{}("3be8ad81b9a93d5f6ff644883f83ab7d95b135d94d993327bf902480cdec3b50"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{AExpMod,KItem}(`_--_KT-SYNTAX_AExpMod_Id`(I))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I),L),DotVar3)) #as _8,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)),_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_0,_1,_8,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(`_-Int_`(V,#token("1","Int")))),DotVar4)),_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0a4f0bc6efd4ee15c000866b16ccfc9d6fd9617fdbd7c57fa5f3e236819716f5) contentStartColumn(10) contentStartLine(194) org.kframework.attributes.Location(Location(194,10,196,55)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule69LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortKItem{},SortInt{},SortOutCell{},SortFunctionsCell{},SortLocCell{},SortEnvCell{}) : SortGeneratedTopCell{}
  where rule69LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortEnvCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExpMod{}, SortKItem{}}(Lbl'Unds'--'Unds'KT-SYNTAX'Unds'AExpMod'Unds'Id{}(VarI:SortId{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'8:SortEnvCell{}),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule69LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortEnvCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'8:SortEnvCell{},Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(Lbl'Unds'-Int'Unds'{}(VarV:SortInt{},\dv{SortInt{}}("1")))),VarDotVar4:SortMap{})),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("194"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(194,10,196,55)"), UNIQUE'Unds'ID{}("0a4f0bc6efd4ee15c000866b16ccfc9d6fd9617fdbd7c57fa5f3e236819716f5")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(`_-__KT-SYNTAX_AExp_AExp_AExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_-__KT-SYNTAX_AExp_AExp_AExp1_`(inj{AExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(103669c71b52063f6ac1ccff5b645ed5be5368fa30ecf90ff1c43641467d14dc) heat() left() org.kframework.attributes.Location(Location(83,19,83,49)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) seqstrict()]
  alias rule70LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule70LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule70LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(83,19,83,49)"), UNIQUE'Unds'ID{}("103669c71b52063f6ac1ccff5b645ed5be5368fa30ecf90ff1c43641467d14dc"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(`_-__KT-SYNTAX_AExp_AExp_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_-__KT-SYNTAX_AExp_AExp_AExp0_`(inj{AExp,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(isKResult(inj{AExp,KItem}(K0)),#token("true","Bool")),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(f3aff125f93b7744f017f5b5d39e96193732733d43aa9a2bc14ca950c1ec00d3) heat() left() org.kframework.attributes.Location(Location(83,19,83,49)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) seqstrict()]
  alias rule71LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule71LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule71LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(83,19,83,49)"), UNIQUE'Unds'ID{}("f3aff125f93b7744f017f5b5d39e96193732733d43aa9a2bc14ca950c1ec00d3"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(`_-__KT-SYNTAX_AExp_AExp_AExp`(inj{Int,AExp}(I1),inj{Int,AExp}(I2)))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Int,KItem}(`_-Int_`(I1,I2))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4aba07a7977fd35dc54963ec523b02afe91a8d2550e3758b13ba3a78abfe9b72) contentStartColumn(10) contentStartLine(186) org.kframework.attributes.Location(Location(186,10,186,39)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule72LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortInt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule72LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortInt{}, SortAExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortAExp{}}(VarI2:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule72LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("186"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(186,10,186,39)"), UNIQUE'Unds'ID{}("4aba07a7977fd35dc54963ec523b02afe91a8d2550e3758b13ba3a78abfe9b72")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(`_/__KT-SYNTAX_AExp_AExp_AExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_/__KT-SYNTAX_AExp_AExp_AExp1_`(inj{AExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(fd7bd2133659426d0ef549b09640daa2e02b71044c7bd5090e9dbc7587d1a4f0) heat() left() org.kframework.attributes.Location(Location(82,25,82,55)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) seqstrict()]
  alias rule73LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule73LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule73LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(82,25,82,55)"), UNIQUE'Unds'ID{}("fd7bd2133659426d0ef549b09640daa2e02b71044c7bd5090e9dbc7587d1a4f0"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(`_/__KT-SYNTAX_AExp_AExp_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_/__KT-SYNTAX_AExp_AExp_AExp0_`(inj{AExp,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(isKResult(inj{AExp,KItem}(K0)),#token("true","Bool")),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(ab14aecc7389cc2dcd92445d379fd8adad4bb87742a4d550c99b2c47f506f304) heat() left() org.kframework.attributes.Location(Location(82,25,82,55)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) seqstrict()]
  alias rule74LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule74LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule74LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(82,25,82,55)"), UNIQUE'Unds'ID{}("ab14aecc7389cc2dcd92445d379fd8adad4bb87742a4d550c99b2c47f506f304"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(`_/__KT-SYNTAX_AExp_AExp_AExp`(inj{Int,AExp}(I1),inj{Int,AExp}(I2)))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Int,KItem}(`_/Int_`(I1,I2))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(2e85f9a87e9606b7554589094a28ed7cccd12987411ebe0a7b7c9906ae1d6672) contentStartColumn(10) contentStartLine(188) org.kframework.attributes.Location(Location(188,10,188,56)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" K [klabel(#ruleRequires) symbol()])]
  alias rule75LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortInt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule75LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortInt{}, SortAExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortAExp{}}(VarI2:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule75LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsSlsh'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("188"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(188,10,188,56)"), UNIQUE'Unds'ID{}("2e85f9a87e9606b7554589094a28ed7cccd12987411ebe0a7b7c9906ae1d6672")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_<=__KT-SYNTAX_BExp_AExp_AExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_<=__KT-SYNTAX_BExp_AExp_AExp1_`(inj{AExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(de3be33fa9edb98d6864f65b68da1f3bcaa859c8860d6e97939e269a7ee5be39) heat() org.kframework.attributes.Location(Location(96,19,96,41)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule76LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule76LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule76LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(96,19,96,41)"), UNIQUE'Unds'ID{}("de3be33fa9edb98d6864f65b68da1f3bcaa859c8860d6e97939e269a7ee5be39")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_<=__KT-SYNTAX_BExp_AExp_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_<=__KT-SYNTAX_BExp_AExp_AExp0_`(inj{AExp,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(09d8610b09cc539e6593587956249c703a6679500830f28ad593d3d81040ac22) heat() org.kframework.attributes.Location(Location(96,19,96,41)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule77LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule77LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule77LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(96,19,96,41)"), UNIQUE'Unds'ID{}("09d8610b09cc539e6593587956249c703a6679500830f28ad593d3d81040ac22")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_<=__KT-SYNTAX_BExp_AExp_AExp`(inj{Int,AExp}(I1),inj{Int,AExp}(I2)))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Bool,KItem}(`_<=Int_`(I1,I2))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8482c387a13b70ea974bf862a531b6e3d8c7b7e3d6546d5d18a5509e037b89c2) contentStartColumn(10) contentStartLine(203) org.kframework.attributes.Location(Location(203,10,203,41)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule78LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortInt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule78LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(inj{SortInt{}, SortAExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortAExp{}}(VarI2:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule78LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("203"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(203,10,203,41)"), UNIQUE'Unds'ID{}("8482c387a13b70ea974bf862a531b6e3d8c7b7e3d6546d5d18a5509e037b89c2")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_<__KT-SYNTAX_BExp_AExp_AExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_<__KT-SYNTAX_BExp_AExp_AExp1_`(inj{AExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(7221fe55a181dc28dcb2e31c3f9a5c34ea1bbfe70dcdfa101086234fa1f79de9) heat() org.kframework.attributes.Location(Location(94,19,94,40)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule79LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule79LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule79LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(94,19,94,40)"), UNIQUE'Unds'ID{}("7221fe55a181dc28dcb2e31c3f9a5c34ea1bbfe70dcdfa101086234fa1f79de9")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_<__KT-SYNTAX_BExp_AExp_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_<__KT-SYNTAX_BExp_AExp_AExp0_`(inj{AExp,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(8cb2694a91bc24701cb2b418d8265a3d0a8f0e757a6f18c18ac4e76d99c3fe2a) heat() org.kframework.attributes.Location(Location(94,19,94,40)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule80LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule80LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule80LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(94,19,94,40)"), UNIQUE'Unds'ID{}("8cb2694a91bc24701cb2b418d8265a3d0a8f0e757a6f18c18ac4e76d99c3fe2a")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_<__KT-SYNTAX_BExp_AExp_AExp`(inj{Int,AExp}(I1),inj{Int,AExp}(I2)))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Bool,KItem}(`_<Int_`(I1,I2))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e55a4d7ce9d959d237a2aced63edd6ec2f9d7d5a309ec58d410d4eace2d7b3e4) contentStartColumn(10) contentStartLine(201) org.kframework.attributes.Location(Location(201,10,201,39)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule81LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortInt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule81LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(inj{SortInt{}, SortAExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortAExp{}}(VarI2:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule81LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-LT-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("201"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(201,10,201,39)"), UNIQUE'Unds'ID{}("e55a4d7ce9d959d237a2aced63edd6ec2f9d7d5a309ec58d410d4eace2d7b3e4")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_==__KT-SYNTAX_BExp_AExp_AExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_==__KT-SYNTAX_BExp_AExp_AExp1_`(inj{AExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(b51f2bcda112792c6d61d445d65f65078cc17045f3debbe8b18fa59987a744cc) heat() org.kframework.attributes.Location(Location(97,19,97,41)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule82LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule82LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule82LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(97,19,97,41)"), UNIQUE'Unds'ID{}("b51f2bcda112792c6d61d445d65f65078cc17045f3debbe8b18fa59987a744cc")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_==__KT-SYNTAX_BExp_AExp_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_==__KT-SYNTAX_BExp_AExp_AExp0_`(inj{AExp,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(3e2254146a8b247081357e3e992bb9062927f41e078bf1469e61519c2652f244) heat() org.kframework.attributes.Location(Location(97,19,97,41)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule83LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule83LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule83LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(97,19,97,41)"), UNIQUE'Unds'ID{}("3e2254146a8b247081357e3e992bb9062927f41e078bf1469e61519c2652f244")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_==__KT-SYNTAX_BExp_AExp_AExp`(inj{Int,AExp}(I1),inj{Int,AExp}(I2)))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Bool,KItem}(`_==K_`(inj{Int,KItem}(I1),inj{Int,KItem}(I2)))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7889e81ce4679e086ae312eee21f01e0cba9b51574b3e9dd471febef21d1e9a9) contentStartColumn(10) contentStartLine(204) org.kframework.attributes.Location(Location(204,10,204,39)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule84LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortInt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule84LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(inj{SortInt{}, SortAExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortAExp{}}(VarI2:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule84LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarI1:SortInt{}),dotk{}()),kseq{}(inj{SortInt{}, SortKItem{}}(VarI2:SortInt{}),dotk{}()))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("204"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(204,10,204,39)"), UNIQUE'Unds'ID{}("7889e81ce4679e086ae312eee21f01e0cba9b51574b3e9dd471febef21d1e9a9")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_AExp`(`__:Int_KT-SYNTAX_VarDeclaration_VarMod_IdList`(Vm,`_,__KT-SYNTAX_IdList_Id_IdList`(I1,`.List{"_,__KT-SYNTAX_IdList_Id_IdList"}_IdList`(.KList))) #as _8,`_*__KT-SYNTAX_AExp_AExp_AExp`(inj{Int,AExp}(I2) #as _12,inj{Id,AExp}(I3))))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I3),L),DotVar3)) #as _14,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)) #as _16,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_AExp`(_8,`_*__KT-SYNTAX_AExp_AExp_AExp`(_12,inj{Int,AExp}(V))))~>DotVar2),_0,_1,_14,_16,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(14a06dc34656c43147bfbfb7b61c1b80a4e501aed592eca36b16c352e56722f3) contentStartColumn(10) contentStartLine(275) org.kframework.attributes.Location(Location(275,10,277,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule85LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortInt{},SortId{},SortKItem{},SortInt{},SortVarMod{},SortOutCell{},SortFunctionsCell{},SortAExp{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortVarDeclaration{}) : SortGeneratedTopCell{}
  where rule85LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'12:SortAExp{},Var'Unds'14:SortEnvCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(\and{SortVarDeclaration{}}(Lbl'UndsUndsColn'Int'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarVm:SortVarMod{},Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList{}(VarI1:SortId{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList'QuotRBraUnds'IdList{}())),Var'Unds'8:SortVarDeclaration{}),Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}}(inj{SortInt{}, SortAExp{}}(VarI2:SortInt{}),Var'Unds'12:SortAExp{}),inj{SortId{}, SortAExp{}}(VarI3:SortId{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI3:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'14:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'16:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule85LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'12:SortAExp{},Var'Unds'14:SortEnvCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(Var'Unds'8:SortVarDeclaration{},Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(Var'Unds'12:SortAExp{},inj{SortInt{}, SortAExp{}}(VarV:SortInt{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'14:SortEnvCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("275"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(275,10,277,45)"), UNIQUE'Unds'ID{}("14a06dc34656c43147bfbfb7b61c1b80a4e501aed592eca36b16c352e56722f3")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_AExp`(`__:Int_KT-SYNTAX_VarDeclaration_VarMod_IdList`(Vm,`_,__KT-SYNTAX_IdList_Id_IdList`(I1,`.List{"_,__KT-SYNTAX_IdList_Id_IdList"}_IdList`(.KList))) #as _8,`_*__KT-SYNTAX_AExp_AExp_AExp`(inj{Id,AExp}(I2),inj{Id,AExp}(I3) #as _13)))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I2),L),DotVar3)) #as _14,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)) #as _16,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_AExp`(_8,`_*__KT-SYNTAX_AExp_AExp_AExp`(inj{Int,AExp}(V),_13)))~>DotVar2),_0,_1,_14,_16,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d916bd157d204653bdbc055b8d72de0de4ae84d1934bcc1726bbda5b9c29c7a8) contentStartColumn(10) contentStartLine(271) org.kframework.attributes.Location(Location(271,10,273,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule86LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortId{},SortId{},SortKItem{},SortInt{},SortVarMod{},SortOutCell{},SortFunctionsCell{},SortAExp{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortVarDeclaration{}) : SortGeneratedTopCell{}
  where rule86LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'13:SortAExp{},Var'Unds'14:SortEnvCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(\and{SortVarDeclaration{}}(Lbl'UndsUndsColn'Int'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarVm:SortVarMod{},Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList{}(VarI1:SortId{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList'QuotRBraUnds'IdList{}())),Var'Unds'8:SortVarDeclaration{}),Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortId{}, SortAExp{}}(VarI2:SortId{}),\and{SortAExp{}}(inj{SortId{}, SortAExp{}}(VarI3:SortId{}),Var'Unds'13:SortAExp{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI2:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'14:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'16:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule86LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'13:SortAExp{},Var'Unds'14:SortEnvCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(Var'Unds'8:SortVarDeclaration{},Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortInt{}, SortAExp{}}(VarV:SortInt{}),Var'Unds'13:SortAExp{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'14:SortEnvCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("271"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(271,10,273,45)"), UNIQUE'Unds'ID{}("d916bd157d204653bdbc055b8d72de0de4ae84d1934bcc1726bbda5b9c29c7a8")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_AExp`(`__:Int_KT-SYNTAX_VarDeclaration_VarMod_IdList`(Vm,`_,__KT-SYNTAX_IdList_Id_IdList`(I1,`.List{"_,__KT-SYNTAX_IdList_Id_IdList"}_IdList`(.KList))) #as _8,`_+__KT-SYNTAX_AExp_Int_AExp`(I2,inj{Id,AExp}(I3))))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I3),L),DotVar3)) #as _13,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)) #as _15,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_AExp`(_8,`_+__KT-SYNTAX_AExp_Int_AExp`(I2,inj{Int,AExp}(V))))~>DotVar2),_0,_1,_13,_15,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4f2fe5d42cdf64b30ae6d8646fb7d382552349f9d20432d598c8d18b7a2e71a4) contentStartColumn(10) contentStartLine(283) org.kframework.attributes.Location(Location(283,10,285,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule87LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortInt{},SortId{},SortKItem{},SortInt{},SortVarMod{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortVarDeclaration{}) : SortGeneratedTopCell{}
  where rule87LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'13:SortEnvCell{},Var'Unds'15:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(\and{SortVarDeclaration{}}(Lbl'UndsUndsColn'Int'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarVm:SortVarMod{},Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList{}(VarI1:SortId{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList'QuotRBraUnds'IdList{}())),Var'Unds'8:SortVarDeclaration{}),Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(VarI2:SortInt{},inj{SortId{}, SortAExp{}}(VarI3:SortId{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI3:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'13:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'15:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule87LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'13:SortEnvCell{},Var'Unds'15:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(Var'Unds'8:SortVarDeclaration{},Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(VarI2:SortInt{},inj{SortInt{}, SortAExp{}}(VarV:SortInt{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'13:SortEnvCell{},Var'Unds'15:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("283"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(283,10,285,45)"), UNIQUE'Unds'ID{}("4f2fe5d42cdf64b30ae6d8646fb7d382552349f9d20432d598c8d18b7a2e71a4")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_AExp`(`__:Int_KT-SYNTAX_VarDeclaration_VarMod_IdList`(Vm,`_,__KT-SYNTAX_IdList_Id_IdList`(I1,`.List{"_,__KT-SYNTAX_IdList_Id_IdList"}_IdList`(.KList))) #as _8,`_-__KT-SYNTAX_AExp_AExp_AExp`(inj{Int,AExp}(I2) #as _12,inj{Id,AExp}(I3))))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I3),L),DotVar3)) #as _14,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)) #as _16,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_AExp`(_8,`_-__KT-SYNTAX_AExp_AExp_AExp`(_12,inj{Int,AExp}(V))))~>DotVar2),_0,_1,_14,_16,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f453f0373a3f1b8f67ce3bdd8ffa8721dc376c1f1bd41b39d059f8e5313cd479) contentStartColumn(10) contentStartLine(267) org.kframework.attributes.Location(Location(267,10,269,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule88LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortInt{},SortId{},SortKItem{},SortInt{},SortVarMod{},SortOutCell{},SortFunctionsCell{},SortAExp{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortVarDeclaration{}) : SortGeneratedTopCell{}
  where rule88LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'12:SortAExp{},Var'Unds'14:SortEnvCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(\and{SortVarDeclaration{}}(Lbl'UndsUndsColn'Int'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarVm:SortVarMod{},Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList{}(VarI1:SortId{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList'QuotRBraUnds'IdList{}())),Var'Unds'8:SortVarDeclaration{}),Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}}(inj{SortInt{}, SortAExp{}}(VarI2:SortInt{}),Var'Unds'12:SortAExp{}),inj{SortId{}, SortAExp{}}(VarI3:SortId{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI3:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'14:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'16:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule88LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'12:SortAExp{},Var'Unds'14:SortEnvCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(Var'Unds'8:SortVarDeclaration{},Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(Var'Unds'12:SortAExp{},inj{SortInt{}, SortAExp{}}(VarV:SortInt{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'14:SortEnvCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("267"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(267,10,269,45)"), UNIQUE'Unds'ID{}("f453f0373a3f1b8f67ce3bdd8ffa8721dc376c1f1bd41b39d059f8e5313cd479")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_AExp`(`__:Int_KT-SYNTAX_VarDeclaration_VarMod_IdList`(Vm,`_,__KT-SYNTAX_IdList_Id_IdList`(I1,`.List{"_,__KT-SYNTAX_IdList_Id_IdList"}_IdList`(.KList))) #as _8,`_-__KT-SYNTAX_AExp_AExp_AExp`(inj{Id,AExp}(I2),inj{Id,AExp}(I3) #as _13)))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I2),L),DotVar3)) #as _14,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)) #as _16,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_AExp`(_8,`_-__KT-SYNTAX_AExp_AExp_AExp`(inj{Int,AExp}(V),_13)))~>DotVar2),_0,_1,_14,_16,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b28151d31e5b036427f008f7a995204195b64b62d3638c709f0b62696d66df4b) contentStartColumn(10) contentStartLine(263) org.kframework.attributes.Location(Location(263,10,265,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule89LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortId{},SortId{},SortKItem{},SortInt{},SortVarMod{},SortOutCell{},SortFunctionsCell{},SortAExp{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortVarDeclaration{}) : SortGeneratedTopCell{}
  where rule89LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'13:SortAExp{},Var'Unds'14:SortEnvCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(\and{SortVarDeclaration{}}(Lbl'UndsUndsColn'Int'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarVm:SortVarMod{},Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList{}(VarI1:SortId{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList'QuotRBraUnds'IdList{}())),Var'Unds'8:SortVarDeclaration{}),Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortId{}, SortAExp{}}(VarI2:SortId{}),\and{SortAExp{}}(inj{SortId{}, SortAExp{}}(VarI3:SortId{}),Var'Unds'13:SortAExp{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI2:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'14:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'16:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule89LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'13:SortAExp{},Var'Unds'14:SortEnvCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(Var'Unds'8:SortVarDeclaration{},Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortInt{}, SortAExp{}}(VarV:SortInt{}),Var'Unds'13:SortAExp{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'14:SortEnvCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("263"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(263,10,265,45)"), UNIQUE'Unds'ID{}("b28151d31e5b036427f008f7a995204195b64b62d3638c709f0b62696d66df4b")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_AExp`(`__:Int_KT-SYNTAX_VarDeclaration_VarMod_IdList`(Vm,`_,__KT-SYNTAX_IdList_Id_IdList`(I1,`.List{"_,__KT-SYNTAX_IdList_Id_IdList"}_IdList`(.KList))) #as _8,`_/__KT-SYNTAX_AExp_AExp_AExp`(inj{Id,AExp}(I2),inj{Id,AExp}(I3) #as _13)))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I2),L),DotVar3)) #as _14,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)) #as _16,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_AExp`(_8,`_/__KT-SYNTAX_AExp_AExp_AExp`(inj{Int,AExp}(V),_13)))~>DotVar2),_0,_1,_14,_16,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(005136fc42e84483ed72a9b9e0f698e8778e2db07d754902305ec338ec8a70b8) contentStartColumn(10) contentStartLine(279) org.kframework.attributes.Location(Location(279,10,281,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule90LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortId{},SortId{},SortKItem{},SortInt{},SortVarMod{},SortOutCell{},SortFunctionsCell{},SortAExp{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortVarDeclaration{}) : SortGeneratedTopCell{}
  where rule90LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'13:SortAExp{},Var'Unds'14:SortEnvCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(\and{SortVarDeclaration{}}(Lbl'UndsUndsColn'Int'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarVm:SortVarMod{},Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList{}(VarI1:SortId{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList'QuotRBraUnds'IdList{}())),Var'Unds'8:SortVarDeclaration{}),Lbl'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortId{}, SortAExp{}}(VarI2:SortId{}),\and{SortAExp{}}(inj{SortId{}, SortAExp{}}(VarI3:SortId{}),Var'Unds'13:SortAExp{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI2:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'14:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'16:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule90LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'13:SortAExp{},Var'Unds'14:SortEnvCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(Var'Unds'8:SortVarDeclaration{},Lbl'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortInt{}, SortAExp{}}(VarV:SortInt{}),Var'Unds'13:SortAExp{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'14:SortEnvCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("279"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(279,10,281,45)"), UNIQUE'Unds'ID{}("005136fc42e84483ed72a9b9e0f698e8778e2db07d754902305ec338ec8a70b8")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_AExp`(`__:String_KT-SYNTAX_VarDeclaration_VarMod_IdList`(Vm,`_,__KT-SYNTAX_IdList_Id_IdList`(I1,`.List{"_,__KT-SYNTAX_IdList_Id_IdList"}_IdList`(.KList))) #as _8,`_+__KT-SYNTAX_AExp_String_AExp`(I2,inj{Id,AExp}(I3))))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I3),L),DotVar3)) #as _13,`<store>`(`_Map_`(`_|->_`(L,inj{String,KItem}(V)),DotVar4)) #as _15,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_AExp`(_8,`_+__KT-SYNTAX_AExp_String_AExp`(I2,inj{String,AExp}(V))))~>DotVar2),_0,_1,_13,_15,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(39e6b79b18174098a4432fd446e52b11ff9dada5d8fe862cb016a7066e8592bb) contentStartColumn(10) contentStartLine(291) org.kframework.attributes.Location(Location(291,10,293,48)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule91LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortString{},SortId{},SortKItem{},SortString{},SortVarMod{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortVarDeclaration{}) : SortGeneratedTopCell{}
  where rule91LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortString{},VarI3:SortId{},VarL:SortKItem{},VarV:SortString{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'13:SortEnvCell{},Var'Unds'15:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(\and{SortVarDeclaration{}}(Lbl'UndsUndsColn'String'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarVm:SortVarMod{},Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList{}(VarI1:SortId{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList'QuotRBraUnds'IdList{}())),Var'Unds'8:SortVarDeclaration{}),Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp{}(VarI2:SortString{},inj{SortId{}, SortAExp{}}(VarI3:SortId{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI3:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'13:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortString{}, SortKItem{}}(VarV:SortString{})),VarDotVar4:SortMap{})),Var'Unds'15:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule91LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortString{},VarI3:SortId{},VarL:SortKItem{},VarV:SortString{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'13:SortEnvCell{},Var'Unds'15:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(Var'Unds'8:SortVarDeclaration{},Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp{}(VarI2:SortString{},inj{SortString{}, SortAExp{}}(VarV:SortString{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'13:SortEnvCell{},Var'Unds'15:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("291"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(291,10,293,48)"), UNIQUE'Unds'ID{}("39e6b79b18174098a4432fd446e52b11ff9dada5d8fe862cb016a7066e8592bb")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_=__KT-SYNTAX_Assigner_VarDeclaration_AExp0_`(inj{VarDeclaration,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(d7970410c997f0c12b5e7272952414d03030b562ff4a4a837e5fd6281889b1e2) heat() org.kframework.attributes.Location(Location(55,25,55,59)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict(2)]
  alias rule92LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortVarDeclaration{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule92LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortVarDeclaration{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(VarK0:SortVarDeclaration{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule92LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortVarDeclaration{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp0'Unds'{}(kseq{}(inj{SortVarDeclaration{}, SortKItem{}}(VarK0:SortVarDeclaration{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(55,25,55,59)"), UNIQUE'Unds'ID{}("d7970410c997f0c12b5e7272952414d03030b562ff4a4a837e5fd6281889b1e2")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_AExp`(`__:Int_KT-SYNTAX_VarDeclaration_VarMod_IdList`(V,`.List{"_,__KT-SYNTAX_IdList_Id_IdList"}_IdList`(.KList)),inj{Int,AExp}(_0)))~>DotVar2),_1,_2,_3,_4,_5),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_1,_2,_3,_4,_5),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(37acda2db679d041f164a3db71599e9ae226e803da9b1c9fff9823872a82ef21) contentStartColumn(10) contentStartLine(143) org.kframework.attributes.Location(Location(143,10,143,48)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule93LHS{}(SortGeneratedCounterCell{},SortK{},SortVarMod{},SortInt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule93LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarV:SortVarMod{},Var'Unds'0:SortInt{},Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(Lbl'UndsUndsColn'Int'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarV:SortVarMod{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList'QuotRBraUnds'IdList{}()),inj{SortInt{}, SortAExp{}}(Var'Unds'0:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule93LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarV:SortVarMod{},Var'Unds'0:SortInt{},Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("143"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(143,10,143,48)"), UNIQUE'Unds'ID{}("37acda2db679d041f164a3db71599e9ae226e803da9b1c9fff9823872a82ef21")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_AExp`(`__:Int_KT-SYNTAX_VarDeclaration_VarMod_IdList`(Vm,`_,__KT-SYNTAX_IdList_Id_IdList`(I,Xs)),inj{Int,AExp}(V) #as _9))~>DotVar2),_0,_1,`<env>`(MEnv),`<store>`(MStore),`<loc>`(L)),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_AExp`(`__:Int_KT-SYNTAX_VarDeclaration_VarMod_IdList`(Vm,Xs),_9))~>DotVar2),_0,_1,`<env>`(`_Map_`(MEnv,`_|->_`(inj{Id,KItem}(I),inj{Int,KItem}(L)))),`<store>`(`_Map_`(MStore,`_|->_`(inj{Int,KItem}(L),inj{Int,KItem}(V)))),`<loc>`(`_+Int_`(L,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3918db34341a407a8522d6607a336e4f7c88598734117d05147a457efc2bca45) contentStartColumn(10) contentStartLine(398) org.kframework.attributes.Location(Location(398,10,401,39)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule94LHS{}(SortGeneratedCounterCell{},SortK{},SortId{},SortInt{},SortMap{},SortMap{},SortInt{},SortVarMod{},SortIdList{},SortOutCell{},SortFunctionsCell{},SortAExp{}) : SortGeneratedTopCell{}
  where rule94LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortInt{},VarVm:SortVarMod{},VarXs:SortIdList{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'9:SortAExp{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(Lbl'UndsUndsColn'Int'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarVm:SortVarMod{},Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList{}(VarI:SortId{},VarXs:SortIdList{})),\and{SortAExp{}}(inj{SortInt{}, SortAExp{}}(VarV:SortInt{}),Var'Unds'9:SortAExp{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(VarMEnv:SortMap{}),Lbl'-LT-'store'-GT-'{}(VarMStore:SortMap{}),Lbl'-LT-'loc'-GT-'{}(VarL:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule94LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortInt{},VarVm:SortVarMod{},VarXs:SortIdList{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'9:SortAExp{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(Lbl'UndsUndsColn'Int'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarVm:SortVarMod{},VarXs:SortIdList{}),Var'Unds'9:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMEnv:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{})))),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMStore:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortInt{}, SortKItem{}}(VarV:SortInt{})))),Lbl'-LT-'loc'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("398"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(398,10,401,39)"), UNIQUE'Unds'ID{}("3918db34341a407a8522d6607a336e4f7c88598734117d05147a457efc2bca45")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_AExp`(`__:String_KT-SYNTAX_VarDeclaration_VarMod_IdList`(V,`.List{"_,__KT-SYNTAX_IdList_Id_IdList"}_IdList`(.KList)),inj{String,AExp}(_0)))~>DotVar2),_1,_2,_3,_4,_5),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_1,_2,_3,_4,_5),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(09481182481bf3eb58e94004c8c1df6d6591bb47bd30d0312318b522e8500abf) contentStartColumn(10) contentStartLine(145) org.kframework.attributes.Location(Location(145,10,145,54)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule95LHS{}(SortGeneratedCounterCell{},SortK{},SortVarMod{},SortString{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule95LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarV:SortVarMod{},Var'Unds'0:SortString{},Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(Lbl'UndsUndsColn'String'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarV:SortVarMod{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList'QuotRBraUnds'IdList{}()),inj{SortString{}, SortAExp{}}(Var'Unds'0:SortString{}))),VarDotVar2:SortK{})),Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule95LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarV:SortVarMod{},Var'Unds'0:SortString{},Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("145"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(145,10,145,54)"), UNIQUE'Unds'ID{}("09481182481bf3eb58e94004c8c1df6d6591bb47bd30d0312318b522e8500abf")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_AExp`(`__:String_KT-SYNTAX_VarDeclaration_VarMod_IdList`(Vm,`_,__KT-SYNTAX_IdList_Id_IdList`(I,Xs)),inj{String,AExp}(V) #as _9))~>DotVar2),_0,_1,`<env>`(MEnv),`<store>`(MStore),`<loc>`(L)),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_AExp`(`__:String_KT-SYNTAX_VarDeclaration_VarMod_IdList`(Vm,Xs),_9))~>DotVar2),_0,_1,`<env>`(`_Map_`(MEnv,`_|->_`(inj{Id,KItem}(I),inj{Int,KItem}(L)))),`<store>`(`_Map_`(MStore,`_|->_`(inj{Int,KItem}(L),inj{String,KItem}(V)))),`<loc>`(`_+Int_`(L,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(df9dd0b6faaef27e471c2ef86d338e0be5e4164ddeefbb46425060d8717824ce) contentStartColumn(10) contentStartLine(408) org.kframework.attributes.Location(Location(408,10,411,39)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule96LHS{}(SortGeneratedCounterCell{},SortK{},SortId{},SortInt{},SortMap{},SortMap{},SortString{},SortVarMod{},SortIdList{},SortOutCell{},SortFunctionsCell{},SortAExp{}) : SortGeneratedTopCell{}
  where rule96LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortString{},VarVm:SortVarMod{},VarXs:SortIdList{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'9:SortAExp{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(Lbl'UndsUndsColn'String'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarVm:SortVarMod{},Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList{}(VarI:SortId{},VarXs:SortIdList{})),\and{SortAExp{}}(inj{SortString{}, SortAExp{}}(VarV:SortString{}),Var'Unds'9:SortAExp{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(VarMEnv:SortMap{}),Lbl'-LT-'store'-GT-'{}(VarMStore:SortMap{}),Lbl'-LT-'loc'-GT-'{}(VarL:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule96LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortString{},VarVm:SortVarMod{},VarXs:SortIdList{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'9:SortAExp{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(Lbl'UndsUndsColn'String'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarVm:SortVarMod{},VarXs:SortIdList{}),Var'Unds'9:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMEnv:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{})))),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMStore:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortString{}, SortKItem{}}(VarV:SortString{})))),Lbl'-LT-'loc'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("408"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(408,10,411,39)"), UNIQUE'Unds'ID{}("df9dd0b6faaef27e471c2ef86d338e0be5e4164ddeefbb46425060d8717824ce")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_BExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(HOLE)~>`#freezer_=__KT-SYNTAX_Assigner_VarDeclaration_BExp0_`(inj{VarDeclaration,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{BExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(01e03cd22885f00f5bd8c3f54c541feb1b5f14cb53d81b05326ac77da3457d38) heat() org.kframework.attributes.Location(Location(56,23,56,57)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict(2)]
  alias rule97LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortVarDeclaration{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule97LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortVarDeclaration{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp{}(VarK0:SortVarDeclaration{},VarHOLE:SortBExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule97LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortVarDeclaration{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp0'Unds'{}(kseq{}(inj{SortVarDeclaration{}, SortKItem{}}(VarK0:SortVarDeclaration{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(56,23,56,57)"), UNIQUE'Unds'ID{}("01e03cd22885f00f5bd8c3f54c541feb1b5f14cb53d81b05326ac77da3457d38")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_BExp`(`__:Boolean_KT-SYNTAX_VarDeclaration_VarMod_IdList`(V,`.List{"_,__KT-SYNTAX_IdList_Id_IdList"}_IdList`(.KList)),inj{Bool,BExp}(_0)))~>DotVar2),_1,_2,_3,_4,_5),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_1,_2,_3,_4,_5),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(de859f95091d2b6e46b54aac8ed57f4670c001bb8581cb372b95a3fd3a918ac4) contentStartColumn(10) contentStartLine(144) org.kframework.attributes.Location(Location(144,10,144,53)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule98LHS{}(SortGeneratedCounterCell{},SortK{},SortVarMod{},SortBool{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule98LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarV:SortVarMod{},Var'Unds'0:SortBool{},Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp{}(Lbl'UndsUndsColn'Boolean'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarV:SortVarMod{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList'QuotRBraUnds'IdList{}()),inj{SortBool{}, SortBExp{}}(Var'Unds'0:SortBool{}))),VarDotVar2:SortK{})),Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule98LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarV:SortVarMod{},Var'Unds'0:SortBool{},Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("144"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(144,10,144,53)"), UNIQUE'Unds'ID{}("de859f95091d2b6e46b54aac8ed57f4670c001bb8581cb372b95a3fd3a918ac4")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_BExp`(`__:Boolean_KT-SYNTAX_VarDeclaration_VarMod_IdList`(Vm,`_,__KT-SYNTAX_IdList_Id_IdList`(I,Xs)),inj{Bool,BExp}(V) #as _9))~>DotVar2),_0,_1,`<env>`(MEnv),`<store>`(MStore),`<loc>`(L)),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_BExp`(`__:Boolean_KT-SYNTAX_VarDeclaration_VarMod_IdList`(Vm,Xs),_9))~>DotVar2),_0,_1,`<env>`(`_Map_`(MEnv,`_|->_`(inj{Id,KItem}(I),inj{Int,KItem}(L)))),`<store>`(`_Map_`(MStore,`_|->_`(inj{Int,KItem}(L),inj{Bool,KItem}(V)))),`<loc>`(`_+Int_`(L,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e8ba7cadc447447d2d390b532b9d83a341725c6f2f48542a7bfac662743f1c93) contentStartColumn(10) contentStartLine(403) org.kframework.attributes.Location(Location(403,10,406,39)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule99LHS{}(SortGeneratedCounterCell{},SortK{},SortId{},SortInt{},SortMap{},SortMap{},SortBool{},SortVarMod{},SortIdList{},SortOutCell{},SortFunctionsCell{},SortBExp{}) : SortGeneratedTopCell{}
  where rule99LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortBool{},VarVm:SortVarMod{},VarXs:SortIdList{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'9:SortBExp{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp{}(Lbl'UndsUndsColn'Boolean'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarVm:SortVarMod{},Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList{}(VarI:SortId{},VarXs:SortIdList{})),\and{SortBExp{}}(inj{SortBool{}, SortBExp{}}(VarV:SortBool{}),Var'Unds'9:SortBExp{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(VarMEnv:SortMap{}),Lbl'-LT-'store'-GT-'{}(VarMStore:SortMap{}),Lbl'-LT-'loc'-GT-'{}(VarL:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule99LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortBool{},VarVm:SortVarMod{},VarXs:SortIdList{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'9:SortBExp{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'BExp{}(Lbl'UndsUndsColn'Boolean'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarVm:SortVarMod{},VarXs:SortIdList{}),Var'Unds'9:SortBExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMEnv:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{})))),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMStore:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortBool{}, SortKItem{}}(VarV:SortBool{})))),Lbl'-LT-'loc'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("403"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(403,10,406,39)"), UNIQUE'Unds'ID{}("e8ba7cadc447447d2d390b532b9d83a341725c6f2f48542a7bfac662743f1c93")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_IdExp`(`__:Int_KT-SYNTAX_VarDeclaration_VarMod_IdList`(Vm,`_,__KT-SYNTAX_IdList_Id_IdList`(I1,`.List{"_,__KT-SYNTAX_IdList_Id_IdList"}_IdList`(.KList))) #as _8,`_+__KT-SYNTAX_IdExp_Id_Id`(I2,I3)))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I2),L),DotVar3)) #as _12,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)) #as _14,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_AExp`(_8,`_+__KT-SYNTAX_AExp_Int_AExp`(V,inj{Id,AExp}(I3))))~>DotVar2),_0,_1,_12,_14,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(71890b8e0d3636b27ffbc3c75522dcbaf5e50fa42fb865570d4b0c3ccba58dcd) contentStartColumn(10) contentStartLine(255) org.kframework.attributes.Location(Location(255,10,257,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule100LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortId{},SortId{},SortKItem{},SortInt{},SortVarMod{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortVarDeclaration{}) : SortGeneratedTopCell{}
  where rule100LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'12:SortEnvCell{},Var'Unds'14:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'IdExp{}(\and{SortVarDeclaration{}}(Lbl'UndsUndsColn'Int'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarVm:SortVarMod{},Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList{}(VarI1:SortId{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList'QuotRBraUnds'IdList{}())),Var'Unds'8:SortVarDeclaration{}),Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'IdExp'Unds'Id'Unds'Id{}(VarI2:SortId{},VarI3:SortId{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI2:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'12:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'14:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule100LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'12:SortEnvCell{},Var'Unds'14:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(Var'Unds'8:SortVarDeclaration{},Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(VarV:SortInt{},inj{SortId{}, SortAExp{}}(VarI3:SortId{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'12:SortEnvCell{},Var'Unds'14:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("255"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(255,10,257,45)"), UNIQUE'Unds'ID{}("71890b8e0d3636b27ffbc3c75522dcbaf5e50fa42fb865570d4b0c3ccba58dcd")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_IdExp`(`__:String_KT-SYNTAX_VarDeclaration_VarMod_IdList`(Vm,`_,__KT-SYNTAX_IdList_Id_IdList`(I1,`.List{"_,__KT-SYNTAX_IdList_Id_IdList"}_IdList`(.KList))) #as _8,`_+__KT-SYNTAX_IdExp_Id_Id`(I2,I3)))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I2),L),DotVar3)) #as _12,`<store>`(`_Map_`(`_|->_`(L,inj{String,KItem}(V)),DotVar4)) #as _14,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Assigner,KItem}(`_=__KT-SYNTAX_Assigner_VarDeclaration_AExp`(_8,`_+__KT-SYNTAX_AExp_String_AExp`(V,inj{Id,AExp}(I3))))~>DotVar2),_0,_1,_12,_14,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(643d47eca759f19f78146434d568a925f23aec1f06c6744dd92bd7e384890ec8) contentStartColumn(10) contentStartLine(287) org.kframework.attributes.Location(Location(287,10,289,48)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule101LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortId{},SortId{},SortKItem{},SortString{},SortVarMod{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortVarDeclaration{}) : SortGeneratedTopCell{}
  where rule101LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortString{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'12:SortEnvCell{},Var'Unds'14:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'IdExp{}(\and{SortVarDeclaration{}}(Lbl'UndsUndsColn'String'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarVm:SortVarMod{},Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList{}(VarI1:SortId{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList'QuotRBraUnds'IdList{}())),Var'Unds'8:SortVarDeclaration{}),Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'IdExp'Unds'Id'Unds'Id{}(VarI2:SortId{},VarI3:SortId{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI2:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'12:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortString{}, SortKItem{}}(VarV:SortString{})),VarDotVar4:SortMap{})),Var'Unds'14:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule101LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortString{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'12:SortEnvCell{},Var'Unds'14:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'Assigner'Unds'VarDeclaration'Unds'AExp{}(Var'Unds'8:SortVarDeclaration{},Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp{}(VarV:SortString{},inj{SortId{}, SortAExp{}}(VarI3:SortId{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'12:SortEnvCell{},Var'Unds'14:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("287"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(287,10,289,48)"), UNIQUE'Unds'ID{}("643d47eca759f19f78146434d568a925f23aec1f06c6744dd92bd7e384890ec8")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_AExp`(I,V))~>DotVar2),_1,_2,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I),L),DotVar3)) #as _9,`<store>`(`_Map_`(`_|->_`(L,_0),DotVar4)),_3),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_1,_2,_9,`<store>`(`_Map_`(`_|->_`(L,inj{AExp,KItem}(V)),DotVar4)),_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4effd981a3204614679712ec4116e0e6e2b70131d06695e502ac0158d9c13742) contentStartColumn(10) contentStartLine(455) org.kframework.attributes.Location(Location(455,10,457,48)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule102LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortKItem{},SortAExp{},SortKItem{},SortOutCell{},SortFunctionsCell{},SortLocCell{},SortEnvCell{}) : SortGeneratedTopCell{}
  where rule102LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI:SortId{},VarL:SortKItem{},VarV:SortAExp{},Var'Unds'0:SortKItem{},Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortLocCell{},Var'Unds'9:SortEnvCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI:SortId{},VarV:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'9:SortEnvCell{}),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},Var'Unds'0:SortKItem{}),VarDotVar4:SortMap{})),Var'Unds'3:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule102LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI:SortId{},VarL:SortKItem{},VarV:SortAExp{},Var'Unds'0:SortKItem{},Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortLocCell{},Var'Unds'9:SortEnvCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'9:SortEnvCell{},Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortAExp{}, SortKItem{}}(VarV:SortAExp{})),VarDotVar4:SortMap{})),Var'Unds'3:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("455"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(455,10,457,48)"), UNIQUE'Unds'ID{}("4effd981a3204614679712ec4116e0e6e2b70131d06695e502ac0158d9c13742")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_*__KT-SYNTAX_AExp_AExp_AExp`(inj{Int,AExp}(I2) #as _9,inj{Id,AExp}(I3))))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I3),L),DotVar3)) #as _11,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)) #as _13,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_*__KT-SYNTAX_AExp_AExp_AExp`(_9,inj{Int,AExp}(V))))~>DotVar2),_0,_1,_11,_13,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(61303188ab6d6675cdd83cff46c90154c1d4ea101acba40554d6006dc97ef038) contentStartColumn(10) contentStartLine(235) org.kframework.attributes.Location(Location(235,10,237,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule103LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortInt{},SortId{},SortKItem{},SortInt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortAExp{}) : SortGeneratedTopCell{}
  where rule103LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortAExp{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}}(inj{SortInt{}, SortAExp{}}(VarI2:SortInt{}),Var'Unds'9:SortAExp{}),inj{SortId{}, SortAExp{}}(VarI3:SortId{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI3:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'11:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'13:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule103LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortAExp{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(Var'Unds'9:SortAExp{},inj{SortInt{}, SortAExp{}}(VarV:SortInt{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("235"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(235,10,237,45)"), UNIQUE'Unds'ID{}("61303188ab6d6675cdd83cff46c90154c1d4ea101acba40554d6006dc97ef038")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_*__KT-SYNTAX_AExp_AExp_AExp`(inj{Id,AExp}(I2),inj{Id,AExp}(I3) #as _10)))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I2),L),DotVar3)) #as _11,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)) #as _13,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_*__KT-SYNTAX_AExp_AExp_AExp`(inj{Int,AExp}(V),_10)))~>DotVar2),_0,_1,_11,_13,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ed1f82025217ac04fc6c5d77f4dcec7e56cbcfb5d09c7ab3134a9af746d90bd8) contentStartColumn(10) contentStartLine(231) org.kframework.attributes.Location(Location(231,10,233,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule104LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortId{},SortId{},SortKItem{},SortInt{},SortOutCell{},SortFunctionsCell{},SortAExp{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule104LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortAExp{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortId{}, SortAExp{}}(VarI2:SortId{}),\and{SortAExp{}}(inj{SortId{}, SortAExp{}}(VarI3:SortId{}),Var'Unds'10:SortAExp{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI2:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'11:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'13:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule104LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortAExp{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortInt{}, SortAExp{}}(VarV:SortInt{}),Var'Unds'10:SortAExp{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("231"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(231,10,233,45)"), UNIQUE'Unds'ID{}("ed1f82025217ac04fc6c5d77f4dcec7e56cbcfb5d09c7ab3134a9af746d90bd8")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_+__KT-SYNTAX_AExp_Int_AExp`(I2,inj{Id,AExp}(I3))))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I3),L),DotVar3)) #as _10,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)) #as _12,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_+__KT-SYNTAX_AExp_Int_AExp`(I2,inj{Int,AExp}(V))))~>DotVar2),_0,_1,_10,_12,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5d8590d9b973e295262189619fd49442a8e9c7afc2cb9965f2d564298487ade9) contentStartColumn(10) contentStartLine(219) org.kframework.attributes.Location(Location(219,10,221,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule105LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortInt{},SortId{},SortKItem{},SortInt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule105LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortEnvCell{},Var'Unds'12:SortStoreCell{},Var'Unds'2:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(VarI2:SortInt{},inj{SortId{}, SortAExp{}}(VarI3:SortId{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI3:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'10:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'12:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule105LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortEnvCell{},Var'Unds'12:SortStoreCell{},Var'Unds'2:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(VarI2:SortInt{},inj{SortInt{}, SortAExp{}}(VarV:SortInt{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortEnvCell{},Var'Unds'12:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("219"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(219,10,221,45)"), UNIQUE'Unds'ID{}("5d8590d9b973e295262189619fd49442a8e9c7afc2cb9965f2d564298487ade9")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_+__KT-SYNTAX_AExp_String_AExp`(I2,inj{Id,AExp}(I3))))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I3),L),DotVar3)) #as _10,`<store>`(`_Map_`(`_|->_`(L,inj{String,KItem}(V)),DotVar4)) #as _12,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_+__KT-SYNTAX_AExp_String_AExp`(I2,inj{String,AExp}(V))))~>DotVar2),_0,_1,_10,_12,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9d7a90f33dd4f2abd21af25e7d25bad7f45d426a7f09577a6410d89d229c552c) contentStartColumn(10) contentStartLine(251) org.kframework.attributes.Location(Location(251,10,253,48)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule106LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortString{},SortId{},SortKItem{},SortString{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule106LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortString{},VarI3:SortId{},VarL:SortKItem{},VarV:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortEnvCell{},Var'Unds'12:SortStoreCell{},Var'Unds'2:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp{}(VarI2:SortString{},inj{SortId{}, SortAExp{}}(VarI3:SortId{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI3:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'10:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortString{}, SortKItem{}}(VarV:SortString{})),VarDotVar4:SortMap{})),Var'Unds'12:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule106LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortString{},VarI3:SortId{},VarL:SortKItem{},VarV:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortEnvCell{},Var'Unds'12:SortStoreCell{},Var'Unds'2:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp{}(VarI2:SortString{},inj{SortString{}, SortAExp{}}(VarV:SortString{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortEnvCell{},Var'Unds'12:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("251"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(251,10,253,48)"), UNIQUE'Unds'ID{}("9d7a90f33dd4f2abd21af25e7d25bad7f45d426a7f09577a6410d89d229c552c")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_-__KT-SYNTAX_AExp_AExp_AExp`(inj{Int,AExp}(I2) #as _9,inj{Id,AExp}(I3))))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I3),L),DotVar3)) #as _11,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)) #as _13,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_-__KT-SYNTAX_AExp_AExp_AExp`(_9,inj{Int,AExp}(V))))~>DotVar2),_0,_1,_11,_13,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cbe982fb8a320cffe36eb4ff05f959b98e93c2c9c7523901d808c3c590b531ba) contentStartColumn(10) contentStartLine(227) org.kframework.attributes.Location(Location(227,10,229,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule107LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortInt{},SortId{},SortKItem{},SortInt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortAExp{}) : SortGeneratedTopCell{}
  where rule107LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortAExp{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}}(inj{SortInt{}, SortAExp{}}(VarI2:SortInt{}),Var'Unds'9:SortAExp{}),inj{SortId{}, SortAExp{}}(VarI3:SortId{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI3:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'11:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'13:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule107LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortAExp{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(Var'Unds'9:SortAExp{},inj{SortInt{}, SortAExp{}}(VarV:SortInt{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("227"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(227,10,229,45)"), UNIQUE'Unds'ID{}("cbe982fb8a320cffe36eb4ff05f959b98e93c2c9c7523901d808c3c590b531ba")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_-__KT-SYNTAX_AExp_AExp_AExp`(inj{Id,AExp}(I2),inj{Id,AExp}(I3) #as _10)))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I2),L),DotVar3)) #as _11,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)) #as _13,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_-__KT-SYNTAX_AExp_AExp_AExp`(inj{Int,AExp}(V),_10)))~>DotVar2),_0,_1,_11,_13,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dcb167104362f19b7e77022c22ebc36d42f3bd9cc0dafef95edf26c6a73ed5f6) contentStartColumn(10) contentStartLine(223) org.kframework.attributes.Location(Location(223,10,225,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule108LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortId{},SortId{},SortKItem{},SortInt{},SortOutCell{},SortFunctionsCell{},SortAExp{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule108LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortAExp{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortId{}, SortAExp{}}(VarI2:SortId{}),\and{SortAExp{}}(inj{SortId{}, SortAExp{}}(VarI3:SortId{}),Var'Unds'10:SortAExp{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI2:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'11:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'13:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule108LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortAExp{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortInt{}, SortAExp{}}(VarV:SortInt{}),Var'Unds'10:SortAExp{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("223"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(223,10,225,45)"), UNIQUE'Unds'ID{}("dcb167104362f19b7e77022c22ebc36d42f3bd9cc0dafef95edf26c6a73ed5f6")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_/__KT-SYNTAX_AExp_AExp_AExp`(inj{Int,AExp}(I2) #as _9,inj{Id,AExp}(I3))))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I3),L),DotVar3)) #as _11,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)) #as _13,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_/__KT-SYNTAX_AExp_AExp_AExp`(_9,inj{Int,AExp}(V))))~>DotVar2),_0,_1,_11,_13,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(adbb864e85286165e882086bc6bdc3b48283991c11f1298353c2ab49099a70c0) contentStartColumn(10) contentStartLine(243) org.kframework.attributes.Location(Location(243,10,245,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule109LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortInt{},SortId{},SortKItem{},SortInt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortAExp{}) : SortGeneratedTopCell{}
  where rule109LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortAExp{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}}(inj{SortInt{}, SortAExp{}}(VarI2:SortInt{}),Var'Unds'9:SortAExp{}),inj{SortId{}, SortAExp{}}(VarI3:SortId{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI3:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'11:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'13:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule109LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortAExp{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(Var'Unds'9:SortAExp{},inj{SortInt{}, SortAExp{}}(VarV:SortInt{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("243"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(243,10,245,45)"), UNIQUE'Unds'ID{}("adbb864e85286165e882086bc6bdc3b48283991c11f1298353c2ab49099a70c0")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_/__KT-SYNTAX_AExp_AExp_AExp`(inj{Id,AExp}(I2),inj{Id,AExp}(I3) #as _10)))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I2),L),DotVar3)) #as _11,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)) #as _13,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_/__KT-SYNTAX_AExp_AExp_AExp`(inj{Int,AExp}(V),_10)))~>DotVar2),_0,_1,_11,_13,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e965b6bf126642c663ddb17d836936973c8b194ee78d6073ae3d3171648e276f) contentStartColumn(10) contentStartLine(239) org.kframework.attributes.Location(Location(239,10,241,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule110LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortId{},SortId{},SortKItem{},SortInt{},SortOutCell{},SortFunctionsCell{},SortAExp{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule110LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortAExp{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortId{}, SortAExp{}}(VarI2:SortId{}),\and{SortAExp{}}(inj{SortId{}, SortAExp{}}(VarI3:SortId{}),Var'Unds'10:SortAExp{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI2:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'11:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'13:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule110LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortAExp{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortInt{}, SortAExp{}}(VarV:SortInt{}),Var'Unds'10:SortAExp{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("239"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(239,10,241,45)"), UNIQUE'Unds'ID{}("e965b6bf126642c663ddb17d836936973c8b194ee78d6073ae3d3171648e276f")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_=__KT-SYNTAX_IdAssigner_Id_AExp0_`(inj{Id,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(4eb72a4dd0d5cf9f7284f4d052b087fe43c0c8afc2c021b520736178ef61eaac) heat() org.kframework.attributes.Location(Location(62,27,62,49)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict(2)]
  alias rule111LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortId{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule111LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarK0:SortId{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule111LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(62,27,62,49)"), UNIQUE'Unds'ID{}("4eb72a4dd0d5cf9f7284f4d052b087fe43c0c8afc2c021b520736178ef61eaac")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_BExp`(I,V))~>DotVar2),_1,_2,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I),L),DotVar3)) #as _9,`<store>`(`_Map_`(`_|->_`(L,_0),DotVar4)),_3),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_1,_2,_9,`<store>`(`_Map_`(`_|->_`(L,inj{BExp,KItem}(V)),DotVar4)),_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f536eecefadf319b9769f79003f0a41a38fda796293d45e0bfda2cb3ff656825) contentStartColumn(10) contentStartLine(459) org.kframework.attributes.Location(Location(459,10,461,48)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule112LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortKItem{},SortBExp{},SortKItem{},SortOutCell{},SortFunctionsCell{},SortLocCell{},SortEnvCell{}) : SortGeneratedTopCell{}
  where rule112LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI:SortId{},VarL:SortKItem{},VarV:SortBExp{},Var'Unds'0:SortKItem{},Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortLocCell{},Var'Unds'9:SortEnvCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(VarI:SortId{},VarV:SortBExp{})),VarDotVar2:SortK{})),Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'9:SortEnvCell{}),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},Var'Unds'0:SortKItem{}),VarDotVar4:SortMap{})),Var'Unds'3:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule112LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI:SortId{},VarL:SortKItem{},VarV:SortBExp{},Var'Unds'0:SortKItem{},Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortLocCell{},Var'Unds'9:SortEnvCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'9:SortEnvCell{},Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortBExp{}, SortKItem{}}(VarV:SortBExp{})),VarDotVar4:SortMap{})),Var'Unds'3:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("459"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(459,10,461,48)"), UNIQUE'Unds'ID{}("f536eecefadf319b9769f79003f0a41a38fda796293d45e0bfda2cb3ff656825")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_BExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(HOLE)~>`#freezer_=__KT-SYNTAX_IdAssigner_Id_BExp0_`(inj{Id,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{BExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(152d6adb91f31a5d5551b8465443f89dda2d4cc3f1c5e1a5da301380e98c3219) heat() org.kframework.attributes.Location(Location(63,23,63,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict(2)]
  alias rule113LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortId{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule113LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(VarK0:SortId{},VarHOLE:SortBExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule113LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(63,23,63,45)"), UNIQUE'Unds'ID{}("152d6adb91f31a5d5551b8465443f89dda2d4cc3f1c5e1a5da301380e98c3219")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_IdExp`(I1,`_+__KT-SYNTAX_IdExp_Id_Id`(I2,I3)))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I2),L),DotVar3)) #as _9,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)) #as _11,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_+__KT-SYNTAX_AExp_Int_AExp`(V,inj{Id,AExp}(I3))))~>DotVar2),_0,_1,_9,_11,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1274e2f06edf950099b631cf825802a80b5344dc4e0a99de24f167169fa22752) contentStartColumn(10) contentStartLine(215) org.kframework.attributes.Location(Location(215,10,217,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule114LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortId{},SortId{},SortKItem{},SortInt{},SortOutCell{},SortFunctionsCell{},SortStoreCell{},SortLocCell{},SortEnvCell{}) : SortGeneratedTopCell{}
  where rule114LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortEnvCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(VarI1:SortId{},Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'IdExp'Unds'Id'Unds'Id{}(VarI2:SortId{},VarI3:SortId{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI2:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'9:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'11:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule114LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortEnvCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(VarV:SortInt{},inj{SortId{}, SortAExp{}}(VarI3:SortId{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'9:SortEnvCell{},Var'Unds'11:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("215"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(215,10,217,45)"), UNIQUE'Unds'ID{}("1274e2f06edf950099b631cf825802a80b5344dc4e0a99de24f167169fa22752")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_IdExp`(I1,`_+__KT-SYNTAX_IdExp_Id_Id`(I2,I3)))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I2),L),DotVar3)) #as _9,`<store>`(`_Map_`(`_|->_`(L,inj{String,KItem}(V)),DotVar4)) #as _11,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_+__KT-SYNTAX_AExp_String_AExp`(V,inj{Id,AExp}(I3))))~>DotVar2),_0,_1,_9,_11,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(48859720bc794ab2dbd7f6c5775366e52b227c984ee8423ae0e75af149dcd81c) contentStartColumn(10) contentStartLine(247) org.kframework.attributes.Location(Location(247,10,249,48)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule115LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortId{},SortId{},SortKItem{},SortString{},SortOutCell{},SortFunctionsCell{},SortStoreCell{},SortLocCell{},SortEnvCell{}) : SortGeneratedTopCell{}
  where rule115LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortEnvCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(VarI1:SortId{},Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'IdExp'Unds'Id'Unds'Id{}(VarI2:SortId{},VarI3:SortId{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI2:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'9:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortString{}, SortKItem{}}(VarV:SortString{})),VarDotVar4:SortMap{})),Var'Unds'11:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule115LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortEnvCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp{}(VarV:SortString{},inj{SortId{}, SortAExp{}}(VarI3:SortId{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'9:SortEnvCell{},Var'Unds'11:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("247"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(247,10,249,48)"), UNIQUE'Unds'ID{}("48859720bc794ab2dbd7f6c5775366e52b227c984ee8423ae0e75af149dcd81c")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_>=__KT-SYNTAX_BExp_AExp_AExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_>=__KT-SYNTAX_BExp_AExp_AExp1_`(inj{AExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(4c467c85aacb888cbb4fba2563ce2a336109d7b1f18efc85d4ea67e2c9827a46) heat() org.kframework.attributes.Location(Location(95,19,95,41)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule116LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule116LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule116LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(95,19,95,41)"), UNIQUE'Unds'ID{}("4c467c85aacb888cbb4fba2563ce2a336109d7b1f18efc85d4ea67e2c9827a46")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_>=__KT-SYNTAX_BExp_AExp_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_>=__KT-SYNTAX_BExp_AExp_AExp0_`(inj{AExp,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(7a4d50a48848602b489c021a2d28f793ba67a56d7d0b23136582f57bb3ba776b) heat() org.kframework.attributes.Location(Location(95,19,95,41)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule117LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule117LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule117LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(95,19,95,41)"), UNIQUE'Unds'ID{}("7a4d50a48848602b489c021a2d28f793ba67a56d7d0b23136582f57bb3ba776b")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_>=__KT-SYNTAX_BExp_AExp_AExp`(inj{Int,AExp}(I1),inj{Int,AExp}(I2)))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Bool,KItem}(`_>=Int_`(I1,I2))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(992d68904238e6526f220dc7cbb004e706e20e05ac8656a6ff6d5f2a92bb2a28) contentStartColumn(10) contentStartLine(202) org.kframework.attributes.Location(Location(202,10,202,41)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule118LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortInt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule118LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(inj{SortInt{}, SortAExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortAExp{}}(VarI2:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule118LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("202"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(202,10,202,41)"), UNIQUE'Unds'ID{}("992d68904238e6526f220dc7cbb004e706e20e05ac8656a6ff6d5f2a92bb2a28")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_>__KT-SYNTAX_BExp_AExp_AExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_>__KT-SYNTAX_BExp_AExp_AExp1_`(inj{AExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(3eb2764c7e0a1d87a45a63fc24c18b4a95460a961cf87e82c5731b4de0780e11) heat() org.kframework.attributes.Location(Location(93,19,93,40)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule119LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule119LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule119LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(93,19,93,40)"), UNIQUE'Unds'ID{}("3eb2764c7e0a1d87a45a63fc24c18b4a95460a961cf87e82c5731b4de0780e11")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_>__KT-SYNTAX_BExp_AExp_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_>__KT-SYNTAX_BExp_AExp_AExp0_`(inj{AExp,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(5ceff271fe70871456e9e0d4d1dd8a864458044824b74bdb342902e2b5222a75) heat() org.kframework.attributes.Location(Location(93,19,93,40)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule120LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortAExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule120LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule120LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(93,19,93,40)"), UNIQUE'Unds'ID{}("5ceff271fe70871456e9e0d4d1dd8a864458044824b74bdb342902e2b5222a75")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_>__KT-SYNTAX_BExp_AExp_AExp`(inj{Int,AExp}(I1),inj{Int,AExp}(I2)))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Bool,KItem}(`_>Int_`(I1,I2))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fa8fe6d985de14b2c303e72c63e9707bdc24e5f330a83410a886e611ac4baf0b) contentStartColumn(10) contentStartLine(200) org.kframework.attributes.Location(Location(200,10,200,39)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule121LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortInt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule121LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'KT-SYNTAX'Unds'BExp'Unds'AExp'Unds'AExp{}(inj{SortInt{}, SortAExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortAExp{}}(VarI2:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule121LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-GT-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("200"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(200,10,200,39)"), UNIQUE'Unds'ID{}("fa8fe6d985de14b2c303e72c63e9707bdc24e5f330a83410a886e611ac4baf0b")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{VarDeclaration,KItem}(`__:Boolean_KT-SYNTAX_VarDeclaration_VarMod_IdList`(V,`.List{"_,__KT-SYNTAX_IdList_Id_IdList"}_IdList`(.KList)))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d31d09137060e9bb0116d357d53f5a1b64df22e0682114062719afbb3a64f408) contentStartColumn(10) contentStartLine(141) org.kframework.attributes.Location(Location(141,10,141,44)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule122LHS{}(SortGeneratedCounterCell{},SortK{},SortVarMod{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule122LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarV:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVarDeclaration{}, SortKItem{}}(Lbl'UndsUndsColn'Boolean'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarV:SortVarMod{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList'QuotRBraUnds'IdList{}())),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule122LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarV:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("141"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(141,10,141,44)"), UNIQUE'Unds'ID{}("d31d09137060e9bb0116d357d53f5a1b64df22e0682114062719afbb3a64f408")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{VarDeclaration,KItem}(`__:Boolean_KT-SYNTAX_VarDeclaration_VarMod_IdList`(Vm,`_,__KT-SYNTAX_IdList_Id_IdList`(I,Xs)))~>DotVar2),_0,_1,`<env>`(MEnv),`<store>`(MStore),`<loc>`(L)),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{VarDeclaration,KItem}(`__:Boolean_KT-SYNTAX_VarDeclaration_VarMod_IdList`(Vm,Xs))~>DotVar2),_0,_1,`<env>`(`_Map_`(MEnv,`_|->_`(inj{Id,KItem}(I),inj{Int,KItem}(L)))),`<store>`(`_Map_`(MStore,`_|->_`(inj{Int,KItem}(L),inj{Bool,KItem}(#token("false","Bool"))))),`<loc>`(`_+Int_`(L,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9bcff360fc12dcb6f1916e08397f1a1f6c46138e8a887cc040a0dc9a47daf32a) contentStartColumn(10) contentStartLine(383) org.kframework.attributes.Location(Location(383,10,386,39)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule123LHS{}(SortGeneratedCounterCell{},SortK{},SortId{},SortInt{},SortMap{},SortMap{},SortVarMod{},SortIdList{},SortOutCell{},SortFunctionsCell{}) : SortGeneratedTopCell{}
  where rule123LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarVm:SortVarMod{},VarXs:SortIdList{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVarDeclaration{}, SortKItem{}}(Lbl'UndsUndsColn'Boolean'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarVm:SortVarMod{},Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList{}(VarI:SortId{},VarXs:SortIdList{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(VarMEnv:SortMap{}),Lbl'-LT-'store'-GT-'{}(VarMStore:SortMap{}),Lbl'-LT-'loc'-GT-'{}(VarL:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule123LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarVm:SortVarMod{},VarXs:SortIdList{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVarDeclaration{}, SortKItem{}}(Lbl'UndsUndsColn'Boolean'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarVm:SortVarMod{},VarXs:SortIdList{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMEnv:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{})))),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMStore:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortBool{}, SortKItem{}}(\dv{SortBool{}}("false"))))),Lbl'-LT-'loc'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("383"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(383,10,386,39)"), UNIQUE'Unds'ID{}("9bcff360fc12dcb6f1916e08397f1a1f6c46138e8a887cc040a0dc9a47daf32a")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{VarDeclaration,KItem}(`__:Int_KT-SYNTAX_VarDeclaration_VarMod_IdList`(V,`.List{"_,__KT-SYNTAX_IdList_Id_IdList"}_IdList`(.KList)))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(da31125834abdb6441fe8e3ff1bbdf271d0936fff9685e97c5093afd62c6fccc) contentStartColumn(10) contentStartLine(140) org.kframework.attributes.Location(Location(140,10,140,40)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule124LHS{}(SortGeneratedCounterCell{},SortK{},SortVarMod{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule124LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarV:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVarDeclaration{}, SortKItem{}}(Lbl'UndsUndsColn'Int'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarV:SortVarMod{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList'QuotRBraUnds'IdList{}())),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule124LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarV:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("140"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(140,10,140,40)"), UNIQUE'Unds'ID{}("da31125834abdb6441fe8e3ff1bbdf271d0936fff9685e97c5093afd62c6fccc")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{VarDeclaration,KItem}(`__:Int_KT-SYNTAX_VarDeclaration_VarMod_IdList`(Vm,`_,__KT-SYNTAX_IdList_Id_IdList`(I,Xs)))~>DotVar2),_0,_1,`<env>`(MEnv),`<store>`(MStore),`<loc>`(L)),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{VarDeclaration,KItem}(`__:Int_KT-SYNTAX_VarDeclaration_VarMod_IdList`(Vm,Xs))~>DotVar2),_0,_1,`<env>`(`_Map_`(MEnv,`_|->_`(inj{Id,KItem}(I),inj{Int,KItem}(L)))),`<store>`(`_Map_`(MStore,`_|->_`(inj{Int,KItem}(L),inj{Int,KItem}(#token("0","Int"))))),`<loc>`(`_+Int_`(L,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(623ced5e1ac4d9d0183b38129a66f63f0127c46daa3a04abe4f73b59aac19b91) contentStartColumn(10) contentStartLine(378) org.kframework.attributes.Location(Location(378,10,381,39)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule125LHS{}(SortGeneratedCounterCell{},SortK{},SortId{},SortInt{},SortMap{},SortMap{},SortVarMod{},SortIdList{},SortOutCell{},SortFunctionsCell{}) : SortGeneratedTopCell{}
  where rule125LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarVm:SortVarMod{},VarXs:SortIdList{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVarDeclaration{}, SortKItem{}}(Lbl'UndsUndsColn'Int'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarVm:SortVarMod{},Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList{}(VarI:SortId{},VarXs:SortIdList{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(VarMEnv:SortMap{}),Lbl'-LT-'store'-GT-'{}(VarMStore:SortMap{}),Lbl'-LT-'loc'-GT-'{}(VarL:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule125LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarVm:SortVarMod{},VarXs:SortIdList{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVarDeclaration{}, SortKItem{}}(Lbl'UndsUndsColn'Int'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarVm:SortVarMod{},VarXs:SortIdList{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMEnv:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{})))),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMStore:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0"))))),Lbl'-LT-'loc'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("378"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(378,10,381,39)"), UNIQUE'Unds'ID{}("623ced5e1ac4d9d0183b38129a66f63f0127c46daa3a04abe4f73b59aac19b91")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{VarDeclaration,KItem}(`__:String_KT-SYNTAX_VarDeclaration_VarMod_IdList`(V,`.List{"_,__KT-SYNTAX_IdList_Id_IdList"}_IdList`(.KList)))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9d3f167a904af709343c6850bead28fd6143062b2c4f3a24e498f4a9ca97f156) contentStartColumn(10) contentStartLine(142) org.kframework.attributes.Location(Location(142,10,142,43)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule126LHS{}(SortGeneratedCounterCell{},SortK{},SortVarMod{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule126LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarV:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVarDeclaration{}, SortKItem{}}(Lbl'UndsUndsColn'String'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarV:SortVarMod{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList'QuotRBraUnds'IdList{}())),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule126LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarV:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("142"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(142,10,142,43)"), UNIQUE'Unds'ID{}("9d3f167a904af709343c6850bead28fd6143062b2c4f3a24e498f4a9ca97f156")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{VarDeclaration,KItem}(`__:String_KT-SYNTAX_VarDeclaration_VarMod_IdList`(Vm,`_,__KT-SYNTAX_IdList_Id_IdList`(I,Xs)))~>DotVar2),_0,_1,`<env>`(MEnv),`<store>`(MStore),`<loc>`(L)),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{VarDeclaration,KItem}(`__:String_KT-SYNTAX_VarDeclaration_VarMod_IdList`(Vm,Xs))~>DotVar2),_0,_1,`<env>`(`_Map_`(MEnv,`_|->_`(inj{Id,KItem}(I),inj{Int,KItem}(L)))),`<store>`(`_Map_`(MStore,`_|->_`(inj{Int,KItem}(L),inj{String,KItem}(#token("\" \"","String"))))),`<loc>`(`_+Int_`(L,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d52d7fb7a2583db28b63a90f2c72af6ff1901892e3a554aeb9133d05b7e20888) contentStartColumn(10) contentStartLine(388) org.kframework.attributes.Location(Location(388,10,391,39)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule127LHS{}(SortGeneratedCounterCell{},SortK{},SortId{},SortInt{},SortMap{},SortMap{},SortVarMod{},SortIdList{},SortOutCell{},SortFunctionsCell{}) : SortGeneratedTopCell{}
  where rule127LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarVm:SortVarMod{},VarXs:SortIdList{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVarDeclaration{}, SortKItem{}}(Lbl'UndsUndsColn'String'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarVm:SortVarMod{},Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList{}(VarI:SortId{},VarXs:SortIdList{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(VarMEnv:SortMap{}),Lbl'-LT-'store'-GT-'{}(VarMStore:SortMap{}),Lbl'-LT-'loc'-GT-'{}(VarL:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule127LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarVm:SortVarMod{},VarXs:SortIdList{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVarDeclaration{}, SortKItem{}}(Lbl'UndsUndsColn'String'Unds'KT-SYNTAX'Unds'VarDeclaration'Unds'VarMod'Unds'IdList{}(VarVm:SortVarMod{},VarXs:SortIdList{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMEnv:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{})))),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMStore:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortString{}, SortKItem{}}(\dv{SortString{}}(" "))))),Lbl'-LT-'loc'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("388"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(388,10,391,39)"), UNIQUE'Unds'ID{}("d52d7fb7a2583db28b63a90f2c72af6ff1901892e3a554aeb9133d05b7e20888")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Stmt,KItem}(`___KT-SYNTAX_Stmt_Stmt_Stmt`(S1,S2))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Stmt,KItem}(S1)~>inj{Stmt,KItem}(S2)~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(31456663abb641dac36ab1e9036a03ab5d1436c7f61ba7c87de9093a8598ff3f) contentStartColumn(10) contentStartLine(137) org.kframework.attributes.Location(Location(137,10,137,37)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) structural()]
  alias rule128LHS{}(SortGeneratedCounterCell{},SortK{},SortStmt{},SortStmt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule128LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS1:SortStmt{},VarS2:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'KT-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(VarS1:SortStmt{},VarS2:SortStmt{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule128LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS1:SortStmt{},VarS2:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS1:SortStmt{}),kseq{}(inj{SortStmt{}, SortKItem{}}(VarS2:SortStmt{}),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("137"), contentStartColumn{}("10"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(137,10,137,37)"), UNIQUE'Unds'ID{}("31456663abb641dac36ab1e9036a03ab5d1436c7f61ba7c87de9093a8598ff3f")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_||__KT-SYNTAX_BExp_BExp_BExp`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(HOLE)~>`#freezer_||__KT-SYNTAX_BExp_BExp_BExp1_`(inj{BExp,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{BExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(1b2f24c699264deb87b93e38e9b79302b51b2e0c90d97117f54bb4d78df6b3b8) heat() left() org.kframework.attributes.Location(Location(102,19,102,47)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule129LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortBExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule129LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK1:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(VarHOLE:SortBExp{},VarK1:SortBExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule129LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK1:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),kseq{}(Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp1'Unds'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarK1:SortBExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(102,19,102,47)"), UNIQUE'Unds'ID{}("1b2f24c699264deb87b93e38e9b79302b51b2e0c90d97117f54bb4d78df6b3b8")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_||__KT-SYNTAX_BExp_BExp_BExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(HOLE)~>`#freezer_||__KT-SYNTAX_BExp_BExp_BExp0_`(inj{BExp,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{BExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(35e662679cd911dc32472ad8ae7d0bcc1c6589e4bad6fecac6e7c6c69c5994f9) heat() left() org.kframework.attributes.Location(Location(102,19,102,47)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict()]
  alias rule130LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortBExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule130LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(VarK0:SortBExp{},VarHOLE:SortBExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule130LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),kseq{}(Lbl'Hash'freezer'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp0'Unds'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarK0:SortBExp{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(102,19,102,47)"), UNIQUE'Unds'ID{}("35e662679cd911dc32472ad8ae7d0bcc1c6589e4bad6fecac6e7c6c69c5994f9")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_||__KT-SYNTAX_BExp_BExp_BExp`(inj{Bool,BExp}(#token("true","Bool") #as _12),_0))~>DotVar2),_1,_2,_3,_4,_5),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Bool,KItem}(_12)~>DotVar2),_1,_2,_3,_4,_5),DotVar0) requires _12 ensures _12 [UNIQUE_ID(d6dc80724b7e95f3857323908ab4bf54431f900fef2120df3dd102150c26446b) contentStartColumn(10) contentStartLine(210) org.kframework.attributes.Location(Location(210,10,210,27)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule131LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortOutCell{},SortBool{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule131LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortBExp{},Var'Unds'1:SortOutCell{},Var'Unds'12:SortBool{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Var'Unds'12:SortBool{},
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(inj{SortBool{}, SortBExp{}}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'12:SortBool{})),Var'Unds'0:SortBExp{})),VarDotVar2:SortK{})),Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule131LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortBExp{},Var'Unds'1:SortOutCell{},Var'Unds'12:SortBool{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Var'Unds'12:SortBool{},
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Var'Unds'12:SortBool{}),VarDotVar2:SortK{})),Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("210"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(210,10,210,27)"), UNIQUE'Unds'ID{}("d6dc80724b7e95f3857323908ab4bf54431f900fef2120df3dd102150c26446b")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(`_||__KT-SYNTAX_BExp_BExp_BExp`(inj{Bool,BExp}(#token("false","Bool")),E))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(E)~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(90eb908cedd29e4c08b7d3afbaa029b7b01e0cd5b7271e7438d73cec78955674) contentStartColumn(10) contentStartLine(211) org.kframework.attributes.Location(Location(211,10,211,30)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule132LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule132LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarE:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'KT-SYNTAX'Unds'BExp'Unds'BExp'Unds'BExp{}(inj{SortBool{}, SortBExp{}}(\dv{SortBool{}}("false")),VarE:SortBExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule132LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarE:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarE:SortBExp{}),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("211"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(211,10,211,30)"), UNIQUE'Unds'ID{}("90eb908cedd29e4c08b7d3afbaa029b7b01e0cd5b7271e7438d73cec78955674")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{ElseIfStmt,KItem}(`else__KT-SYNTAX_ElseIfStmt_Block`(`{_}_KT-SYNTAX_Block_Stmt`(S)))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Stmt,KItem}(S)~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9de633352ad6ac5f7a9513cb06e6fb333d851dd07980124ff32d5f98e1436d51) contentStartColumn(10) contentStartLine(154) org.kframework.attributes.Location(Location(154,10,154,30)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule133LHS{}(SortGeneratedCounterCell{},SortK{},SortStmt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule133LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortElseIfStmt{}, SortKItem{}}(Lblelse'UndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'Block{}(Lbl'LBraUndsRBraUnds'KT-SYNTAX'Unds'Block'Unds'Stmt{}(VarS:SortStmt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule133LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("154"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(154,10,154,30)"), UNIQUE'Unds'ID{}("9de633352ad6ac5f7a9513cb06e6fb333d851dd07980124ff32d5f98e1436d51")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{ElseIfStmt,KItem}(`elseif(_)__KT-SYNTAX_ElseIfStmt_BExp_Block`(E,`{_}_KT-SYNTAX_Block_Stmt`(S) #as _10))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IfStmt,KItem}(`if(_)__KT-SYNTAX_IfStmt_BExp_Block`(E,_10))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(287a7e76890551b26b0d7788d36f69cb3a1f1e8dbebe2143ed3c6ef6ed393003) contentStartColumn(10) contentStartLine(153) org.kframework.attributes.Location(Location(153,10,153,53)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule134LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortStmt{},SortOutCell{},SortFunctionsCell{},SortBlock{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule134LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarE:SortBExp{},VarS:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortBlock{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortElseIfStmt{}, SortKItem{}}(Lblelseif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'BExp'Unds'Block{}(VarE:SortBExp{},\and{SortBlock{}}(Lbl'LBraUndsRBraUnds'KT-SYNTAX'Unds'Block'Unds'Stmt{}(VarS:SortStmt{}),Var'Unds'10:SortBlock{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule134LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarE:SortBExp{},VarS:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortBlock{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIfStmt{}, SortKItem{}}(Lblif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block{}(VarE:SortBExp{},Var'Unds'10:SortBlock{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("153"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(153,10,153,53)"), UNIQUE'Unds'ID{}("287a7e76890551b26b0d7788d36f69cb3a1f1e8dbebe2143ed3c6ef6ed393003")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{ElseIfStmt,KItem}(`elseif(_)___KT-SYNTAX_ElseIfStmt_BExp_Block_ElseIfStmt`(E,`{_}_KT-SYNTAX_Block_Stmt`(S1) #as _10,S2))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IfStmt,KItem}(`if(_)___KT-SYNTAX_IfStmt_BExp_Block_ElseIfStmt`(E,_10,S2))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c5a74993111eefb869b4e537ddb991b7e0181aeb199589e27a14ae4cb07abeaa) contentStartColumn(10) contentStartLine(152) org.kframework.attributes.Location(Location(152,10,152,72)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule135LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortStmt{},SortElseIfStmt{},SortOutCell{},SortFunctionsCell{},SortBlock{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule135LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarE:SortBExp{},VarS1:SortStmt{},VarS2:SortElseIfStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortBlock{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortElseIfStmt{}, SortKItem{}}(Lblelseif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt{}(VarE:SortBExp{},\and{SortBlock{}}(Lbl'LBraUndsRBraUnds'KT-SYNTAX'Unds'Block'Unds'Stmt{}(VarS1:SortStmt{}),Var'Unds'10:SortBlock{}),VarS2:SortElseIfStmt{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule135LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarE:SortBExp{},VarS1:SortStmt{},VarS2:SortElseIfStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortBlock{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIfStmt{}, SortKItem{}}(Lblif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt{}(VarE:SortBExp{},Var'Unds'10:SortBlock{},VarS2:SortElseIfStmt{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("152"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(152,10,152,72)"), UNIQUE'Unds'ID{}("c5a74993111eefb869b4e537ddb991b7e0181aeb199589e27a14ae4cb07abeaa")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{ForStmt,KItem}(`for(_;_;_)__KT-SYNTAX_ForStmt_IdAssigner_BExp_AExpMod_Block`(`_=__KT-SYNTAX_IdAssigner_Id_AExp`(I,E1) #as _10,E2,E3,`{_}_KT-SYNTAX_Block_Stmt`(S)))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(_10)~>inj{WhileStmt,KItem}(`while(_)__KT-SYNTAX_WhileStmt_BExp_Block`(E2,`{_}_KT-SYNTAX_Block_Stmt`(`___KT-SYNTAX_Stmt_Stmt_Stmt`(S,inj{AExpMod,Stmt}(E3)))))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8c797b673ae02aee89dd4bddc6d50e50651f695ad3bc0168e672293a6a57c5d3) contentStartColumn(10) contentStartLine(165) org.kframework.attributes.Location(Location(165,10,166,40)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) structural()]
  alias rule136LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortBExp{},SortAExpMod{},SortId{},SortStmt{},SortOutCell{},SortFunctionsCell{},SortIdAssigner{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule136LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarE1:SortAExp{},VarE2:SortBExp{},VarE3:SortAExpMod{},VarI:SortId{},VarS:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortIdAssigner{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortForStmt{}, SortKItem{}}(Lblfor'LParUndsSClnUndsSClnUndsRParUndsUnds'KT-SYNTAX'Unds'ForStmt'Unds'IdAssigner'Unds'BExp'Unds'AExpMod'Unds'Block{}(\and{SortIdAssigner{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI:SortId{},VarE1:SortAExp{}),Var'Unds'10:SortIdAssigner{}),VarE2:SortBExp{},VarE3:SortAExpMod{},Lbl'LBraUndsRBraUnds'KT-SYNTAX'Unds'Block'Unds'Stmt{}(VarS:SortStmt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule136LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarE1:SortAExp{},VarE2:SortBExp{},VarE3:SortAExpMod{},VarI:SortId{},VarS:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortIdAssigner{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Var'Unds'10:SortIdAssigner{}),kseq{}(inj{SortWhileStmt{}, SortKItem{}}(Lblwhile'LParUndsRParUndsUnds'KT-SYNTAX'Unds'WhileStmt'Unds'BExp'Unds'Block{}(VarE2:SortBExp{},Lbl'LBraUndsRBraUnds'KT-SYNTAX'Unds'Block'Unds'Stmt{}(Lbl'UndsUndsUnds'KT-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(VarS:SortStmt{},inj{SortAExpMod{}, SortStmt{}}(VarE3:SortAExpMod{}))))),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("165"), contentStartColumn{}("10"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(165,10,166,40)"), UNIQUE'Unds'ID{}("8c797b673ae02aee89dd4bddc6d50e50651f695ad3bc0168e672293a6a57c5d3")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{ForEachStmt,KItem}(`foreach(_in_)__KT-SYNTAX_ForEachStmt_Id_ArrayList_Block`(I,`[_]_KT-SYNTAX_ArrayList_IntList`(`.List{"_,__KT-SYNTAX_IntList_Int_IntList"}_IntList`(.KList)),B))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(532aa1759c9eb8583d9c8d70005a0cf9f25e3c1fa9fbe9152a73e5b5d7bf009c) contentStartColumn(10) contentStartLine(180) org.kframework.attributes.Location(Location(180,10,180,58)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule137LHS{}(SortBlock{},SortGeneratedCounterCell{},SortK{},SortId{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule137LHS{}(VarB:SortBlock{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortForEachStmt{}, SortKItem{}}(Lblforeach'LParUnds'in'UndsRParUndsUnds'KT-SYNTAX'Unds'ForEachStmt'Unds'Id'Unds'ArrayList'Unds'Block{}(VarI:SortId{},Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'IntList{}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IntList'Unds'Int'Unds'IntList'QuotRBraUnds'IntList{}()),VarB:SortBlock{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule137LHS{}(VarB:SortBlock{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("180"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(180,10,180,58)"), UNIQUE'Unds'ID{}("532aa1759c9eb8583d9c8d70005a0cf9f25e3c1fa9fbe9152a73e5b5d7bf009c")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{ForEachStmt,KItem}(`foreach(_in_)__KT-SYNTAX_ForEachStmt_Id_ArrayList_Block`(I,`[_]_KT-SYNTAX_ArrayList_IntList`(`_,__KT-SYNTAX_IntList_Int_IntList`(V,Vs)),`{_}_KT-SYNTAX_Block_Stmt`(S) #as _11))~>DotVar2),_1,_2,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I),L),DotVar3)) #as _12,`<store>`(`_Map_`(`_|->_`(L,_0),DotVar4)),_3),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Stmt,KItem}(S)~>inj{ForEachStmt,KItem}(`foreach(_in_)__KT-SYNTAX_ForEachStmt_Id_ArrayList_Block`(I,`[_]_KT-SYNTAX_ArrayList_IntList`(Vs),_11))~>DotVar2),_1,_2,_12,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)),_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5fc10ca03806ac328945daa91c76f93f7b8b2ca330a002be9d7a554681cbc4c9) contentStartColumn(10) contentStartLine(175) org.kframework.attributes.Location(Location(175,10,178,46)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule138LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortKItem{},SortStmt{},SortInt{},SortIntList{},SortKItem{},SortOutCell{},SortBlock{},SortEnvCell{},SortFunctionsCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule138LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI:SortId{},VarL:SortKItem{},VarS:SortStmt{},VarV:SortInt{},VarVs:SortIntList{},Var'Unds'0:SortKItem{},Var'Unds'1:SortOutCell{},Var'Unds'11:SortBlock{},Var'Unds'12:SortEnvCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortForEachStmt{}, SortKItem{}}(Lblforeach'LParUnds'in'UndsRParUndsUnds'KT-SYNTAX'Unds'ForEachStmt'Unds'Id'Unds'ArrayList'Unds'Block{}(VarI:SortId{},Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'IntList{}(Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IntList'Unds'Int'Unds'IntList{}(VarV:SortInt{},VarVs:SortIntList{})),\and{SortBlock{}}(Lbl'LBraUndsRBraUnds'KT-SYNTAX'Unds'Block'Unds'Stmt{}(VarS:SortStmt{}),Var'Unds'11:SortBlock{}))),VarDotVar2:SortK{})),Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'12:SortEnvCell{}),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},Var'Unds'0:SortKItem{}),VarDotVar4:SortMap{})),Var'Unds'3:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule138LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI:SortId{},VarL:SortKItem{},VarS:SortStmt{},VarV:SortInt{},VarVs:SortIntList{},Var'Unds'0:SortKItem{},Var'Unds'1:SortOutCell{},Var'Unds'11:SortBlock{},Var'Unds'12:SortEnvCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),kseq{}(inj{SortForEachStmt{}, SortKItem{}}(Lblforeach'LParUnds'in'UndsRParUndsUnds'KT-SYNTAX'Unds'ForEachStmt'Unds'Id'Unds'ArrayList'Unds'Block{}(VarI:SortId{},Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'IntList{}(VarVs:SortIntList{}),Var'Unds'11:SortBlock{})),VarDotVar2:SortK{}))),Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'12:SortEnvCell{},Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'3:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("175"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(175,10,178,46)"), UNIQUE'Unds'ID{}("5fc10ca03806ac328945daa91c76f93f7b8b2ca330a002be9d7a554681cbc4c9")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{ForEachStmt,KItem}(`foreach(_in_)__KT-SYNTAX_ForEachStmt_Id_ArrayList_Block`(I,`[_]_KT-SYNTAX_ArrayList_IntList`(`_,__KT-SYNTAX_IntList_Int_IntList`(V,Vs)),`{_}_KT-SYNTAX_Block_Stmt`(S) #as _9))~>DotVar2),_0,_1,`<env>`(MEnv),`<store>`(MStore),`<loc>`(L)),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Stmt,KItem}(S)~>inj{ForEachStmt,KItem}(`foreach(_in_)__KT-SYNTAX_ForEachStmt_Id_ArrayList_Block`(I,`[_]_KT-SYNTAX_ArrayList_IntList`(Vs),_9))~>DotVar2),_0,_1,`<env>`(`_Map_`(MEnv,`_|->_`(inj{Id,KItem}(I),inj{Int,KItem}(L)))),`<store>`(`_Map_`(MStore,`_|->_`(inj{Int,KItem}(L),inj{Int,KItem}(V)))),`<loc>`(`_+Int_`(L,#token("1","Int")))),DotVar0) requires `notBool_`(`Set:in`(inj{Id,KItem}(I),`keys(_)_MAP_Set_Map`(MEnv))) ensures #token("true","Bool") [UNIQUE_ID(141be83e3c1cc1e97aded349897f1f50bb388402cb8f40862e76da205cc189cf) contentStartColumn(10) contentStartLine(168) org.kframework.attributes.Location(Location(168,10,173,39)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" K [klabel(#ruleRequires) symbol()])]
  alias rule139LHS{}(SortGeneratedCounterCell{},SortK{},SortId{},SortInt{},SortMap{},SortMap{},SortStmt{},SortInt{},SortIntList{},SortOutCell{},SortFunctionsCell{},SortBlock{}) : SortGeneratedTopCell{}
  where rule139LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarS:SortStmt{},VarV:SortInt{},VarVs:SortIntList{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'9:SortBlock{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(VarMEnv:SortMap{}))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortForEachStmt{}, SortKItem{}}(Lblforeach'LParUnds'in'UndsRParUndsUnds'KT-SYNTAX'Unds'ForEachStmt'Unds'Id'Unds'ArrayList'Unds'Block{}(VarI:SortId{},Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'IntList{}(Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IntList'Unds'Int'Unds'IntList{}(VarV:SortInt{},VarVs:SortIntList{})),\and{SortBlock{}}(Lbl'LBraUndsRBraUnds'KT-SYNTAX'Unds'Block'Unds'Stmt{}(VarS:SortStmt{}),Var'Unds'9:SortBlock{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(VarMEnv:SortMap{}),Lbl'-LT-'store'-GT-'{}(VarMStore:SortMap{}),Lbl'-LT-'loc'-GT-'{}(VarL:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule139LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarS:SortStmt{},VarV:SortInt{},VarVs:SortIntList{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'9:SortBlock{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),kseq{}(inj{SortForEachStmt{}, SortKItem{}}(Lblforeach'LParUnds'in'UndsRParUndsUnds'KT-SYNTAX'Unds'ForEachStmt'Unds'Id'Unds'ArrayList'Unds'Block{}(VarI:SortId{},Lbl'LSqBUndsRSqBUnds'KT-SYNTAX'Unds'ArrayList'Unds'IntList{}(VarVs:SortIntList{}),Var'Unds'9:SortBlock{})),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMEnv:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{})))),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMStore:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortInt{}, SortKItem{}}(VarV:SortInt{})))),Lbl'-LT-'loc'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("168"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,10,173,39)"), UNIQUE'Unds'ID{}("141be83e3c1cc1e97aded349897f1f50bb388402cb8f40862e76da205cc189cf")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{FuncDec,KItem}(`fun_(_)__KT-SYNTAX_FuncDec_Id_Params_Block`(I,P,`{_}_KT-SYNTAX_Block_Stmt`(S)))~>DotVar2),_0,`<functions>`(`_ThreadCellMap_`(`.ThreadCellMap`(.KList),DotVar3)),_1,_2,_3),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_0,`<functions>`(`_ThreadCellMap_`(`ThreadCellMapItem`(`<id>`(inj{Id,KItem}(I)),`<thread>`(`<id>`(inj{Id,KItem}(I)),`<scope>`(inj{Stmt,KItem}(S)),`<params>`(inj{Params,KItem}(P)),`<temp>`(inj{Params,KItem}(P)),`<localEnv>`(`.Map`(.KList)))),DotVar3)),_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(594ef1244bb0fd19a0986457b04a4653c270955156c43795a623a04a0df498d3) contentStartColumn(10) contentStartLine(481) org.kframework.attributes.Location(Location(481,10,490,10)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule140LHS{}(SortGeneratedCounterCell{},SortK{},SortThreadCellMap{},SortId{},SortParams{},SortStmt{},SortOutCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule140LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortThreadCellMap{},VarI:SortId{},VarP:SortParams{},VarS:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortEnvCell{},Var'Unds'2:SortStoreCell{},Var'Unds'3:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFuncDec{}, SortKItem{}}(Lblfun'UndsLParUndsRParUndsUnds'KT-SYNTAX'Unds'FuncDec'Unds'Id'Unds'Params'Unds'Block{}(VarI:SortId{},VarP:SortParams{},Lbl'LBraUndsRBraUnds'KT-SYNTAX'Unds'Block'Unds'Stmt{}(VarS:SortStmt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Lbl'-LT-'functions'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(Lbl'Stop'ThreadCellMap{}(),VarDotVar3:SortThreadCellMap{})),Var'Unds'1:SortEnvCell{},Var'Unds'2:SortStoreCell{},Var'Unds'3:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule140LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortThreadCellMap{},VarI:SortId{},VarP:SortParams{},VarS:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortEnvCell{},Var'Unds'2:SortStoreCell{},Var'Unds'3:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Lbl'-LT-'functions'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),dotk{}())),Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),dotk{}())),Lbl'-LT-'scope'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),dotk{}())),Lbl'-LT-'params'-GT-'{}(kseq{}(inj{SortParams{}, SortKItem{}}(VarP:SortParams{}),dotk{}())),Lbl'-LT-'temp'-GT-'{}(kseq{}(inj{SortParams{}, SortKItem{}}(VarP:SortParams{}),dotk{}())),Lbl'-LT-'localEnv'-GT-'{}(Lbl'Stop'Map{}()))),VarDotVar3:SortThreadCellMap{})),Var'Unds'1:SortEnvCell{},Var'Unds'2:SortStoreCell{},Var'Unds'3:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("481"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(481,10,490,10)"), UNIQUE'Unds'ID{}("594ef1244bb0fd19a0986457b04a4653c270955156c43795a623a04a0df498d3")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Fun,KItem}(`funmain(){_}_KT-SYNTAX_Fun_Block`(B))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Block,KItem}(B)~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cd47da70c844d54f9f61df97a028d0762ff5ee54b965fb533143f81d1fb48385) contentStartColumn(10) contentStartLine(135) org.kframework.attributes.Location(Location(135,10,135,35)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) structural()]
  alias rule141LHS{}(SortBlock{},SortGeneratedCounterCell{},SortK{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule141LHS{}(VarB:SortBlock{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFun{}, SortKItem{}}(Lblfunmain'LParRParLBraUndsRBraUnds'KT-SYNTAX'Unds'Fun'Unds'Block{}(VarB:SortBlock{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule141LHS{}(VarB:SortBlock{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarB:SortBlock{}),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("135"), contentStartColumn{}("10"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(135,10,135,35)"), UNIQUE'Unds'ID{}("cd47da70c844d54f9f61df97a028d0762ff5ee54b965fb533143f81d1fb48385")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IfStmt,KItem}(`if(_)__KT-SYNTAX_IfStmt_BExp_Block`(HOLE,K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(HOLE)~>`#freezerif(_)__KT-SYNTAX_IfStmt_BExp_Block1_`(inj{Block,KItem}(K1))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{BExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(8e82fe685cea7230872b2f0f76c91437db57ee590d47e58739ab974c96af1c1a) heat() org.kframework.attributes.Location(Location(111,23,111,57)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict(1)]
  alias rule142LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortBlock{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule142LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK1:SortBlock{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIfStmt{}, SortKItem{}}(Lblif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block{}(VarHOLE:SortBExp{},VarK1:SortBlock{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule142LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK1:SortBlock{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),kseq{}(Lbl'Hash'freezerif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block1'Unds'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarK1:SortBlock{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(111,23,111,57)"), UNIQUE'Unds'ID{}("8e82fe685cea7230872b2f0f76c91437db57ee590d47e58739ab974c96af1c1a")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IfStmt,KItem}(`if(_)__KT-SYNTAX_IfStmt_BExp_Block`(inj{Bool,BExp}(#token("true","Bool") #as _11),`{_}_KT-SYNTAX_Block_Stmt`(S)))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Stmt,KItem}(S)~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires _11 ensures _11 [UNIQUE_ID(080404ecdb9e955c7150d0a7bea882dee530294b6c7f036c93a6c236b2364473) contentStartColumn(10) contentStartLine(148) org.kframework.attributes.Location(Location(148,10,148,35)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule143LHS{}(SortGeneratedCounterCell{},SortK{},SortStmt{},SortOutCell{},SortFunctionsCell{},SortBool{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule143LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortBool{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Var'Unds'11:SortBool{},
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIfStmt{}, SortKItem{}}(Lblif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block{}(inj{SortBool{}, SortBExp{}}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'11:SortBool{})),Lbl'LBraUndsRBraUnds'KT-SYNTAX'Unds'Block'Unds'Stmt{}(VarS:SortStmt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule143LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortBool{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Var'Unds'11:SortBool{},
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("148"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(148,10,148,35)"), UNIQUE'Unds'ID{}("080404ecdb9e955c7150d0a7bea882dee530294b6c7f036c93a6c236b2364473")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IfStmt,KItem}(`if(_)__KT-SYNTAX_IfStmt_BExp_Block`(inj{Bool,BExp}(#token("false","Bool")),`{_}_KT-SYNTAX_Block_Stmt`(_0)))~>DotVar2),_1,_2,_3,_4,_5),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_1,_2,_3,_4,_5),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3ac4283f596112bf963b620ad3469e37d5d456af88df98b8d6af70a36cc94685) contentStartColumn(10) contentStartLine(149) org.kframework.attributes.Location(Location(149,10,149,34)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule144LHS{}(SortGeneratedCounterCell{},SortK{},SortStmt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule144LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortStmt{},Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIfStmt{}, SortKItem{}}(Lblif'LParUndsRParUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block{}(inj{SortBool{}, SortBExp{}}(\dv{SortBool{}}("false")),Lbl'LBraUndsRBraUnds'KT-SYNTAX'Unds'Block'Unds'Stmt{}(Var'Unds'0:SortStmt{}))),VarDotVar2:SortK{})),Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule144LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortStmt{},Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("149"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(149,10,149,34)"), UNIQUE'Unds'ID{}("3ac4283f596112bf963b620ad3469e37d5d456af88df98b8d6af70a36cc94685")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IfStmt,KItem}(`if(_)___KT-SYNTAX_IfStmt_BExp_Block_ElseIfStmt`(HOLE,K1,K2))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(HOLE)~>`#freezerif(_)___KT-SYNTAX_IfStmt_BExp_Block_ElseIfStmt1_`(inj{Block,KItem}(K1),inj{ElseIfStmt,KItem}(K2))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{BExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(2c06a6d7307655e7ca00d4a3924d5bdcdf19a751fb69eb1da1af12f748e6b169) heat() org.kframework.attributes.Location(Location(112,19,112,64)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict(1)]
  alias rule145LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortBlock{},SortElseIfStmt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule145LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK1:SortBlock{},VarK2:SortElseIfStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIfStmt{}, SortKItem{}}(Lblif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt{}(VarHOLE:SortBExp{},VarK1:SortBlock{},VarK2:SortElseIfStmt{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule145LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK1:SortBlock{},VarK2:SortElseIfStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),kseq{}(Lbl'Hash'freezerif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt1'Unds'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarK1:SortBlock{}),dotk{}()),kseq{}(inj{SortElseIfStmt{}, SortKItem{}}(VarK2:SortElseIfStmt{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(112,19,112,64)"), UNIQUE'Unds'ID{}("2c06a6d7307655e7ca00d4a3924d5bdcdf19a751fb69eb1da1af12f748e6b169")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IfStmt,KItem}(`if(_)___KT-SYNTAX_IfStmt_BExp_Block_ElseIfStmt`(inj{Bool,BExp}(#token("true","Bool") #as _11),`{_}_KT-SYNTAX_Block_Stmt`(S),Sif))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Stmt,KItem}(S)~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires _11 ensures _11 [UNIQUE_ID(e207c4aa206633d42314167b74ce8c66e2eee8d930f10cfa87bc7a025d5030a2) contentStartColumn(10) contentStartLine(150) org.kframework.attributes.Location(Location(150,10,150,50)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule146LHS{}(SortGeneratedCounterCell{},SortK{},SortStmt{},SortElseIfStmt{},SortOutCell{},SortFunctionsCell{},SortBool{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule146LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortStmt{},VarSif:SortElseIfStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortBool{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Var'Unds'11:SortBool{},
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIfStmt{}, SortKItem{}}(Lblif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt{}(inj{SortBool{}, SortBExp{}}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'11:SortBool{})),Lbl'LBraUndsRBraUnds'KT-SYNTAX'Unds'Block'Unds'Stmt{}(VarS:SortStmt{}),VarSif:SortElseIfStmt{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule146LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortStmt{},VarSif:SortElseIfStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortBool{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Var'Unds'11:SortBool{},
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("150"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(150,10,150,50)"), UNIQUE'Unds'ID{}("e207c4aa206633d42314167b74ce8c66e2eee8d930f10cfa87bc7a025d5030a2")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IfStmt,KItem}(`if(_)___KT-SYNTAX_IfStmt_BExp_Block_ElseIfStmt`(inj{Bool,BExp}(#token("true","Bool") #as _12),`{_}_KT-SYNTAX_Block_Stmt`(S),`else__KT-SYNTAX_ElseIfStmt_Block`(_0)))~>DotVar2),_1,_2,_3,_4,_5),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Stmt,KItem}(S)~>DotVar2),_1,_2,_3,_4,_5),DotVar0) requires _12 ensures _12 [UNIQUE_ID(627bc3b3be8557ab29774a7e5ddaea3d53585b4b68e6292a5cec706c70978e34) contentStartColumn(10) contentStartLine(155) org.kframework.attributes.Location(Location(155,10,155,42)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule147LHS{}(SortGeneratedCounterCell{},SortK{},SortStmt{},SortBlock{},SortOutCell{},SortBool{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule147LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortStmt{},Var'Unds'0:SortBlock{},Var'Unds'1:SortOutCell{},Var'Unds'12:SortBool{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Var'Unds'12:SortBool{},
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIfStmt{}, SortKItem{}}(Lblif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt{}(inj{SortBool{}, SortBExp{}}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'12:SortBool{})),Lbl'LBraUndsRBraUnds'KT-SYNTAX'Unds'Block'Unds'Stmt{}(VarS:SortStmt{}),Lblelse'UndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'Block{}(Var'Unds'0:SortBlock{}))),VarDotVar2:SortK{})),Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule147LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortStmt{},Var'Unds'0:SortBlock{},Var'Unds'1:SortOutCell{},Var'Unds'12:SortBool{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Var'Unds'12:SortBool{},
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),VarDotVar2:SortK{})),Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("155"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(155,10,155,42)"), UNIQUE'Unds'ID{}("627bc3b3be8557ab29774a7e5ddaea3d53585b4b68e6292a5cec706c70978e34")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IfStmt,KItem}(`if(_)___KT-SYNTAX_IfStmt_BExp_Block_ElseIfStmt`(inj{Bool,BExp}(#token("false","Bool")),`{_}_KT-SYNTAX_Block_Stmt`(_0),S))~>DotVar2),_1,_2,_3,_4,_5),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{ElseIfStmt,KItem}(S)~>DotVar2),_1,_2,_3,_4,_5),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a92a11110c769119899caa055ec019cedbb7795b9f2a73c647677463be531124) contentStartColumn(10) contentStartLine(151) org.kframework.attributes.Location(Location(151,10,151,44)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule148LHS{}(SortGeneratedCounterCell{},SortK{},SortElseIfStmt{},SortStmt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule148LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortElseIfStmt{},Var'Unds'0:SortStmt{},Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIfStmt{}, SortKItem{}}(Lblif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt{}(inj{SortBool{}, SortBExp{}}(\dv{SortBool{}}("false")),Lbl'LBraUndsRBraUnds'KT-SYNTAX'Unds'Block'Unds'Stmt{}(Var'Unds'0:SortStmt{}),VarS:SortElseIfStmt{})),VarDotVar2:SortK{})),Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule148LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortElseIfStmt{},Var'Unds'0:SortStmt{},Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortElseIfStmt{}, SortKItem{}}(VarS:SortElseIfStmt{}),VarDotVar2:SortK{})),Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("151"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(151,10,151,44)"), UNIQUE'Unds'ID{}("a92a11110c769119899caa055ec019cedbb7795b9f2a73c647677463be531124")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IfStmt,KItem}(`if(_)___KT-SYNTAX_IfStmt_BExp_Block_ElseIfStmt`(inj{Bool,BExp}(#token("false","Bool")),`{_}_KT-SYNTAX_Block_Stmt`(_0),`else__KT-SYNTAX_ElseIfStmt_Block`(inj{Stmt,Block}(S))))~>DotVar2),_1,_2,_3,_4,_5),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Stmt,KItem}(S)~>DotVar2),_1,_2,_3,_4,_5),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(59cc3162b644732c914766eced2bbd09ea7011609851c8730b3028a17cf735a3) contentStartColumn(10) contentStartLine(156) org.kframework.attributes.Location(Location(156,10,156,43)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule149LHS{}(SortGeneratedCounterCell{},SortK{},SortStmt{},SortStmt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule149LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortStmt{},Var'Unds'0:SortStmt{},Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIfStmt{}, SortKItem{}}(Lblif'LParUndsRParUndsUndsUnds'KT-SYNTAX'Unds'IfStmt'Unds'BExp'Unds'Block'Unds'ElseIfStmt{}(inj{SortBool{}, SortBExp{}}(\dv{SortBool{}}("false")),Lbl'LBraUndsRBraUnds'KT-SYNTAX'Unds'Block'Unds'Stmt{}(Var'Unds'0:SortStmt{}),Lblelse'UndsUnds'KT-SYNTAX'Unds'ElseIfStmt'Unds'Block{}(inj{SortStmt{}, SortBlock{}}(VarS:SortStmt{})))),VarDotVar2:SortK{})),Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule149LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortStmt{},Var'Unds'0:SortStmt{},Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),VarDotVar2:SortK{})),Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("156"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(156,10,156,43)"), UNIQUE'Unds'ID{}("59cc3162b644732c914766eced2bbd09ea7011609851c8730b3028a17cf735a3")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Local,KItem}(`local(_,_)_KT-SYNTAX_Local_Id_Stmt`(FuncId,inj{IdAssigner,Stmt}(`_=__KT-SYNTAX_IdAssigner_Id_AExp`(I,inj{Int,AExp}(V)))))~>DotVar2),_4,`<functions>`(`_ThreadCellMap_`(`ThreadCellMapItem`(`<id>`(inj{Id,KItem}(FuncId)),`<thread>`(`<id>`(inj{Id,KItem}(FuncId)),_1,_2,_3,`<localEnv>`(`_Map_`(`_|->_`(inj{Id,KItem}(I),L),DotVar6)))),DotVar4)) #as _15,_5,`<store>`(`_Map_`(`_|->_`(L,_0),DotVar3)),_6),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_4,_15,_5,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar3)),_6),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(106796059287cb95e732b684f4c785f1098a242f1abc3e9cac49e8f68633ae33) contentStartColumn(10) contentStartLine(523) org.kframework.attributes.Location(Location(523,10,530,44)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule150LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortThreadCellMap{},SortMap{},SortId{},SortId{},SortKItem{},SortInt{},SortKItem{},SortScopeCell{},SortFunctionsCell{},SortParamsCell{},SortTempCell{},SortOutCell{},SortEnvCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule150LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortThreadCellMap{},VarDotVar6:SortMap{},VarFuncId:SortId{},VarI:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortKItem{},Var'Unds'1:SortScopeCell{},Var'Unds'15:SortFunctionsCell{},Var'Unds'2:SortParamsCell{},Var'Unds'3:SortTempCell{},Var'Unds'4:SortOutCell{},Var'Unds'5:SortEnvCell{},Var'Unds'6:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortLocal{}, SortKItem{}}(Lbllocal'LParUndsCommUndsRParUnds'KT-SYNTAX'Unds'Local'Unds'Id'Unds'Stmt{}(VarFuncId:SortId{},inj{SortIdAssigner{}, SortStmt{}}(Lbl'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI:SortId{},inj{SortInt{}, SortAExp{}}(VarV:SortInt{}))))),VarDotVar2:SortK{})),Var'Unds'4:SortOutCell{},\and{SortFunctionsCell{}}(Lbl'-LT-'functions'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarFuncId:SortId{}),dotk{}())),Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarFuncId:SortId{}),dotk{}())),Var'Unds'1:SortScopeCell{},Var'Unds'2:SortParamsCell{},Var'Unds'3:SortTempCell{},Lbl'-LT-'localEnv'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),VarL:SortKItem{}),VarDotVar6:SortMap{})))),VarDotVar4:SortThreadCellMap{})),Var'Unds'15:SortFunctionsCell{}),Var'Unds'5:SortEnvCell{},Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},Var'Unds'0:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'6:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule150LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortThreadCellMap{},VarDotVar6:SortMap{},VarFuncId:SortId{},VarI:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortKItem{},Var'Unds'1:SortScopeCell{},Var'Unds'15:SortFunctionsCell{},Var'Unds'2:SortParamsCell{},Var'Unds'3:SortTempCell{},Var'Unds'4:SortOutCell{},Var'Unds'5:SortEnvCell{},Var'Unds'6:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'4:SortOutCell{},Var'Unds'15:SortFunctionsCell{},Var'Unds'5:SortEnvCell{},Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar3:SortMap{})),Var'Unds'6:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("523"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(523,10,530,44)"), UNIQUE'Unds'ID{}("106796059287cb95e732b684f4c785f1098a242f1abc3e9cac49e8f68633ae33")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Local,KItem}(`local(_,_)_KT-SYNTAX_Local_Id_Stmt`(FuncId,inj{IdAssigner,Stmt}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I,`_+__KT-SYNTAX_AExp_Int_AExp`(V1,inj{Int,AExp}(V2))))))~>DotVar2),_3,`<functions>`(`_ThreadCellMap_`(`ThreadCellMapItem`(`<id>`(inj{Id,KItem}(FuncId)),`<thread>`(`<id>`(inj{Id,KItem}(FuncId)),_0,_1,_2,`<localEnv>`(Rho))),DotVar3)),_4,`<store>`(SMap),`<loc>`(L)),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_3,`<functions>`(`_ThreadCellMap_`(`ThreadCellMapItem`(`<id>`(inj{Id,KItem}(FuncId)),`<thread>`(`<id>`(inj{Id,KItem}(FuncId)),_0,_1,_2,`<localEnv>`(`_Map_`(Rho,`_|->_`(inj{Id,KItem}(I),inj{Int,KItem}(L)))))),DotVar3)),_4,`<store>`(`_Map_`(SMap,`_|->_`(inj{Int,KItem}(L),inj{Int,KItem}(`_+Int_`(V1,V2))))),`<loc>`(`_+Int_`(L,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e39177c2cc8a16ad347c701237b30980736f6cf16fb6fb54281adde486affb70) contentStartColumn(10) contentStartLine(338) org.kframework.attributes.Location(Location(338,10,346,35)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule151LHS{}(SortGeneratedCounterCell{},SortK{},SortThreadCellMap{},SortId{},SortId{},SortInt{},SortMap{},SortMap{},SortInt{},SortInt{},SortScopeCell{},SortParamsCell{},SortTempCell{},SortOutCell{},SortEnvCell{}) : SortGeneratedTopCell{}
  where rule151LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortThreadCellMap{},VarFuncId:SortId{},VarI:SortId{},VarL:SortInt{},VarRho:SortMap{},VarSMap:SortMap{},VarV1:SortInt{},VarV2:SortInt{},Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Var'Unds'2:SortTempCell{},Var'Unds'3:SortOutCell{},Var'Unds'4:SortEnvCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortLocal{}, SortKItem{}}(Lbllocal'LParUndsCommUndsRParUnds'KT-SYNTAX'Unds'Local'Unds'Id'Unds'Stmt{}(VarFuncId:SortId{},inj{SortIdAssigner{}, SortStmt{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI:SortId{},Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(VarV1:SortInt{},inj{SortInt{}, SortAExp{}}(VarV2:SortInt{})))))),VarDotVar2:SortK{})),Var'Unds'3:SortOutCell{},Lbl'-LT-'functions'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarFuncId:SortId{}),dotk{}())),Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarFuncId:SortId{}),dotk{}())),Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Var'Unds'2:SortTempCell{},Lbl'-LT-'localEnv'-GT-'{}(VarRho:SortMap{}))),VarDotVar3:SortThreadCellMap{})),Var'Unds'4:SortEnvCell{},Lbl'-LT-'store'-GT-'{}(VarSMap:SortMap{}),Lbl'-LT-'loc'-GT-'{}(VarL:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule151LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortThreadCellMap{},VarFuncId:SortId{},VarI:SortId{},VarL:SortInt{},VarRho:SortMap{},VarSMap:SortMap{},VarV1:SortInt{},VarV2:SortInt{},Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Var'Unds'2:SortTempCell{},Var'Unds'3:SortOutCell{},Var'Unds'4:SortEnvCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'3:SortOutCell{},Lbl'-LT-'functions'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarFuncId:SortId{}),dotk{}())),Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarFuncId:SortId{}),dotk{}())),Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Var'Unds'2:SortTempCell{},Lbl'-LT-'localEnv'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarRho:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{})))))),VarDotVar3:SortThreadCellMap{})),Var'Unds'4:SortEnvCell{},Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarSMap:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortInt{}, SortKItem{}}(Lbl'UndsPlus'Int'Unds'{}(VarV1:SortInt{},VarV2:SortInt{}))))),Lbl'-LT-'loc'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("338"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(338,10,346,35)"), UNIQUE'Unds'ID{}("e39177c2cc8a16ad347c701237b30980736f6cf16fb6fb54281adde486affb70")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Local,KItem}(`local(_,_)_KT-SYNTAX_Local_Id_Stmt`(FuncId,inj{IdAssigner,Stmt}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I,inj{Int,AExp}(V)))))~>DotVar2),_3,`<functions>`(`_ThreadCellMap_`(`ThreadCellMapItem`(`<id>`(inj{Id,KItem}(FuncId)),`<thread>`(`<id>`(inj{Id,KItem}(FuncId)),_0,_1,_2,`<localEnv>`(Rho))),DotVar3)),_4,`<store>`(SMap),`<loc>`(L)),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_3,`<functions>`(`_ThreadCellMap_`(`ThreadCellMapItem`(`<id>`(inj{Id,KItem}(FuncId)),`<thread>`(`<id>`(inj{Id,KItem}(FuncId)),_0,_1,_2,`<localEnv>`(`_Map_`(Rho,`_|->_`(inj{Id,KItem}(I),inj{Int,KItem}(L)))))),DotVar3)),_4,`<store>`(`_Map_`(SMap,`_|->_`(inj{Int,KItem}(L),inj{Int,KItem}(V)))),`<loc>`(`_+Int_`(L,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0080c587c3d9466050a1d3ae8db016ebcbdca5180640ccd3e20d012e9dfeff81) contentStartColumn(10) contentStartLine(513) org.kframework.attributes.Location(Location(513,10,521,35)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule152LHS{}(SortGeneratedCounterCell{},SortK{},SortThreadCellMap{},SortId{},SortId{},SortInt{},SortMap{},SortMap{},SortInt{},SortScopeCell{},SortParamsCell{},SortTempCell{},SortOutCell{},SortEnvCell{}) : SortGeneratedTopCell{}
  where rule152LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortThreadCellMap{},VarFuncId:SortId{},VarI:SortId{},VarL:SortInt{},VarRho:SortMap{},VarSMap:SortMap{},VarV:SortInt{},Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Var'Unds'2:SortTempCell{},Var'Unds'3:SortOutCell{},Var'Unds'4:SortEnvCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortLocal{}, SortKItem{}}(Lbllocal'LParUndsCommUndsRParUnds'KT-SYNTAX'Unds'Local'Unds'Id'Unds'Stmt{}(VarFuncId:SortId{},inj{SortIdAssigner{}, SortStmt{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI:SortId{},inj{SortInt{}, SortAExp{}}(VarV:SortInt{}))))),VarDotVar2:SortK{})),Var'Unds'3:SortOutCell{},Lbl'-LT-'functions'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarFuncId:SortId{}),dotk{}())),Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarFuncId:SortId{}),dotk{}())),Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Var'Unds'2:SortTempCell{},Lbl'-LT-'localEnv'-GT-'{}(VarRho:SortMap{}))),VarDotVar3:SortThreadCellMap{})),Var'Unds'4:SortEnvCell{},Lbl'-LT-'store'-GT-'{}(VarSMap:SortMap{}),Lbl'-LT-'loc'-GT-'{}(VarL:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule152LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortThreadCellMap{},VarFuncId:SortId{},VarI:SortId{},VarL:SortInt{},VarRho:SortMap{},VarSMap:SortMap{},VarV:SortInt{},Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Var'Unds'2:SortTempCell{},Var'Unds'3:SortOutCell{},Var'Unds'4:SortEnvCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'3:SortOutCell{},Lbl'-LT-'functions'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarFuncId:SortId{}),dotk{}())),Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarFuncId:SortId{}),dotk{}())),Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Var'Unds'2:SortTempCell{},Lbl'-LT-'localEnv'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarRho:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{})))))),VarDotVar3:SortThreadCellMap{})),Var'Unds'4:SortEnvCell{},Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarSMap:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortInt{}, SortKItem{}}(VarV:SortInt{})))),Lbl'-LT-'loc'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("513"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(513,10,521,35)"), UNIQUE'Unds'ID{}("0080c587c3d9466050a1d3ae8db016ebcbdca5180640ccd3e20d012e9dfeff81")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Local,KItem}(`local(_,_)_KT-SYNTAX_Local_Id_Stmt`(FuncId,inj{IdAssigner,Stmt}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_+__KT-SYNTAX_AExp_Int_AExp`(I2,inj{Id,AExp}(I3))))))~>DotVar2),_3,`<functions>`(`_ThreadCellMap_`(`ThreadCellMapItem`(`<id>`(inj{Id,KItem}(FuncId)),`<thread>`(`<id>`(inj{Id,KItem}(FuncId)),_0,_1,_2,`<localEnv>`(`_Map_`(`_|->_`(inj{Id,KItem}(I3),L),DotVar6)))),DotVar4)) #as _15,_4,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar3)) #as _17,_5),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Local,KItem}(`local(_,_)_KT-SYNTAX_Local_Id_Stmt`(FuncId,inj{IdAssigner,Stmt}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_+__KT-SYNTAX_AExp_Int_AExp`(I2,inj{Int,AExp}(V))))))~>DotVar2),_3,_15,_4,_17,_5),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(043393a97ff1d12ecc0fb829b4dd0263e3607d445f0f5edc67fa7e1514067a3e) contentStartColumn(10) contentStartLine(357) org.kframework.attributes.Location(Location(357,10,364,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule153LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortThreadCellMap{},SortMap{},SortId{},SortId{},SortInt{},SortId{},SortKItem{},SortInt{},SortScopeCell{},SortParamsCell{},SortFunctionsCell{},SortStoreCell{},SortTempCell{},SortOutCell{},SortEnvCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule153LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortThreadCellMap{},VarDotVar6:SortMap{},VarFuncId:SortId{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Var'Unds'15:SortFunctionsCell{},Var'Unds'17:SortStoreCell{},Var'Unds'2:SortTempCell{},Var'Unds'3:SortOutCell{},Var'Unds'4:SortEnvCell{},Var'Unds'5:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortLocal{}, SortKItem{}}(Lbllocal'LParUndsCommUndsRParUnds'KT-SYNTAX'Unds'Local'Unds'Id'Unds'Stmt{}(VarFuncId:SortId{},inj{SortIdAssigner{}, SortStmt{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(VarI2:SortInt{},inj{SortId{}, SortAExp{}}(VarI3:SortId{})))))),VarDotVar2:SortK{})),Var'Unds'3:SortOutCell{},\and{SortFunctionsCell{}}(Lbl'-LT-'functions'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarFuncId:SortId{}),dotk{}())),Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarFuncId:SortId{}),dotk{}())),Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Var'Unds'2:SortTempCell{},Lbl'-LT-'localEnv'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI3:SortId{}),VarL:SortKItem{}),VarDotVar6:SortMap{})))),VarDotVar4:SortThreadCellMap{})),Var'Unds'15:SortFunctionsCell{}),Var'Unds'4:SortEnvCell{},\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar3:SortMap{})),Var'Unds'17:SortStoreCell{}),Var'Unds'5:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule153LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortThreadCellMap{},VarDotVar6:SortMap{},VarFuncId:SortId{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Var'Unds'15:SortFunctionsCell{},Var'Unds'17:SortStoreCell{},Var'Unds'2:SortTempCell{},Var'Unds'3:SortOutCell{},Var'Unds'4:SortEnvCell{},Var'Unds'5:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortLocal{}, SortKItem{}}(Lbllocal'LParUndsCommUndsRParUnds'KT-SYNTAX'Unds'Local'Unds'Id'Unds'Stmt{}(VarFuncId:SortId{},inj{SortIdAssigner{}, SortStmt{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(VarI2:SortInt{},inj{SortInt{}, SortAExp{}}(VarV:SortInt{})))))),VarDotVar2:SortK{})),Var'Unds'3:SortOutCell{},Var'Unds'15:SortFunctionsCell{},Var'Unds'4:SortEnvCell{},Var'Unds'17:SortStoreCell{},Var'Unds'5:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("357"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(357,10,364,45)"), UNIQUE'Unds'ID{}("043393a97ff1d12ecc0fb829b4dd0263e3607d445f0f5edc67fa7e1514067a3e")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Local,KItem}(`local(_,_)_KT-SYNTAX_Local_Id_Stmt`(FuncId,inj{IdAssigner,Stmt}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,inj{Id,AExp}(I2)))))~>DotVar2),_3,`<functions>`(`_ThreadCellMap_`(`ThreadCellMapItem`(`<id>`(inj{Id,KItem}(FuncId)),`<thread>`(`<id>`(inj{Id,KItem}(FuncId)),_0,_1,_2,`<localEnv>`(`_Map_`(`_|->_`(inj{Id,KItem}(I2),L),DotVar6)))),DotVar4)) #as _14,_4,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar3)) #as _16,_5),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Local,KItem}(`local(_,_)_KT-SYNTAX_Local_Id_Stmt`(FuncId,inj{IdAssigner,Stmt}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,inj{Int,AExp}(V)))))~>DotVar2),_3,_14,_4,_16,_5),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c8417bc6c3dd222d3ff36764c426774fd70107fc9b426cf9911acfed49aca6da) contentStartColumn(10) contentStartLine(367) org.kframework.attributes.Location(Location(367,10,374,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule154LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortThreadCellMap{},SortMap{},SortId{},SortId{},SortId{},SortKItem{},SortInt{},SortScopeCell{},SortParamsCell{},SortFunctionsCell{},SortStoreCell{},SortTempCell{},SortOutCell{},SortEnvCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule154LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortThreadCellMap{},VarDotVar6:SortMap{},VarFuncId:SortId{},VarI1:SortId{},VarI2:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Var'Unds'14:SortFunctionsCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortTempCell{},Var'Unds'3:SortOutCell{},Var'Unds'4:SortEnvCell{},Var'Unds'5:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortLocal{}, SortKItem{}}(Lbllocal'LParUndsCommUndsRParUnds'KT-SYNTAX'Unds'Local'Unds'Id'Unds'Stmt{}(VarFuncId:SortId{},inj{SortIdAssigner{}, SortStmt{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},inj{SortId{}, SortAExp{}}(VarI2:SortId{}))))),VarDotVar2:SortK{})),Var'Unds'3:SortOutCell{},\and{SortFunctionsCell{}}(Lbl'-LT-'functions'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarFuncId:SortId{}),dotk{}())),Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarFuncId:SortId{}),dotk{}())),Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Var'Unds'2:SortTempCell{},Lbl'-LT-'localEnv'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI2:SortId{}),VarL:SortKItem{}),VarDotVar6:SortMap{})))),VarDotVar4:SortThreadCellMap{})),Var'Unds'14:SortFunctionsCell{}),Var'Unds'4:SortEnvCell{},\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar3:SortMap{})),Var'Unds'16:SortStoreCell{}),Var'Unds'5:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule154LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortThreadCellMap{},VarDotVar6:SortMap{},VarFuncId:SortId{},VarI1:SortId{},VarI2:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Var'Unds'14:SortFunctionsCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortTempCell{},Var'Unds'3:SortOutCell{},Var'Unds'4:SortEnvCell{},Var'Unds'5:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortLocal{}, SortKItem{}}(Lbllocal'LParUndsCommUndsRParUnds'KT-SYNTAX'Unds'Local'Unds'Id'Unds'Stmt{}(VarFuncId:SortId{},inj{SortIdAssigner{}, SortStmt{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},inj{SortInt{}, SortAExp{}}(VarV:SortInt{}))))),VarDotVar2:SortK{})),Var'Unds'3:SortOutCell{},Var'Unds'14:SortFunctionsCell{},Var'Unds'4:SortEnvCell{},Var'Unds'16:SortStoreCell{},Var'Unds'5:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("367"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(367,10,374,45)"), UNIQUE'Unds'ID{}("c8417bc6c3dd222d3ff36764c426774fd70107fc9b426cf9911acfed49aca6da")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Local,KItem}(`local(_,_)_KT-SYNTAX_Local_Id_Stmt`(FuncId,inj{IdAssigner,Stmt}(`var_=__KT-SYNTAX_IdAssigner_Id_IdExp`(I1,`_+__KT-SYNTAX_IdExp_Id_Id`(I2,I3)))))~>DotVar2),_3,`<functions>`(`_ThreadCellMap_`(`ThreadCellMapItem`(`<id>`(inj{Id,KItem}(FuncId)),`<thread>`(`<id>`(inj{Id,KItem}(FuncId)),_0,_1,_2,`<localEnv>`(`_Map_`(`_|->_`(inj{Id,KItem}(I2),L),DotVar6)))),DotVar4)) #as _14,_4,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar3)) #as _16,_5),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Local,KItem}(`local(_,_)_KT-SYNTAX_Local_Id_Stmt`(FuncId,inj{IdAssigner,Stmt}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_+__KT-SYNTAX_AExp_Int_AExp`(V,inj{Id,AExp}(I3))))))~>DotVar2),_3,_14,_4,_16,_5),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a58d977ce5a757dc966807b08b104e315835a28da005900c1367d8003385131d) contentStartColumn(10) contentStartLine(348) org.kframework.attributes.Location(Location(348,10,355,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule155LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortThreadCellMap{},SortMap{},SortId{},SortId{},SortId{},SortId{},SortKItem{},SortInt{},SortScopeCell{},SortParamsCell{},SortFunctionsCell{},SortStoreCell{},SortTempCell{},SortOutCell{},SortEnvCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule155LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortThreadCellMap{},VarDotVar6:SortMap{},VarFuncId:SortId{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Var'Unds'14:SortFunctionsCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortTempCell{},Var'Unds'3:SortOutCell{},Var'Unds'4:SortEnvCell{},Var'Unds'5:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortLocal{}, SortKItem{}}(Lbllocal'LParUndsCommUndsRParUnds'KT-SYNTAX'Unds'Local'Unds'Id'Unds'Stmt{}(VarFuncId:SortId{},inj{SortIdAssigner{}, SortStmt{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(VarI1:SortId{},Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'IdExp'Unds'Id'Unds'Id{}(VarI2:SortId{},VarI3:SortId{}))))),VarDotVar2:SortK{})),Var'Unds'3:SortOutCell{},\and{SortFunctionsCell{}}(Lbl'-LT-'functions'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarFuncId:SortId{}),dotk{}())),Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'id'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarFuncId:SortId{}),dotk{}())),Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Var'Unds'2:SortTempCell{},Lbl'-LT-'localEnv'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI2:SortId{}),VarL:SortKItem{}),VarDotVar6:SortMap{})))),VarDotVar4:SortThreadCellMap{})),Var'Unds'14:SortFunctionsCell{}),Var'Unds'4:SortEnvCell{},\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar3:SortMap{})),Var'Unds'16:SortStoreCell{}),Var'Unds'5:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule155LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortThreadCellMap{},VarDotVar6:SortMap{},VarFuncId:SortId{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Var'Unds'14:SortFunctionsCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortTempCell{},Var'Unds'3:SortOutCell{},Var'Unds'4:SortEnvCell{},Var'Unds'5:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortLocal{}, SortKItem{}}(Lbllocal'LParUndsCommUndsRParUnds'KT-SYNTAX'Unds'Local'Unds'Id'Unds'Stmt{}(VarFuncId:SortId{},inj{SortIdAssigner{}, SortStmt{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(VarV:SortInt{},inj{SortId{}, SortAExp{}}(VarI3:SortId{})))))),VarDotVar2:SortK{})),Var'Unds'3:SortOutCell{},Var'Unds'14:SortFunctionsCell{},Var'Unds'4:SortEnvCell{},Var'Unds'16:SortStoreCell{},Var'Unds'5:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("348"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(348,10,355,45)"), UNIQUE'Unds'ID{}("a58d977ce5a757dc966807b08b104e315835a28da005900c1367d8003385131d")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Local,KItem}(`local(_,_)_KT-SYNTAX_Local_Id_Stmt`(I,`___KT-SYNTAX_Stmt_Stmt_Stmt`(S1,S2)))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Local,KItem}(`local(_,_)_KT-SYNTAX_Local_Id_Stmt`(I,S1))~>inj{Local,KItem}(`local(_,_)_KT-SYNTAX_Local_Id_Stmt`(I,S2))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(666443758dcd72459b5c2b27916e8eb2a3ea4e8de3f29a26eb832c4eff175608) contentStartColumn(10) contentStartLine(138) org.kframework.attributes.Location(Location(138,10,138,79)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) structural()]
  alias rule156LHS{}(SortGeneratedCounterCell{},SortK{},SortId{},SortStmt{},SortStmt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule156LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarS1:SortStmt{},VarS2:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortLocal{}, SortKItem{}}(Lbllocal'LParUndsCommUndsRParUnds'KT-SYNTAX'Unds'Local'Unds'Id'Unds'Stmt{}(VarI:SortId{},Lbl'UndsUndsUnds'KT-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(VarS1:SortStmt{},VarS2:SortStmt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule156LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarS1:SortStmt{},VarS2:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortLocal{}, SortKItem{}}(Lbllocal'LParUndsCommUndsRParUnds'KT-SYNTAX'Unds'Local'Unds'Id'Unds'Stmt{}(VarI:SortId{},VarS1:SortStmt{})),kseq{}(inj{SortLocal{}, SortKItem{}}(Lbllocal'LParUndsCommUndsRParUnds'KT-SYNTAX'Unds'Local'Unds'Id'Unds'Stmt{}(VarI:SortId{},VarS2:SortStmt{})),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("138"), contentStartColumn{}("10"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(138,10,138,79)"), UNIQUE'Unds'ID{}("666443758dcd72459b5c2b27916e8eb2a3ea4e8de3f29a26eb832c4eff175608")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Print,KItem}(`print(_)_KT-SYNTAX_Print_IdList`(`.List{"_,__KT-SYNTAX_IdList_Id_IdList"}_IdList`(.KList)))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5150814b9917e8be49778dd16729583e87f301dfa6d5194ab4eff21fd1c955f6) contentStartColumn(10) contentStartLine(548) org.kframework.attributes.Location(Location(548,10,548,46)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule157LHS{}(SortGeneratedCounterCell{},SortK{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule157LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPrint{}, SortKItem{}}(Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'IdList{}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList'QuotRBraUnds'IdList{}())),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule157LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("548"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(548,10,548,46)"), UNIQUE'Unds'ID{}("5150814b9917e8be49778dd16729583e87f301dfa6d5194ab4eff21fd1c955f6")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Print,KItem}(`print(_)_KT-SYNTAX_Print_IdList`(`_,__KT-SYNTAX_IdList_Id_IdList`(P,Ps)))~>DotVar2),`<out>`(PSet),_0,_1,_2,_3),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Print,KItem}(`print(_)_KT-SYNTAX_Print_IdList`(Ps))~>DotVar2),`<out>`(`_Set_`(PSet,`SetItem`(inj{Id,KItem}(P)))),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(155c035bae9b0b85b09d342ac63bd3bfefce5f379eb43fcadacf8b6a90180a3c) contentStartColumn(10) contentStartLine(545) org.kframework.attributes.Location(Location(545,10,546,49)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule158LHS{}(SortGeneratedCounterCell{},SortK{},SortId{},SortSet{},SortIdList{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule158LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarP:SortId{},VarPSet:SortSet{},VarPs:SortIdList{},Var'Unds'0:SortFunctionsCell{},Var'Unds'1:SortEnvCell{},Var'Unds'2:SortStoreCell{},Var'Unds'3:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPrint{}, SortKItem{}}(Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'IdList{}(Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IdList'Unds'Id'Unds'IdList{}(VarP:SortId{},VarPs:SortIdList{}))),VarDotVar2:SortK{})),Lbl'-LT-'out'-GT-'{}(VarPSet:SortSet{}),Var'Unds'0:SortFunctionsCell{},Var'Unds'1:SortEnvCell{},Var'Unds'2:SortStoreCell{},Var'Unds'3:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule158LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarP:SortId{},VarPSet:SortSet{},VarPs:SortIdList{},Var'Unds'0:SortFunctionsCell{},Var'Unds'1:SortEnvCell{},Var'Unds'2:SortStoreCell{},Var'Unds'3:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPrint{}, SortKItem{}}(Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'IdList{}(VarPs:SortIdList{})),VarDotVar2:SortK{})),Lbl'-LT-'out'-GT-'{}(Lbl'Unds'Set'Unds'{}(VarPSet:SortSet{},LblSetItem{}(inj{SortId{}, SortKItem{}}(VarP:SortId{})))),Var'Unds'0:SortFunctionsCell{},Var'Unds'1:SortEnvCell{},Var'Unds'2:SortStoreCell{},Var'Unds'3:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("545"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(545,10,546,49)"), UNIQUE'Unds'ID{}("155c035bae9b0b85b09d342ac63bd3bfefce5f379eb43fcadacf8b6a90180a3c")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Print,KItem}(`print(_)_KT-SYNTAX_Print_IntList`(`.List{"_,__KT-SYNTAX_IntList_Int_IntList"}_IntList`(.KList)))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e8ffe94b18d3168338f122471baeb1c6506daf1b4b126a6c14513684d73eb6d6) contentStartColumn(10) contentStartLine(538) org.kframework.attributes.Location(Location(538,10,538,47)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule159LHS{}(SortGeneratedCounterCell{},SortK{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule159LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPrint{}, SortKItem{}}(Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'IntList{}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'IntList'Unds'Int'Unds'IntList'QuotRBraUnds'IntList{}())),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule159LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("538"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(538,10,538,47)"), UNIQUE'Unds'ID{}("e8ffe94b18d3168338f122471baeb1c6506daf1b4b126a6c14513684d73eb6d6")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Print,KItem}(`print(_)_KT-SYNTAX_Print_IntList`(`_,__KT-SYNTAX_IntList_Int_IntList`(P,Ps)))~>DotVar2),`<out>`(PSet),_0,_1,_2,_3),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Print,KItem}(`print(_)_KT-SYNTAX_Print_IntList`(Ps))~>DotVar2),`<out>`(`_Set_`(PSet,`SetItem`(inj{Int,KItem}(P)))),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9598cca1b510001436485b221d23cb462c7bc80badbe419664c371444fa0769a) contentStartColumn(10) contentStartLine(535) org.kframework.attributes.Location(Location(535,10,536,49)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule160LHS{}(SortGeneratedCounterCell{},SortK{},SortInt{},SortSet{},SortIntList{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule160LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarP:SortInt{},VarPSet:SortSet{},VarPs:SortIntList{},Var'Unds'0:SortFunctionsCell{},Var'Unds'1:SortEnvCell{},Var'Unds'2:SortStoreCell{},Var'Unds'3:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPrint{}, SortKItem{}}(Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'IntList{}(Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'IntList'Unds'Int'Unds'IntList{}(VarP:SortInt{},VarPs:SortIntList{}))),VarDotVar2:SortK{})),Lbl'-LT-'out'-GT-'{}(VarPSet:SortSet{}),Var'Unds'0:SortFunctionsCell{},Var'Unds'1:SortEnvCell{},Var'Unds'2:SortStoreCell{},Var'Unds'3:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule160LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarP:SortInt{},VarPSet:SortSet{},VarPs:SortIntList{},Var'Unds'0:SortFunctionsCell{},Var'Unds'1:SortEnvCell{},Var'Unds'2:SortStoreCell{},Var'Unds'3:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPrint{}, SortKItem{}}(Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'IntList{}(VarPs:SortIntList{})),VarDotVar2:SortK{})),Lbl'-LT-'out'-GT-'{}(Lbl'Unds'Set'Unds'{}(VarPSet:SortSet{},LblSetItem{}(inj{SortInt{}, SortKItem{}}(VarP:SortInt{})))),Var'Unds'0:SortFunctionsCell{},Var'Unds'1:SortEnvCell{},Var'Unds'2:SortStoreCell{},Var'Unds'3:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("535"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(535,10,536,49)"), UNIQUE'Unds'ID{}("9598cca1b510001436485b221d23cb462c7bc80badbe419664c371444fa0769a")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Print,KItem}(`print(_)_KT-SYNTAX_Print_StringList`(`.List{"_,__KT-SYNTAX_StringList_String_StringList"}_StringList`(.KList)))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e93655a503b495bd3e8356ff847c6e7e108d3255ccb30a76de71e3fe3b7b633a) contentStartColumn(10) contentStartLine(543) org.kframework.attributes.Location(Location(543,10,543,50)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule161LHS{}(SortGeneratedCounterCell{},SortK{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule161LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPrint{}, SortKItem{}}(Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'StringList{}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KT-SYNTAX'Unds'StringList'Unds'String'Unds'StringList'QuotRBraUnds'StringList{}())),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule161LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("543"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(543,10,543,50)"), UNIQUE'Unds'ID{}("e93655a503b495bd3e8356ff847c6e7e108d3255ccb30a76de71e3fe3b7b633a")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Print,KItem}(`print(_)_KT-SYNTAX_Print_StringList`(`_,__KT-SYNTAX_StringList_String_StringList`(P,Ps)))~>DotVar2),`<out>`(PSet),_0,_1,_2,_3),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Print,KItem}(`print(_)_KT-SYNTAX_Print_StringList`(Ps))~>DotVar2),`<out>`(`_Set_`(PSet,`SetItem`(inj{String,KItem}(P)))),_0,_1,_2,_3),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cbf1014fe73fdf6caae9d8b400facc7614afafe7590bd550765d17847ea0dbb5) contentStartColumn(10) contentStartLine(540) org.kframework.attributes.Location(Location(540,10,541,49)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule162LHS{}(SortGeneratedCounterCell{},SortK{},SortString{},SortSet{},SortStringList{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule162LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarP:SortString{},VarPSet:SortSet{},VarPs:SortStringList{},Var'Unds'0:SortFunctionsCell{},Var'Unds'1:SortEnvCell{},Var'Unds'2:SortStoreCell{},Var'Unds'3:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPrint{}, SortKItem{}}(Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'StringList{}(Lbl'UndsCommUndsUnds'KT-SYNTAX'Unds'StringList'Unds'String'Unds'StringList{}(VarP:SortString{},VarPs:SortStringList{}))),VarDotVar2:SortK{})),Lbl'-LT-'out'-GT-'{}(VarPSet:SortSet{}),Var'Unds'0:SortFunctionsCell{},Var'Unds'1:SortEnvCell{},Var'Unds'2:SortStoreCell{},Var'Unds'3:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule162LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarP:SortString{},VarPSet:SortSet{},VarPs:SortStringList{},Var'Unds'0:SortFunctionsCell{},Var'Unds'1:SortEnvCell{},Var'Unds'2:SortStoreCell{},Var'Unds'3:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPrint{}, SortKItem{}}(Lblprint'LParUndsRParUnds'KT-SYNTAX'Unds'Print'Unds'StringList{}(VarPs:SortStringList{})),VarDotVar2:SortK{})),Lbl'-LT-'out'-GT-'{}(Lbl'Unds'Set'Unds'{}(VarPSet:SortSet{},LblSetItem{}(inj{SortString{}, SortKItem{}}(VarP:SortString{})))),Var'Unds'0:SortFunctionsCell{},Var'Unds'1:SortEnvCell{},Var'Unds'2:SortStoreCell{},Var'Unds'3:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("540"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(540,10,541,49)"), UNIQUE'Unds'ID{}("cbf1014fe73fdf6caae9d8b400facc7614afafe7590bd550765d17847ea0dbb5")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`val_=__KT-SYNTAX_IdAssigner_Id_AExp`(I,inj{String,AExp}(V)))~>DotVar2),_0,_1,`<env>`(MEnv),`<store>`(MStore),`<loc>`(L)),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_0,_1,`<env>`(`_Map_`(MEnv,`_|->_`(inj{Id,KItem}(I),inj{Int,KItem}(L)))),`<store>`(`_Map_`(MStore,`_|->_`(inj{Int,KItem}(L),inj{String,KItem}(V)))),`<loc>`(`_+Int_`(L,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9af09960b281f61eda7a59d56884e08810a706291831f8a5b682c397cded3223) contentStartColumn(10) contentStartLine(438) org.kframework.attributes.Location(Location(438,10,441,39)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule163LHS{}(SortGeneratedCounterCell{},SortK{},SortId{},SortInt{},SortMap{},SortMap{},SortString{},SortOutCell{},SortFunctionsCell{}) : SortGeneratedTopCell{}
  where rule163LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI:SortId{},inj{SortString{}, SortAExp{}}(VarV:SortString{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(VarMEnv:SortMap{}),Lbl'-LT-'store'-GT-'{}(VarMStore:SortMap{}),Lbl'-LT-'loc'-GT-'{}(VarL:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule163LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMEnv:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{})))),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMStore:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortString{}, SortKItem{}}(VarV:SortString{})))),Lbl'-LT-'loc'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("438"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(438,10,441,39)"), UNIQUE'Unds'ID{}("9af09960b281f61eda7a59d56884e08810a706291831f8a5b682c397cded3223")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`val_=__KT-SYNTAX_IdAssigner_Id_AExp`(I,inj{Int,AExp}(V)))~>DotVar2),_0,_1,`<env>`(MEnv),`<store>`(MStore),`<loc>`(L)),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_0,_1,`<env>`(`_Map_`(MEnv,`_|->_`(inj{Id,KItem}(I),inj{Int,KItem}(L)))),`<store>`(`_Map_`(MStore,`_|->_`(inj{Int,KItem}(L),inj{Int,KItem}(V)))),`<loc>`(`_+Int_`(L,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b13163d7f2f25297d6bcfb35f583ad298532635a21a166e5c7fbcbdd864260e2) contentStartColumn(10) contentStartLine(433) org.kframework.attributes.Location(Location(433,10,436,39)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule164LHS{}(SortGeneratedCounterCell{},SortK{},SortId{},SortInt{},SortMap{},SortMap{},SortInt{},SortOutCell{},SortFunctionsCell{}) : SortGeneratedTopCell{}
  where rule164LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI:SortId{},inj{SortInt{}, SortAExp{}}(VarV:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(VarMEnv:SortMap{}),Lbl'-LT-'store'-GT-'{}(VarMStore:SortMap{}),Lbl'-LT-'loc'-GT-'{}(VarL:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule164LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMEnv:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{})))),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMStore:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortInt{}, SortKItem{}}(VarV:SortInt{})))),Lbl'-LT-'loc'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("433"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(433,10,436,39)"), UNIQUE'Unds'ID{}("b13163d7f2f25297d6bcfb35f583ad298532635a21a166e5c7fbcbdd864260e2")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`val_=__KT-SYNTAX_IdAssigner_Id_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezerval_=__KT-SYNTAX_IdAssigner_Id_AExp0_`(inj{Id,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(45bb588b1a22a4dc050abe6d572022a64ad372d86352e7fd6da528d11e8bfc3d) heat() org.kframework.attributes.Location(Location(70,23,70,51)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict(2)]
  alias rule165LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortId{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule165LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarK0:SortId{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule165LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(70,23,70,51)"), UNIQUE'Unds'ID{}("45bb588b1a22a4dc050abe6d572022a64ad372d86352e7fd6da528d11e8bfc3d")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`val_=__KT-SYNTAX_IdAssigner_Id_BExp`(I,inj{Bool,BExp}(V)))~>DotVar2),_0,_1,`<env>`(MEnv),`<store>`(MStore),`<loc>`(L)),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_0,_1,`<env>`(`_Map_`(MEnv,`_|->_`(inj{Id,KItem}(I),inj{Int,KItem}(L)))),`<store>`(`_Map_`(MStore,`_|->_`(inj{Int,KItem}(L),inj{Bool,KItem}(V)))),`<loc>`(`_+Int_`(L,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(54e2f51c4c58eb7e34e88a64286c83f5fee147629ab37746263f9b4ccb6d5c7a) contentStartColumn(10) contentStartLine(443) org.kframework.attributes.Location(Location(443,10,446,39)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule166LHS{}(SortGeneratedCounterCell{},SortK{},SortId{},SortInt{},SortMap{},SortMap{},SortBool{},SortOutCell{},SortFunctionsCell{}) : SortGeneratedTopCell{}
  where rule166LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortBool{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(VarI:SortId{},inj{SortBool{}, SortBExp{}}(VarV:SortBool{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(VarMEnv:SortMap{}),Lbl'-LT-'store'-GT-'{}(VarMStore:SortMap{}),Lbl'-LT-'loc'-GT-'{}(VarL:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule166LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortBool{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMEnv:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{})))),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMStore:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortBool{}, SortKItem{}}(VarV:SortBool{})))),Lbl'-LT-'loc'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("443"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(443,10,446,39)"), UNIQUE'Unds'ID{}("54e2f51c4c58eb7e34e88a64286c83f5fee147629ab37746263f9b4ccb6d5c7a")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`val_=__KT-SYNTAX_IdAssigner_Id_BExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(HOLE)~>`#freezerval_=__KT-SYNTAX_IdAssigner_Id_BExp0_`(inj{Id,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{BExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(4c0b1f82d9ab80b72ce96d04be49acbb8e787d2f3cc73def7ab5eb4cfd1d20b3) heat() org.kframework.attributes.Location(Location(71,23,71,51)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict(2)]
  alias rule167LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortId{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule167LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(VarK0:SortId{},VarHOLE:SortBExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule167LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),kseq{}(Lbl'Hash'freezerval'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(71,23,71,51)"), UNIQUE'Unds'ID{}("4c0b1f82d9ab80b72ce96d04be49acbb8e787d2f3cc73def7ab5eb4cfd1d20b3")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I,inj{Int,AExp}(V)))~>DotVar2),_0,_1,`<env>`(MEnv),`<store>`(MStore),`<loc>`(L)),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_0,_1,`<env>`(`_Map_`(MEnv,`_|->_`(inj{Id,KItem}(I),inj{Int,KItem}(L)))),`<store>`(`_Map_`(MStore,`_|->_`(inj{Int,KItem}(L),inj{Int,KItem}(V)))),`<loc>`(`_+Int_`(L,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c679dff31fe068cf0f84c2cf6c45c38426ff7f9d318220f968ffedb62dc3511f) contentStartColumn(10) contentStartLine(418) org.kframework.attributes.Location(Location(418,10,421,39)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule168LHS{}(SortGeneratedCounterCell{},SortK{},SortId{},SortInt{},SortMap{},SortMap{},SortInt{},SortOutCell{},SortFunctionsCell{}) : SortGeneratedTopCell{}
  where rule168LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI:SortId{},inj{SortInt{}, SortAExp{}}(VarV:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(VarMEnv:SortMap{}),Lbl'-LT-'store'-GT-'{}(VarMStore:SortMap{}),Lbl'-LT-'loc'-GT-'{}(VarL:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule168LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMEnv:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{})))),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMStore:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortInt{}, SortKItem{}}(VarV:SortInt{})))),Lbl'-LT-'loc'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("418"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(418,10,421,39)"), UNIQUE'Unds'ID{}("c679dff31fe068cf0f84c2cf6c45c38426ff7f9d318220f968ffedb62dc3511f")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I,inj{String,AExp}(V)))~>DotVar2),_0,_1,`<env>`(MEnv),`<store>`(MStore),`<loc>`(L)),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_0,_1,`<env>`(`_Map_`(MEnv,`_|->_`(inj{Id,KItem}(I),inj{Int,KItem}(L)))),`<store>`(`_Map_`(MStore,`_|->_`(inj{Int,KItem}(L),inj{String,KItem}(V)))),`<loc>`(`_+Int_`(L,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(31f66e817bc8e940f3e8b387faca3e3832ae7d98abddd7631f9701fac569dcad) contentStartColumn(10) contentStartLine(423) org.kframework.attributes.Location(Location(423,10,426,39)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule169LHS{}(SortGeneratedCounterCell{},SortK{},SortId{},SortInt{},SortMap{},SortMap{},SortString{},SortOutCell{},SortFunctionsCell{}) : SortGeneratedTopCell{}
  where rule169LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI:SortId{},inj{SortString{}, SortAExp{}}(VarV:SortString{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(VarMEnv:SortMap{}),Lbl'-LT-'store'-GT-'{}(VarMStore:SortMap{}),Lbl'-LT-'loc'-GT-'{}(VarL:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule169LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMEnv:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{})))),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMStore:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortString{}, SortKItem{}}(VarV:SortString{})))),Lbl'-LT-'loc'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("423"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(423,10,426,39)"), UNIQUE'Unds'ID{}("31f66e817bc8e940f3e8b387faca3e3832ae7d98abddd7631f9701fac569dcad")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_*__KT-SYNTAX_AExp_AExp_AExp`(inj{Int,AExp}(I2) #as _9,inj{Id,AExp}(I3))))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I3),L),DotVar3)) #as _11,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)) #as _13,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_*__KT-SYNTAX_AExp_AExp_AExp`(_9,inj{Int,AExp}(V))))~>DotVar2),_0,_1,_11,_13,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cb23c51fbcf36d117a86ee675eddf7d2c15e7322c18b0827c866f5cc1383f9bd) contentStartColumn(10) contentStartLine(315) org.kframework.attributes.Location(Location(315,10,317,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule170LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortInt{},SortId{},SortKItem{},SortInt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortAExp{}) : SortGeneratedTopCell{}
  where rule170LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortAExp{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}}(inj{SortInt{}, SortAExp{}}(VarI2:SortInt{}),Var'Unds'9:SortAExp{}),inj{SortId{}, SortAExp{}}(VarI3:SortId{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI3:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'11:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'13:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule170LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortAExp{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(Var'Unds'9:SortAExp{},inj{SortInt{}, SortAExp{}}(VarV:SortInt{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("315"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(315,10,317,45)"), UNIQUE'Unds'ID{}("cb23c51fbcf36d117a86ee675eddf7d2c15e7322c18b0827c866f5cc1383f9bd")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_*__KT-SYNTAX_AExp_AExp_AExp`(inj{Id,AExp}(I2),inj{Id,AExp}(I3) #as _10)))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I2),L),DotVar3)) #as _11,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)) #as _13,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_*__KT-SYNTAX_AExp_AExp_AExp`(inj{Int,AExp}(V),_10)))~>DotVar2),_0,_1,_11,_13,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(575d6b2a8700d3bb34a59c0347b91af482971ba46bb6e9bb48b0884d6fc627d9) contentStartColumn(10) contentStartLine(311) org.kframework.attributes.Location(Location(311,10,313,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule171LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortId{},SortId{},SortKItem{},SortInt{},SortOutCell{},SortFunctionsCell{},SortAExp{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule171LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortAExp{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortId{}, SortAExp{}}(VarI2:SortId{}),\and{SortAExp{}}(inj{SortId{}, SortAExp{}}(VarI3:SortId{}),Var'Unds'10:SortAExp{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI2:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'11:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'13:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule171LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortAExp{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsStarUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortInt{}, SortAExp{}}(VarV:SortInt{}),Var'Unds'10:SortAExp{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("311"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(311,10,313,45)"), UNIQUE'Unds'ID{}("575d6b2a8700d3bb34a59c0347b91af482971ba46bb6e9bb48b0884d6fc627d9")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_+__KT-SYNTAX_AExp_Int_AExp`(I2,inj{Id,AExp}(I3))))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I3),L),DotVar3)) #as _10,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)) #as _12,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_+__KT-SYNTAX_AExp_Int_AExp`(I2,inj{Int,AExp}(V))))~>DotVar2),_0,_1,_10,_12,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1f8348b33896d215f121d5c4666d686ab72866390a4f35c68962331d6fddcd8a) contentStartColumn(10) contentStartLine(299) org.kframework.attributes.Location(Location(299,10,301,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule172LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortInt{},SortId{},SortKItem{},SortInt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule172LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortEnvCell{},Var'Unds'12:SortStoreCell{},Var'Unds'2:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(VarI2:SortInt{},inj{SortId{}, SortAExp{}}(VarI3:SortId{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI3:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'10:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'12:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule172LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortEnvCell{},Var'Unds'12:SortStoreCell{},Var'Unds'2:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(VarI2:SortInt{},inj{SortInt{}, SortAExp{}}(VarV:SortInt{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortEnvCell{},Var'Unds'12:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("299"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(299,10,301,45)"), UNIQUE'Unds'ID{}("1f8348b33896d215f121d5c4666d686ab72866390a4f35c68962331d6fddcd8a")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_+__KT-SYNTAX_AExp_String_AExp`(I2,inj{Id,AExp}(I3))))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I3),L),DotVar3)) #as _10,`<store>`(`_Map_`(`_|->_`(L,inj{String,KItem}(V)),DotVar4)) #as _12,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_+__KT-SYNTAX_AExp_String_AExp`(I2,inj{String,AExp}(V))))~>DotVar2),_0,_1,_10,_12,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e1b115e0f09fec6680f8019e9fc0187676ef8a5758566de7911b7e3e1b8ef2ac) contentStartColumn(10) contentStartLine(331) org.kframework.attributes.Location(Location(331,10,333,48)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule173LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortString{},SortId{},SortKItem{},SortString{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule173LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortString{},VarI3:SortId{},VarL:SortKItem{},VarV:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortEnvCell{},Var'Unds'12:SortStoreCell{},Var'Unds'2:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp{}(VarI2:SortString{},inj{SortId{}, SortAExp{}}(VarI3:SortId{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI3:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'10:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortString{}, SortKItem{}}(VarV:SortString{})),VarDotVar4:SortMap{})),Var'Unds'12:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule173LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortString{},VarI3:SortId{},VarL:SortKItem{},VarV:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortEnvCell{},Var'Unds'12:SortStoreCell{},Var'Unds'2:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp{}(VarI2:SortString{},inj{SortString{}, SortAExp{}}(VarV:SortString{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortEnvCell{},Var'Unds'12:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("331"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(331,10,333,48)"), UNIQUE'Unds'ID{}("e1b115e0f09fec6680f8019e9fc0187676ef8a5758566de7911b7e3e1b8ef2ac")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_-__KT-SYNTAX_AExp_AExp_AExp`(inj{Int,AExp}(I2) #as _9,inj{Id,AExp}(I3))))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I3),L),DotVar3)) #as _11,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)) #as _13,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_-__KT-SYNTAX_AExp_AExp_AExp`(_9,inj{Int,AExp}(V))))~>DotVar2),_0,_1,_11,_13,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3260d98b50ebe8de8f08eab3ef47cc82e6844307cb2ef4f060caefbf2c867638) contentStartColumn(10) contentStartLine(307) org.kframework.attributes.Location(Location(307,10,309,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule174LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortInt{},SortId{},SortKItem{},SortInt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortAExp{}) : SortGeneratedTopCell{}
  where rule174LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortAExp{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}}(inj{SortInt{}, SortAExp{}}(VarI2:SortInt{}),Var'Unds'9:SortAExp{}),inj{SortId{}, SortAExp{}}(VarI3:SortId{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI3:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'11:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'13:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule174LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortAExp{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(Var'Unds'9:SortAExp{},inj{SortInt{}, SortAExp{}}(VarV:SortInt{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("307"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(307,10,309,45)"), UNIQUE'Unds'ID{}("3260d98b50ebe8de8f08eab3ef47cc82e6844307cb2ef4f060caefbf2c867638")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_-__KT-SYNTAX_AExp_AExp_AExp`(inj{Id,AExp}(I2),inj{Id,AExp}(I3) #as _10)))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I2),L),DotVar3)) #as _11,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)) #as _13,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_-__KT-SYNTAX_AExp_AExp_AExp`(inj{Int,AExp}(V),_10)))~>DotVar2),_0,_1,_11,_13,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c9c4e26ed5f02e33dec7abaf6f0c956d9dfead0879887b31a112c48181fb054e) contentStartColumn(10) contentStartLine(303) org.kframework.attributes.Location(Location(303,10,305,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule175LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortId{},SortId{},SortKItem{},SortInt{},SortOutCell{},SortFunctionsCell{},SortAExp{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule175LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortAExp{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortId{}, SortAExp{}}(VarI2:SortId{}),\and{SortAExp{}}(inj{SortId{}, SortAExp{}}(VarI3:SortId{}),Var'Unds'10:SortAExp{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI2:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'11:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'13:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule175LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortAExp{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'Unds'-'UndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortInt{}, SortAExp{}}(VarV:SortInt{}),Var'Unds'10:SortAExp{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("303"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(303,10,305,45)"), UNIQUE'Unds'ID{}("c9c4e26ed5f02e33dec7abaf6f0c956d9dfead0879887b31a112c48181fb054e")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_/__KT-SYNTAX_AExp_AExp_AExp`(inj{Int,AExp}(I2) #as _9,inj{Id,AExp}(I3))))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I3),L),DotVar3)) #as _11,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)) #as _13,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_/__KT-SYNTAX_AExp_AExp_AExp`(_9,inj{Int,AExp}(V))))~>DotVar2),_0,_1,_11,_13,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6a7c55cdb65fac0670759da5a3e9c65b7c98a2788842e7700c934a9ea6e379e2) contentStartColumn(10) contentStartLine(323) org.kframework.attributes.Location(Location(323,10,325,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule176LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortInt{},SortId{},SortKItem{},SortInt{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{},SortAExp{}) : SortGeneratedTopCell{}
  where rule176LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortAExp{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}}(inj{SortInt{}, SortAExp{}}(VarI2:SortInt{}),Var'Unds'9:SortAExp{}),inj{SortId{}, SortAExp{}}(VarI3:SortId{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI3:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'11:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'13:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule176LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortAExp{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(Var'Unds'9:SortAExp{},inj{SortInt{}, SortAExp{}}(VarV:SortInt{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("323"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(323,10,325,45)"), UNIQUE'Unds'ID{}("6a7c55cdb65fac0670759da5a3e9c65b7c98a2788842e7700c934a9ea6e379e2")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_/__KT-SYNTAX_AExp_AExp_AExp`(inj{Id,AExp}(I2),inj{Id,AExp}(I3) #as _10)))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I2),L),DotVar3)) #as _11,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)) #as _13,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_/__KT-SYNTAX_AExp_AExp_AExp`(inj{Int,AExp}(V),_10)))~>DotVar2),_0,_1,_11,_13,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(594b15009dd3c300b2f478c14e3c2f38e122e141be62a611d70e56d339fcaf51) contentStartColumn(10) contentStartLine(319) org.kframework.attributes.Location(Location(319,10,321,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule177LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortId{},SortId{},SortKItem{},SortInt{},SortOutCell{},SortFunctionsCell{},SortAExp{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule177LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortAExp{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortId{}, SortAExp{}}(VarI2:SortId{}),\and{SortAExp{}}(inj{SortId{}, SortAExp{}}(VarI3:SortId{}),Var'Unds'10:SortAExp{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI2:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'11:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'13:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule177LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortAExp{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsSlshUndsUnds'KT-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortInt{}, SortAExp{}}(VarV:SortInt{}),Var'Unds'10:SortAExp{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("319"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(319,10,321,45)"), UNIQUE'Unds'ID{}("594b15009dd3c300b2f478c14e3c2f38e122e141be62a611d70e56d339fcaf51")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,inj{Id,AExp}(I2)))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I2),L),DotVar3)) #as _9,`<store>`(`_Map_`(`_|->_`(L,inj{String,KItem}(V)),DotVar4)) #as _11,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,inj{String,AExp}(V)))~>DotVar2),_0,_1,_9,_11,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(94b1a38cc70117c825d49051c25edd6338fcdff85a6f2574e49418320d983773) contentStartColumn(10) contentStartLine(475) org.kframework.attributes.Location(Location(475,10,477,48)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule178LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortId{},SortKItem{},SortString{},SortOutCell{},SortFunctionsCell{},SortStoreCell{},SortLocCell{},SortEnvCell{}) : SortGeneratedTopCell{}
  where rule178LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarL:SortKItem{},VarV:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortEnvCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},inj{SortId{}, SortAExp{}}(VarI2:SortId{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI2:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'9:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortString{}, SortKItem{}}(VarV:SortString{})),VarDotVar4:SortMap{})),Var'Unds'11:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule178LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarL:SortKItem{},VarV:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortEnvCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},inj{SortString{}, SortAExp{}}(VarV:SortString{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'9:SortEnvCell{},Var'Unds'11:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("475"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(475,10,477,48)"), UNIQUE'Unds'ID{}("94b1a38cc70117c825d49051c25edd6338fcdff85a6f2574e49418320d983773")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,inj{Id,AExp}(I2)))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I2),L),DotVar3)) #as _9,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)) #as _11,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,inj{Int,AExp}(V)))~>DotVar2),_0,_1,_9,_11,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(685a148b98c7892e01a493d240bb441940e32987ede5a07a9a35a21318242559) contentStartColumn(10) contentStartLine(471) org.kframework.attributes.Location(Location(471,10,473,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule179LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortId{},SortKItem{},SortInt{},SortOutCell{},SortFunctionsCell{},SortStoreCell{},SortLocCell{},SortEnvCell{}) : SortGeneratedTopCell{}
  where rule179LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortEnvCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},inj{SortId{}, SortAExp{}}(VarI2:SortId{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI2:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'9:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'11:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule179LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortEnvCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},inj{SortInt{}, SortAExp{}}(VarV:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'9:SortEnvCell{},Var'Unds'11:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("471"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(471,10,473,45)"), UNIQUE'Unds'ID{}("685a148b98c7892e01a493d240bb441940e32987ede5a07a9a35a21318242559")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezervar_=__KT-SYNTAX_IdAssigner_Id_AExp0_`(inj{Id,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(29c7ed5582f67f740715c8a50cb595c1080cfdeb955673097cdc041ce8f4ba5c) heat() org.kframework.attributes.Location(Location(67,23,67,51)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict(2)]
  alias rule180LHS{}(SortGeneratedCounterCell{},SortK{},SortAExp{},SortId{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule180LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarK0:SortId{},VarHOLE:SortAExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule180LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp0'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(67,23,67,51)"), UNIQUE'Unds'ID{}("29c7ed5582f67f740715c8a50cb595c1080cfdeb955673097cdc041ce8f4ba5c")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_BExp`(I,inj{Bool,BExp}(V)))~>DotVar2),_0,_1,`<env>`(MEnv),`<store>`(MStore),`<loc>`(L)),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Skip,KItem}(`Skip_KT-SYNTAX_Skip`(.KList))~>DotVar2),_0,_1,`<env>`(`_Map_`(MEnv,`_|->_`(inj{Id,KItem}(I),inj{Int,KItem}(L)))),`<store>`(`_Map_`(MStore,`_|->_`(inj{Int,KItem}(L),inj{Bool,KItem}(V)))),`<loc>`(`_+Int_`(L,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a4d455e3c6448aa42c6806cf23c2661a5e96c3f071cb140ad2a86484b9a65f2a) contentStartColumn(10) contentStartLine(428) org.kframework.attributes.Location(Location(428,10,431,39)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule181LHS{}(SortGeneratedCounterCell{},SortK{},SortId{},SortInt{},SortMap{},SortMap{},SortBool{},SortOutCell{},SortFunctionsCell{}) : SortGeneratedTopCell{}
  where rule181LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortBool{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(VarI:SortId{},inj{SortBool{}, SortBExp{}}(VarV:SortBool{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(VarMEnv:SortMap{}),Lbl'-LT-'store'-GT-'{}(VarMStore:SortMap{}),Lbl'-LT-'loc'-GT-'{}(VarL:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule181LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortBool{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortSkip{}, SortKItem{}}(LblSkip'Unds'KT-SYNTAX'Unds'Skip{}()),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMEnv:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{})))),Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarMStore:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortBool{}, SortKItem{}}(VarV:SortBool{})))),Lbl'-LT-'loc'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("428"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(428,10,431,39)"), UNIQUE'Unds'ID{}("a4d455e3c6448aa42c6806cf23c2661a5e96c3f071cb140ad2a86484b9a65f2a")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_BExp`(K0,HOLE))~>DotVar2),_0,_1,_2,_3,_4),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{BExp,KItem}(HOLE)~>`#freezervar_=__KT-SYNTAX_IdAssigner_Id_BExp0_`(inj{Id,KItem}(K0))~>DotVar2),_0,_1,_2,_3,_4),DotVar0) requires `_andBool_`(`_andBool_`(#token("true","Bool"),#token("true","Bool")),`notBool_`(isKResult(inj{BExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(4f3337b8399e5c080c0fdb790c5872be2bd263f3f88188d4ec5a0252e314a302) heat() org.kframework.attributes.Location(Location(68,23,68,51)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) strict(2)]
  alias rule182LHS{}(SortGeneratedCounterCell{},SortK{},SortBExp{},SortId{},SortOutCell{},SortFunctionsCell{},SortEnvCell{},SortStoreCell{},SortLocCell{}) : SortGeneratedTopCell{}
  where rule182LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp{}(VarK0:SortId{},VarHOLE:SortBExp{})),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule182LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarHOLE:SortBExp{}),kseq{}(Lbl'Hash'freezervar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'BExp0'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(68,23,68,51)"), UNIQUE'Unds'ID{}("4f3337b8399e5c080c0fdb790c5872be2bd263f3f88188d4ec5a0252e314a302")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_IdExp`(I1,`_+__KT-SYNTAX_IdExp_Id_Id`(I2,I3)))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I2),L),DotVar3)) #as _9,`<store>`(`_Map_`(`_|->_`(L,inj{Int,KItem}(V)),DotVar4)) #as _11,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_+__KT-SYNTAX_AExp_Int_AExp`(V,inj{Id,AExp}(I3))))~>DotVar2),_0,_1,_9,_11,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c8b78092baeb7f0dcddce66a24b198f935a9820b3e05aab557d223dcb8cd4261) contentStartColumn(10) contentStartLine(295) org.kframework.attributes.Location(Location(295,10,297,45)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule183LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortId{},SortId{},SortKItem{},SortInt{},SortOutCell{},SortFunctionsCell{},SortStoreCell{},SortLocCell{},SortEnvCell{}) : SortGeneratedTopCell{}
  where rule183LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortEnvCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(VarI1:SortId{},Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'IdExp'Unds'Id'Unds'Id{}(VarI2:SortId{},VarI3:SortId{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI2:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'9:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortInt{}, SortKItem{}}(VarV:SortInt{})),VarDotVar4:SortMap{})),Var'Unds'11:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule183LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortEnvCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'Int'Unds'AExp{}(VarV:SortInt{},inj{SortId{}, SortAExp{}}(VarI3:SortId{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'9:SortEnvCell{},Var'Unds'11:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("295"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(295,10,297,45)"), UNIQUE'Unds'ID{}("c8b78092baeb7f0dcddce66a24b198f935a9820b3e05aab557d223dcb8cd4261")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_IdExp`(I1,`_+__KT-SYNTAX_IdExp_Id_Id`(I2,I3)))~>DotVar2),_0,_1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(I2),L),DotVar3)) #as _9,`<store>`(`_Map_`(`_|->_`(L,inj{String,KItem}(V)),DotVar4)) #as _11,_2),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{IdAssigner,KItem}(`var_=__KT-SYNTAX_IdAssigner_Id_AExp`(I1,`_+__KT-SYNTAX_AExp_String_AExp`(V,inj{Id,AExp}(I3))))~>DotVar2),_0,_1,_9,_11,_2),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(079bda190e32ff0ff7ae422390b5b5de7b0abc2d5ce332aa66349e6f169425bf) contentStartColumn(10) contentStartLine(327) org.kframework.attributes.Location(Location(327,10,329,48)) org.kframework.attributes.Source(Source(/workspace/kt/./kt.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  alias rule184LHS{}(SortGeneratedCounterCell{},SortK{},SortMap{},SortMap{},SortId{},SortId{},SortId{},SortKItem{},SortString{},SortOutCell{},SortFunctionsCell{},SortStoreCell{},SortLocCell{},SortEnvCell{}) : SortGeneratedTopCell{}
  where rule184LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortEnvCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'IdExp{}(VarI1:SortId{},Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'IdExp'Unds'Id'Unds'Id{}(VarI2:SortId{},VarI3:SortId{}))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},\and{SortEnvCell{}}(Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarI2:SortId{}),VarL:SortKItem{}),VarDotVar3:SortMap{})),Var'Unds'9:SortEnvCell{}),\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortString{}, SortKItem{}}(VarV:SortString{})),VarDotVar4:SortMap{})),Var'Unds'11:SortStoreCell{}),Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule184LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortEnvCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Lblvar'UndsEqlsUndsUnds'KT-SYNTAX'Unds'IdAssigner'Unds'Id'Unds'AExp{}(VarI1:SortId{},Lbl'UndsPlusUndsUnds'KT-SYNTAX'Unds'AExp'Unds'String'Unds'AExp{}(VarV:SortString{},inj{SortId{}, SortAExp{}}(VarI3:SortId{})))),VarDotVar2:SortK{})),Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'9:SortEnvCell{},Var'Unds'11:SortStoreCell{},Var'Unds'2:SortLocCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("327"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(327,10,329,48)"), UNIQUE'Unds'ID{}("079bda190e32ff0ff7ae422390b5b5de7b0abc2d5ce332aa66349e6f169425bf")]

// rule `_<=String__STRING_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING_Bool_String_String`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b845027eb9a8c978d2dfe3ec05a6eff77ba88b8f5c3ab2cb696a29aeae2db3b8) contentStartColumn(8) contentStartLine(616) org.kframework.attributes.Location(Location(616,8,616,63)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-LT-Eqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}),
        LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("616"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(616,8,616,63)"), UNIQUE'Unds'ID{}("b845027eb9a8c978d2dfe3ec05a6eff77ba88b8f5c3ab2cb696a29aeae2db3b8")]

// rule `_=/=Bool_`(B1,B2)=>`notBool_`(`_==Bool_`(B1,B2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8082ec9e8ff1aaf1e4594a6b86a75f2a67d244a719944f7f727338912cec93c1) contentStartColumn(8) contentStartLine(352) org.kframework.attributes.Location(Location(352,8,352,57)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(VarB1:SortBool{},VarB2:SortBool{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Bool'Unds'{}(VarB1:SortBool{},VarB2:SortBool{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("352"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(352,8,352,57)"), UNIQUE'Unds'ID{}("8082ec9e8ff1aaf1e4594a6b86a75f2a67d244a719944f7f727338912cec93c1")]

// rule `_=/=Int_`(I1,I2)=>`notBool_`(`_==Int_`(I1,I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1268ef8223300f719d2c898f934c4a0dd4d5d94e2224e9d2139c61b6a7fd7621) contentStartColumn(8) contentStartLine(472) org.kframework.attributes.Location(Location(472,8,472,53)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("472"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(472,8,472,53)"), UNIQUE'Unds'ID{}("1268ef8223300f719d2c898f934c4a0dd4d5d94e2224e9d2139c61b6a7fd7621")]

// rule `_=/=K_`(K1,K2)=>`notBool_`(`_==K_`(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(be43f022db407512c682c661ea25224c02085b8ae4fc4e4122c1ffda4d9c10dc) contentStartColumn(8) contentStartLine(856) org.kframework.attributes.Location(Location(856,8,856,45)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("856"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(856,8,856,45)"), UNIQUE'Unds'ID{}("be43f022db407512c682c661ea25224c02085b8ae4fc4e4122c1ffda4d9c10dc")]

// rule `_=/=String__STRING_Bool_String_String`(S1,S2)=>`notBool_`(`_==String__STRING_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a78bcc075d04a4fc9a360ddd678304c36ad82d78aed5298cf3ca840ff9a64c6c) contentStartColumn(8) contentStartLine(603) org.kframework.attributes.Location(Location(603,8,603,65)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("603"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(603,8,603,65)"), UNIQUE'Unds'ID{}("a78bcc075d04a4fc9a360ddd678304c36ad82d78aed5298cf3ca840ff9a64c6c")]

// rule `_==Bool_`(K1,K2)=>`_==K_`(inj{Bool,KItem}(K1),inj{Bool,KItem}(K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f80f7fe83e61312531fc419ec0b0880a6d89d056a322bd6e29a1f8082203f4f5) contentStartColumn(8) contentStartLine(858) org.kframework.attributes.Location(Location(858,8,858,43)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsEqls'Bool'Unds'{}(VarK1:SortBool{},VarK2:SortBool{}),
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortBool{}, SortKItem{}}(VarK1:SortBool{}),dotk{}()),kseq{}(inj{SortBool{}, SortKItem{}}(VarK2:SortBool{}),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("858"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(858,8,858,43)"), UNIQUE'Unds'ID{}("f80f7fe83e61312531fc419ec0b0880a6d89d056a322bd6e29a1f8082203f4f5")]

// rule `_==Int_`(I1,I2)=>`_==K_`(inj{Int,KItem}(I1),inj{Int,KItem}(I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e92e4aa4a18bee70f2627cdafb8687e2dfcc0dd6a7f8cbb8d1bd17d751c2da2a) contentStartColumn(8) contentStartLine(471) org.kframework.attributes.Location(Location(471,8,471,40)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarI1:SortInt{}),dotk{}()),kseq{}(inj{SortInt{}, SortKItem{}}(VarI2:SortInt{}),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("471"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(471,8,471,40)"), UNIQUE'Unds'ID{}("e92e4aa4a18bee70f2627cdafb8687e2dfcc0dd6a7f8cbb8d1bd17d751c2da2a")]

// rule `_==String__STRING_Bool_String_String`(S1,S2)=>`_==K_`(inj{String,KItem}(S1),inj{String,KItem}(S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d866d86c70a0259cfd553051351e356373b3c533c9a7b9974500e5dd032f7ca9) contentStartColumn(8) contentStartLine(604) org.kframework.attributes.Location(Location(604,8,604,49)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}),
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(VarS1:SortString{}),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(VarS2:SortString{}),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("604"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(604,8,604,49)"), UNIQUE'Unds'ID{}("d866d86c70a0259cfd553051351e356373b3c533c9a7b9974500e5dd032f7ca9")]

// rule `_>=String__STRING_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8307efe6b82cfb4a21276b92acefe5869f724f1def05bc54f10b09ba49b56f33) contentStartColumn(8) contentStartLine(618) org.kframework.attributes.Location(Location(618,8,618,63)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-GT-Eqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}),
        LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("618"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(618,8,618,63)"), UNIQUE'Unds'ID{}("8307efe6b82cfb4a21276b92acefe5869f724f1def05bc54f10b09ba49b56f33")]

// rule `_>String__STRING_Bool_String_String`(S1,S2)=>`_<String__STRING_Bool_String_String`(S2,S1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(24e2c6676f433dc8124ed0562f1c81405451eb8a338e395aa96f1325c51dea92) contentStartColumn(8) contentStartLine(617) org.kframework.attributes.Location(Location(617,8,617,52)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-GT-'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}),
        Lbl'Unds-LT-'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("617"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(617,8,617,52)"), UNIQUE'Unds'ID{}("24e2c6676f433dc8124ed0562f1c81405451eb8a338e395aa96f1325c51dea92")]

// rule `_andBool_`(#token("false","Bool") #as _1,_0)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e6ebe927ba416a1602679eb0166f22d394adf70452e0505c00f11c036a896253) contentStartColumn(8) contentStartLine(325) org.kframework.attributes.Location(Location(325,8,325,37)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'1:SortBool{}),Var'Unds'0:SortBool{}),
        Var'Unds'1:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("325"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(325,8,325,37)"), UNIQUE'Unds'ID{}("e6ebe927ba416a1602679eb0166f22d394adf70452e0505c00f11c036a896253")]

// rule `_andBool_`(#token("true","Bool") #as _0,B)=>B requires _0 ensures _0 [UNIQUE_ID(cd0a9b340fae24c9a05126d8df860cb7145fc64875711e36efaa694085559dc0) contentStartColumn(8) contentStartLine(323) org.kframework.attributes.Location(Location(323,8,323,37)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'0:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'0:SortBool{}),VarB:SortBool{}),
        VarB:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'0:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("323"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(323,8,323,37)"), UNIQUE'Unds'ID{}("cd0a9b340fae24c9a05126d8df860cb7145fc64875711e36efaa694085559dc0")]

// rule `_andBool_`(B,#token("true","Bool") #as _0)=>B requires _0 ensures _0 [UNIQUE_ID(b598bf51d1c959b7112e06b7f85a391ee5a18108acd52bb65ea27ef0381ed0e0) contentStartColumn(8) contentStartLine(324) org.kframework.attributes.Location(Location(324,8,324,37)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'0:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andBool'Unds'{}(VarB:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'0:SortBool{})),
        VarB:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'0:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("324"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(324,8,324,37)"), UNIQUE'Unds'ID{}("b598bf51d1c959b7112e06b7f85a391ee5a18108acd52bb65ea27ef0381ed0e0")]

// rule `_andBool_`(_0,#token("false","Bool") #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1a7512841ede635d09556466797d23f3f3cec57fe0fb6a68ce0c3a1cccb0b68f) contentStartColumn(8) contentStartLine(326) org.kframework.attributes.Location(Location(326,8,326,37)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andBool'Unds'{}(Var'Unds'0:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'1:SortBool{})),
        Var'Unds'1:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("326"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(326,8,326,37)"), UNIQUE'Unds'ID{}("1a7512841ede635d09556466797d23f3f3cec57fe0fb6a68ce0c3a1cccb0b68f")]

// rule `_andThenBool_`(#token("false","Bool") #as _1,_0)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5655ee866bbbb608f1f964220ab1530b0ef7135eeda23603dff05807b6d16b64) contentStartColumn(8) contentStartLine(330) org.kframework.attributes.Location(Location(330,8,330,36)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andThenBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'1:SortBool{}),Var'Unds'0:SortBool{}),
        Var'Unds'1:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("330"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(330,8,330,36)"), UNIQUE'Unds'ID{}("5655ee866bbbb608f1f964220ab1530b0ef7135eeda23603dff05807b6d16b64")]

// rule `_andThenBool_`(#token("true","Bool") #as _0,K)=>K requires _0 ensures _0 [UNIQUE_ID(7222515db4659f9d91276b956c8ae62254acb676f0a77a32927a2f9664a0277f) contentStartColumn(8) contentStartLine(328) org.kframework.attributes.Location(Location(328,8,328,37)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'0:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andThenBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'0:SortBool{}),VarK:SortBool{}),
        VarK:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'0:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("328"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(328,8,328,37)"), UNIQUE'Unds'ID{}("7222515db4659f9d91276b956c8ae62254acb676f0a77a32927a2f9664a0277f")]

// rule `_andThenBool_`(K,#token("true","Bool") #as _0)=>K requires _0 ensures _0 [UNIQUE_ID(3bbe6cf1318a61acb32fba25030cb15ff73ba968cd584d9b07573260cfd5542d) contentStartColumn(8) contentStartLine(329) org.kframework.attributes.Location(Location(329,8,329,37)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'0:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andThenBool'Unds'{}(VarK:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'0:SortBool{})),
        VarK:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'0:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("329"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(329,8,329,37)"), UNIQUE'Unds'ID{}("3bbe6cf1318a61acb32fba25030cb15ff73ba968cd584d9b07573260cfd5542d")]

// rule `_andThenBool_`(_0,#token("false","Bool") #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f9686d847651f3e51fa10373f3a2f282ece21460a20353e2e97d8100b357eae8) contentStartColumn(8) contentStartLine(331) org.kframework.attributes.Location(Location(331,8,331,36)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andThenBool'Unds'{}(Var'Unds'0:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'1:SortBool{})),
        Var'Unds'1:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("331"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(331,8,331,36)"), UNIQUE'Unds'ID{}("f9686d847651f3e51fa10373f3a2f282ece21460a20353e2e97d8100b357eae8")]

// rule `_divInt_`(I1,I2)=>`_/Int_`(`_-Int_`(I1,`_modInt_`(I1,I2)),I2) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(98da5640fc5e6ee59b397ff504565399b7ff03664f67915c80712fa0cdb0a8f4) contentStartColumn(8) contentStartLine(460) org.kframework.attributes.Location(Location(460,8,461,23)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'divInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        Lbl'UndsSlsh'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),VarI2:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("460"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(460,8,461,23)"), UNIQUE'Unds'ID{}("98da5640fc5e6ee59b397ff504565399b7ff03664f67915c80712fa0cdb0a8f4")]

// rule `_dividesInt__INT-COMMON_Bool_Int_Int`(I1,I2)=>`_==Int_`(`_%Int_`(I2,I1),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9695792871716095ab52385178d2734b9ea1a429bd7b0c82d3eeeba2c43573a1) contentStartColumn(8) contentStartLine(473) org.kframework.attributes.Location(Location(473,8,473,58)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(VarI1:SortInt{},VarI2:SortInt{}),
        Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},VarI1:SortInt{}),\dv{SortInt{}}("0"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("473"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(473,8,473,58)"), UNIQUE'Unds'ID{}("9695792871716095ab52385178d2734b9ea1a429bd7b0c82d3eeeba2c43573a1")]

// rule `_impliesBool_`(#token("true","Bool") #as _0,B)=>B requires _0 ensures _0 [UNIQUE_ID(a14afb572fbb3cafc70cb9d12559ea76b3cadc10fe7660cbfc3ac421d8c83472) contentStartColumn(8) contentStartLine(347) org.kframework.attributes.Location(Location(347,8,347,36)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'0:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'impliesBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'0:SortBool{}),VarB:SortBool{}),
        VarB:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'0:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("347"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(347,8,347,36)"), UNIQUE'Unds'ID{}("a14afb572fbb3cafc70cb9d12559ea76b3cadc10fe7660cbfc3ac421d8c83472")]

// rule `_impliesBool_`(B,#token("false","Bool"))=>`notBool_`(B) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1b7a876afdaa257c8b3f634d4e2a8b25d443ca975cd70924532f97c11b5436a3) contentStartColumn(8) contentStartLine(350) org.kframework.attributes.Location(Location(350,8,350,45)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'impliesBool'Unds'{}(VarB:SortBool{},\dv{SortBool{}}("false")),
        LblnotBool'Unds'{}(VarB:SortBool{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("350"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(350,8,350,45)"), UNIQUE'Unds'ID{}("1b7a876afdaa257c8b3f634d4e2a8b25d443ca975cd70924532f97c11b5436a3")]

// rule `_impliesBool_`(_0,#token("true","Bool") #as _1)=>_1 requires _1 ensures _1 [UNIQUE_ID(dd9b1a472eea37abb732383a93435249ef41975a934479c3ad416fe808fbe42f) contentStartColumn(8) contentStartLine(349) org.kframework.attributes.Location(Location(349,8,349,39)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'impliesBool'Unds'{}(Var'Unds'0:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'1:SortBool{})),
        Var'Unds'1:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("349"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(349,8,349,39)"), UNIQUE'Unds'ID{}("dd9b1a472eea37abb732383a93435249ef41975a934479c3ad416fe808fbe42f")]

// rule `_impliesBool_`(#token("false","Bool"),_0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1f2244d9b271fbf663741428beb3049daf5dd0a60f428c146b07d2595095f548) contentStartColumn(8) contentStartLine(348) org.kframework.attributes.Location(Location(348,8,348,40)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'impliesBool'Unds'{}(\dv{SortBool{}}("false"),Var'Unds'0:SortBool{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("348"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(348,8,348,40)"), UNIQUE'Unds'ID{}("1f2244d9b271fbf663741428beb3049daf5dd0a60f428c146b07d2595095f548")]

// rule `_modInt_`(I1,I2)=>`_%Int_`(`_+Int_`(`_%Int_`(I1,`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(06049b365f7975e4498cb4e762dcb432b2fbb5b4e91f53d1554c5a2c6bfac7a4) concrete() contentStartColumn(5) contentStartLine(463) org.kframework.attributes.Location(Location(463,5,466,23)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        Lbl'UndsPerc'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI1:SortInt{},LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), concrete{}(), contentStartLine{}("463"), contentStartColumn{}("5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(463,5,466,23)"), UNIQUE'Unds'ID{}("06049b365f7975e4498cb4e762dcb432b2fbb5b4e91f53d1554c5a2c6bfac7a4")]

// rule `_orBool__BOOL_Bool_Bool_Bool`(#token("true","Bool") #as _1,_0)=>_1 requires _1 ensures _1 [UNIQUE_ID(dc3966c0487ffc67c7b2138883703d82c0ca3707d493d7ecbeed16591eda4002) contentStartColumn(8) contentStartLine(337) org.kframework.attributes.Location(Location(337,8,337,34)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'1:SortBool{}),Var'Unds'0:SortBool{}),
        Var'Unds'1:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("337"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(337,8,337,34)"), UNIQUE'Unds'ID{}("dc3966c0487ffc67c7b2138883703d82c0ca3707d493d7ecbeed16591eda4002")]

// rule `_orBool__BOOL_Bool_Bool_Bool`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ec0c7ff02d00be2a1ad79d358b0298a044942a1b87d9d60c5c00ad5022700119) contentStartColumn(8) contentStartLine(340) org.kframework.attributes.Location(Location(340,8,340,32)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(VarB:SortBool{},\dv{SortBool{}}("false")),
        VarB:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("340"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(340,8,340,32)"), UNIQUE'Unds'ID{}("ec0c7ff02d00be2a1ad79d358b0298a044942a1b87d9d60c5c00ad5022700119")]

// rule `_orBool__BOOL_Bool_Bool_Bool`(_0,#token("true","Bool") #as _1)=>_1 requires _1 ensures _1 [UNIQUE_ID(50b5fa147c0e5b9e6c6e24d3de018f312a796c662ac8cf4f82a65141b5c1c7ba) contentStartColumn(8) contentStartLine(338) org.kframework.attributes.Location(Location(338,8,338,34)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Var'Unds'0:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'1:SortBool{})),
        Var'Unds'1:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("338"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(338,8,338,34)"), UNIQUE'Unds'ID{}("50b5fa147c0e5b9e6c6e24d3de018f312a796c662ac8cf4f82a65141b5c1c7ba")]

// rule `_orBool__BOOL_Bool_Bool_Bool`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fd354715c1ec4875a94c348cc1369a78bd9c7d7ea16a377b110867d2d6b9d976) contentStartColumn(8) contentStartLine(339) org.kframework.attributes.Location(Location(339,8,339,32)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(\dv{SortBool{}}("false"),VarB:SortBool{}),
        VarB:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("339"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(339,8,339,32)"), UNIQUE'Unds'ID{}("fd354715c1ec4875a94c348cc1369a78bd9c7d7ea16a377b110867d2d6b9d976")]

// rule `_orElseBool_`(#token("true","Bool") #as _1,_0)=>_1 requires _1 ensures _1 [UNIQUE_ID(73e5640668de4bd9a9bc557aa9f2ab264a44a4afc44099933ed18b2d9fb7ecda) contentStartColumn(8) contentStartLine(342) org.kframework.attributes.Location(Location(342,8,342,33)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orElseBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'1:SortBool{}),Var'Unds'0:SortBool{}),
        Var'Unds'1:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("342"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(342,8,342,33)"), UNIQUE'Unds'ID{}("73e5640668de4bd9a9bc557aa9f2ab264a44a4afc44099933ed18b2d9fb7ecda")]

// rule `_orElseBool_`(K,#token("false","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0943d1ee643c9b20db8186b069d596390234d7ae17deef0eb5df56d604652df5) contentStartColumn(8) contentStartLine(345) org.kframework.attributes.Location(Location(345,8,345,37)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orElseBool'Unds'{}(VarK:SortBool{},\dv{SortBool{}}("false")),
        VarK:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("345"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(345,8,345,37)"), UNIQUE'Unds'ID{}("0943d1ee643c9b20db8186b069d596390234d7ae17deef0eb5df56d604652df5")]

// rule `_orElseBool_`(_0,#token("true","Bool") #as _1)=>_1 requires _1 ensures _1 [UNIQUE_ID(53eb8e839f826d23ba5ac5b4c664ba890f66acecb1700ae2afae906c5ad31fde) contentStartColumn(8) contentStartLine(343) org.kframework.attributes.Location(Location(343,8,343,33)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orElseBool'Unds'{}(Var'Unds'0:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'1:SortBool{})),
        Var'Unds'1:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("343"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(343,8,343,33)"), UNIQUE'Unds'ID{}("53eb8e839f826d23ba5ac5b4c664ba890f66acecb1700ae2afae906c5ad31fde")]

// rule `_orElseBool_`(#token("false","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(93c62e2a1ad3d088f4f73f7239196b7745782f7646fa90eb12c2c42741d645f0) contentStartColumn(8) contentStartLine(344) org.kframework.attributes.Location(Location(344,8,344,37)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orElseBool'Unds'{}(\dv{SortBool{}}("false"),VarK:SortBool{}),
        VarK:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("344"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(344,8,344,37)"), UNIQUE'Unds'ID{}("93c62e2a1ad3d088f4f73f7239196b7745782f7646fa90eb12c2c42741d645f0")]

// rule `_xorBool_`(B,B)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(acf02bbb1c02949b2bfee30178d6cdd980414738448a5f9c5576e7522a683b4f) contentStartColumn(8) contentStartLine(335) org.kframework.attributes.Location(Location(335,8,335,38)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'xorBool'Unds'{}(VarB:SortBool{},VarB:SortBool{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("335"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(335,8,335,38)"), UNIQUE'Unds'ID{}("acf02bbb1c02949b2bfee30178d6cdd980414738448a5f9c5576e7522a683b4f")]

// rule `_xorBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bc1d9558787d9b5f86fbd50908b7841cd343eaf620351d6791f03fb9434badc8) contentStartColumn(8) contentStartLine(334) org.kframework.attributes.Location(Location(334,8,334,38)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'xorBool'Unds'{}(VarB:SortBool{},\dv{SortBool{}}("false")),
        VarB:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("334"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(334,8,334,38)"), UNIQUE'Unds'ID{}("bc1d9558787d9b5f86fbd50908b7841cd343eaf620351d6791f03fb9434badc8")]

// rule `_xorBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(20ee6a1a4ec1a9203558107910a0bf65c612a140ecce3ca920bc69806b8ccf3a) contentStartColumn(8) contentStartLine(333) org.kframework.attributes.Location(Location(333,8,333,38)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'xorBool'Unds'{}(\dv{SortBool{}}("false"),VarB:SortBool{}),
        VarB:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("333"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(333,8,333,38)"), UNIQUE'Unds'ID{}("20ee6a1a4ec1a9203558107910a0bf65c612a140ecce3ca920bc69806b8ccf3a")]

// rule `bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_modInt_`(`_>>Int_`(I,IDX),`_<<Int_`(#token("1","Int"),LEN)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6d2521bec62ae0624c366eac1bef561e6cfe867154f1dc263fede52ab2e3cd35) contentStartColumn(8) contentStartLine(456) org.kframework.attributes.Location(Location(456,8,456,85)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{},VarLEN:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarI:SortInt{},VarIDX:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("456"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(456,8,456,85)"), UNIQUE'Unds'ID{}("6d2521bec62ae0624c366eac1bef561e6cfe867154f1dc263fede52ab2e3cd35")]

// rule `countAllOccurrences(_,_)_STRING_Int_String_String`(Source,ToCount)=>`_+Int_`(#token("1","Int"),`countAllOccurrences(_,_)_STRING_Int_String_String`(`substrString(_,_,_)_STRING_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToCount,#token("0","Int")),`lengthString(_)_STRING_Int_String`(ToCount)),`lengthString(_)_STRING_Int_String`(Source)),ToCount)) requires `_>=Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(4bccfa06c644e08f8bc72d06c14c533f32eee6cde071a3b29aa26ff23c922baf) contentStartColumn(8) contentStartLine(627) org.kframework.attributes.Location(Location(627,8,628,60)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String{}(VarSource:SortString{},VarToCount:SortString{}),
        Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("1"),LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarToCount:SortString{})),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarSource:SortString{})),VarToCount:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("627"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(627,8,628,60)"), UNIQUE'Unds'ID{}("4bccfa06c644e08f8bc72d06c14c533f32eee6cde071a3b29aa26ff23c922baf")]

// rule `countAllOccurrences(_,_)_STRING_Int_String_String`(Source,ToCount)=>#token("0","Int") requires `_<Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(dfa3f190163a3253c79d99a66ad7826cdaebf15d32e558c2e1c1c28d223401ec) contentStartColumn(8) contentStartLine(625) org.kframework.attributes.Location(Location(625,8,626,59)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String{}(VarSource:SortString{},VarToCount:SortString{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("625"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(625,8,626,59)"), UNIQUE'Unds'ID{}("dfa3f190163a3253c79d99a66ad7826cdaebf15d32e558c2e1c1c28d223401ec")]

// rule `findChar(_,_,_)_STRING_Int_String_String_Int`(S1,S2,I)=>`#if_#then_#else_#fi_K-EQUAL_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),#token("-1","Int")),`findChar(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING_Int_String`(S2)),I),`#if_#then_#else_#fi_K-EQUAL_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(`findChar(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING_Int_String`(S2)),I),#token("-1","Int")),`findString(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`minInt(_,_)_INT-COMMON_Int_Int_Int`(`findString(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`findChar(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING_Int_String`(S2)),I)))) requires `_=/=String__STRING_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(0d56eed034d2fa4ad082122b8d6b80f1e82c06fb05ba24f8cec9dcc22391f3c5) contentStartColumn(8) contentStartLine(620) org.kframework.attributes.Location(Location(620,8,620,431)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},VarS2:SortString{},VarI:SortInt{}),
        Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}),Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("620"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(620,8,620,431)"), UNIQUE'Unds'ID{}("0d56eed034d2fa4ad082122b8d6b80f1e82c06fb05ba24f8cec9dcc22391f3c5")]

// rule `findChar(_,_,_)_STRING_Int_String_String_Int`(_0,#token("\"\"","String"),_1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0591f2bf9f969151282b463b90a46889c2f24b2ccc17d5e7d0f4a39bac3b9431) contentStartColumn(8) contentStartLine(621) org.kframework.attributes.Location(Location(621,8,621,32)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(Var'Unds'0:SortString{},\dv{SortString{}}(""),Var'Unds'1:SortInt{}),
        \dv{SortInt{}}("-1")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("621"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(621,8,621,32)"), UNIQUE'Unds'ID{}("0591f2bf9f969151282b463b90a46889c2f24b2ccc17d5e7d0f4a39bac3b9431")]

// rule `freshId(_)_ID-SYNTAX_Id_Int`(I)=>`String2Id(_)_ID-SYNTAX_Id_String`(`_+String__STRING_String_String_String`(#token("\"_\"","String"),`Int2String(_)_STRING_String_Int`(I))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a9b9b8184277146c09eab2a3b04c692bacf9ab5bb4505273f0b73df25d23d2a) contentStartColumn(8) contentStartLine(838) org.kframework.attributes.Location(Location(838,8,838,62)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortId{},R} (
        LblfreshId'LParUndsRParUnds'ID-SYNTAX'Unds'Id'Unds'Int{}(VarI:SortInt{}),
        LblString2Id'LParUndsRParUnds'ID-SYNTAX'Unds'Id'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(\dv{SortString{}}("_"),LblInt2String'LParUndsRParUnds'STRING'Unds'String'Unds'Int{}(VarI:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("838"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(838,8,838,62)"), UNIQUE'Unds'ID{}("9a9b9b8184277146c09eab2a3b04c692bacf9ab5bb4505273f0b73df25d23d2a")]

// rule `freshInt(_)_INT_Int_Int`(I)=>I requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f1540ca30a8409b2d12d93dbe87ce1795c0b21bbb9e38cb622cd6b5997b7273d) contentStartColumn(8) contentStartLine(476) org.kframework.attributes.Location(Location(476,8,476,28)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(VarI:SortInt{}),
        VarI:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("476"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(476,8,476,28)"), UNIQUE'Unds'ID{}("f1540ca30a8409b2d12d93dbe87ce1795c0b21bbb9e38cb622cd6b5997b7273d")]

// rule getGeneratedCounterCell(`<generatedTop>`(DotVar0,Cell))=>Cell requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedCounterCell{},R} (
        LblgetGeneratedCounterCell{}(Lbl'-LT-'generatedTop'-GT-'{}(VarDotVar0:SortTCell{},VarCell:SortGeneratedCounterCell{})),
        VarCell:SortGeneratedCounterCell{}),
      \top{R}()))
  []

// rule initEnvCell(.KList)=>`<env>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortEnvCell{},R} (
        LblinitEnvCell{}(),
        Lbl'-LT-'env'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initFunctionsCell(.KList)=>`<functions>`(`.ThreadCellMap`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFunctionsCell{},R} (
        LblinitFunctionsCell{}(),
        Lbl'-LT-'functions'-GT-'{}(Lbl'Stop'ThreadCellMap{}())),
      \top{R}()))
  [initializer{}()]

// rule initGeneratedCounterCell(.KList)=>`<generatedCounter>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedCounterCell{},R} (
        LblinitGeneratedCounterCell{}(),
        Lbl'-LT-'generatedCounter'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initGeneratedTopCell(Init)=>`<generatedTop>`(initTCell(Init),initGeneratedCounterCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedTopCell{},R} (
        LblinitGeneratedTopCell{}(VarInit:SortMap{}),
        Lbl'-LT-'generatedTop'-GT-'{}(LblinitTCell{}(VarInit:SortMap{}),LblinitGeneratedCounterCell{}())),
      \top{R}()))
  [initializer{}()]

// rule initIdCell(.KList)=>`<id>`(.K) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIdCell{},R} (
        LblinitIdCell{}(),
        Lbl'-LT-'id'-GT-'{}(dotk{}())),
      \top{R}()))
  [initializer{}()]

// rule initKCell(Init)=>`<k>`(inj{Fun,KItem}(`project:Fun`(`Map:lookup`(Init,inj{KConfigVar,KItem}(#token("$PGM","KConfigVar")))))) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKCell{},R} (
        LblinitKCell{}(VarInit:SortMap{}),
        Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFun{}, SortKItem{}}(Lblproject'Coln'Fun{}(kseq{}(LblMap'Coln'lookup{}(VarInit:SortMap{},inj{SortKConfigVar{}, SortKItem{}}(\dv{SortKConfigVar{}}("$PGM"))),dotk{}()))),dotk{}()))),
      \top{R}()))
  [initializer{}()]

// rule initLocCell(.KList)=>`<loc>`(#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLocCell{},R} (
        LblinitLocCell{}(),
        Lbl'-LT-'loc'-GT-'{}(\dv{SortInt{}}("1"))),
      \top{R}()))
  [initializer{}()]

// rule initLocalEnvCell(.KList)=>`<localEnv>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLocalEnvCell{},R} (
        LblinitLocalEnvCell{}(),
        Lbl'-LT-'localEnv'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initOutCell(.KList)=>`<out>`(`.Set`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortOutCell{},R} (
        LblinitOutCell{}(),
        Lbl'-LT-'out'-GT-'{}(Lbl'Stop'Set{}())),
      \top{R}()))
  [initializer{}()]

// rule initParamsCell(.KList)=>`<params>`(.K) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortParamsCell{},R} (
        LblinitParamsCell{}(),
        Lbl'-LT-'params'-GT-'{}(dotk{}())),
      \top{R}()))
  [initializer{}()]

// rule initScopeCell(.KList)=>`<scope>`(.K) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortScopeCell{},R} (
        LblinitScopeCell{}(),
        Lbl'-LT-'scope'-GT-'{}(dotk{}())),
      \top{R}()))
  [initializer{}()]

// rule initStoreCell(.KList)=>`<store>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortStoreCell{},R} (
        LblinitStoreCell{}(),
        Lbl'-LT-'store'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initTCell(Init)=>`<T>`(initKCell(Init),initOutCell(.KList),initFunctionsCell(.KList),initEnvCell(.KList),initStoreCell(.KList),initLocCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTCell{},R} (
        LblinitTCell{}(VarInit:SortMap{}),
        Lbl'-LT-'T'-GT-'{}(LblinitKCell{}(VarInit:SortMap{}),LblinitOutCell{}(),LblinitFunctionsCell{}(),LblinitEnvCell{}(),LblinitStoreCell{}(),LblinitLocCell{}())),
      \top{R}()))
  [initializer{}()]

// rule initTempCell(.KList)=>`<temp>`(.K) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTempCell{},R} (
        LblinitTempCell{}(),
        Lbl'-LT-'temp'-GT-'{}(dotk{}())),
      \top{R}()))
  [initializer{}()]

// rule initThreadCell(.KList)=>`ThreadCellMapItem`(initIdCell(.KList),`<thread>`(initIdCell(.KList),initScopeCell(.KList),initParamsCell(.KList),initTempCell(.KList),initLocalEnvCell(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortThreadCellMap{},R} (
        LblinitThreadCell{}(),
        LblThreadCellMapItem{}(LblinitIdCell{}(),Lbl'-LT-'thread'-GT-'{}(LblinitIdCell{}(),LblinitScopeCell{}(),LblinitParamsCell{}(),LblinitTempCell{}(),LblinitLocalEnvCell{}()))),
      \top{R}()))
  [initializer{}()]

// rule isAExp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortAExp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortAExp{}, SortKItem{}}(Var'Unds'0:SortAExp{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAExp{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isAExp(inj{AExp,KItem}(AExp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAExp{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarAExp:SortAExp{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isAExpMod(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortAExpMod{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortAExpMod{}, SortKItem{}}(Var'Unds'1:SortAExpMod{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAExpMod{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isAExpMod(inj{AExpMod,KItem}(AExpMod))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAExpMod{}(kseq{}(inj{SortAExpMod{}, SortKItem{}}(VarAExpMod:SortAExpMod{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isArrayList(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortArrayList{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortArrayList{}, SortKItem{}}(Var'Unds'1:SortArrayList{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisArrayList{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isArrayList(inj{ArrayList,KItem}(ArrayList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisArrayList{}(kseq{}(inj{SortArrayList{}, SortKItem{}}(VarArrayList:SortArrayList{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isAssigner(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortAssigner{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortAssigner{}, SortKItem{}}(Var'Unds'0:SortAssigner{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAssigner{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isAssigner(inj{Assigner,KItem}(Assigner))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAssigner{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(VarAssigner:SortAssigner{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isBExp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortBExp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortBExp{}, SortKItem{}}(Var'Unds'1:SortBExp{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBExp{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isBExp(inj{BExp,KItem}(BExp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBExp{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarBExp:SortBExp{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isBlock(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortBlock{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortBlock{}, SortKItem{}}(Var'Unds'1:SortBlock{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBlock{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isBlock(inj{Block,KItem}(Block))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBlock{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarBlock:SortBlock{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isBool(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortBool{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortBool{}, SortKItem{}}(Var'Unds'0:SortBool{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBool{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isBool(inj{Bool,KItem}(Bool))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBool{}(kseq{}(inj{SortBool{}, SortKItem{}}(VarBool:SortBool{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCell{}, SortKItem{}}(Var'Unds'1:SortCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCell(inj{Cell,KItem}(Cell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCell{}(kseq{}(inj{SortCell{}, SortKItem{}}(VarCell:SortCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDoWhileStmt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortDoWhileStmt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDoWhileStmt{}, SortKItem{}}(Var'Unds'1:SortDoWhileStmt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDoWhileStmt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDoWhileStmt(inj{DoWhileStmt,KItem}(DoWhileStmt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDoWhileStmt{}(kseq{}(inj{SortDoWhileStmt{}, SortKItem{}}(VarDoWhileStmt:SortDoWhileStmt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isElseIfStmt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortElseIfStmt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortElseIfStmt{}, SortKItem{}}(Var'Unds'1:SortElseIfStmt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisElseIfStmt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isElseIfStmt(inj{ElseIfStmt,KItem}(ElseIfStmt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisElseIfStmt{}(kseq{}(inj{SortElseIfStmt{}, SortKItem{}}(VarElseIfStmt:SortElseIfStmt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isEnvCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortEnvCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortEnvCell{}, SortKItem{}}(Var'Unds'1:SortEnvCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEnvCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isEnvCell(inj{EnvCell,KItem}(EnvCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEnvCell{}(kseq{}(inj{SortEnvCell{}, SortKItem{}}(VarEnvCell:SortEnvCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isEnvCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortEnvCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortEnvCellOpt{}, SortKItem{}}(Var'Unds'1:SortEnvCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEnvCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isEnvCellOpt(inj{EnvCellOpt,KItem}(EnvCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEnvCellOpt{}(kseq{}(inj{SortEnvCellOpt{}, SortKItem{}}(VarEnvCellOpt:SortEnvCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFloat(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFloat{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFloat{}, SortKItem{}}(Var'Unds'1:SortFloat{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFloat{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFloat(inj{Float,KItem}(Float))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFloat{}(kseq{}(inj{SortFloat{}, SortKItem{}}(VarFloat:SortFloat{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isForEachStmt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortForEachStmt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortForEachStmt{}, SortKItem{}}(Var'Unds'1:SortForEachStmt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisForEachStmt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isForEachStmt(inj{ForEachStmt,KItem}(ForEachStmt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisForEachStmt{}(kseq{}(inj{SortForEachStmt{}, SortKItem{}}(VarForEachStmt:SortForEachStmt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isForStmt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortForStmt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortForStmt{}, SortKItem{}}(Var'Unds'0:SortForStmt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisForStmt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isForStmt(inj{ForStmt,KItem}(ForStmt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisForStmt{}(kseq{}(inj{SortForStmt{}, SortKItem{}}(VarForStmt:SortForStmt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFun(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFun{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFun{}, SortKItem{}}(Var'Unds'1:SortFun{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFun{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFun(inj{Fun,KItem}(Fun))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFun{}(kseq{}(inj{SortFun{}, SortKItem{}}(VarFun:SortFun{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncCall(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncCall{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncCall{}, SortKItem{}}(Var'Unds'1:SortFuncCall{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncCall{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncCall(inj{FuncCall,KItem}(FuncCall))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncCall{}(kseq{}(inj{SortFuncCall{}, SortKItem{}}(VarFuncCall:SortFuncCall{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncDec(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncDec{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncDec{}, SortKItem{}}(Var'Unds'1:SortFuncDec{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDec{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncDec(inj{FuncDec,KItem}(FuncDec))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDec{}(kseq{}(inj{SortFuncDec{}, SortKItem{}}(VarFuncDec:SortFuncDec{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFunctionsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFunctionsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFunctionsCell{}, SortKItem{}}(Var'Unds'1:SortFunctionsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFunctionsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFunctionsCell(inj{FunctionsCell,KItem}(FunctionsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFunctionsCell{}(kseq{}(inj{SortFunctionsCell{}, SortKItem{}}(VarFunctionsCell:SortFunctionsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFunctionsCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFunctionsCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFunctionsCellFragment{}, SortKItem{}}(Var'Unds'0:SortFunctionsCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFunctionsCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFunctionsCellFragment(inj{FunctionsCellFragment,KItem}(FunctionsCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFunctionsCellFragment{}(kseq{}(inj{SortFunctionsCellFragment{}, SortKItem{}}(VarFunctionsCellFragment:SortFunctionsCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFunctionsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFunctionsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFunctionsCellOpt{}, SortKItem{}}(Var'Unds'0:SortFunctionsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFunctionsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFunctionsCellOpt(inj{FunctionsCellOpt,KItem}(FunctionsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFunctionsCellOpt{}(kseq{}(inj{SortFunctionsCellOpt{}, SortKItem{}}(VarFunctionsCellOpt:SortFunctionsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGeneratedCounterCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGeneratedCounterCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(Var'Unds'0:SortGeneratedCounterCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedCounterCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGeneratedCounterCell(inj{GeneratedCounterCell,KItem}(GeneratedCounterCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedCounterCell{}(kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarGeneratedCounterCell:SortGeneratedCounterCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGeneratedCounterCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGeneratedCounterCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(Var'Unds'0:SortGeneratedCounterCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedCounterCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGeneratedCounterCellOpt(inj{GeneratedCounterCellOpt,KItem}(GeneratedCounterCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedCounterCellOpt{}(kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarGeneratedCounterCellOpt:SortGeneratedCounterCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGeneratedTopCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGeneratedTopCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(Var'Unds'1:SortGeneratedTopCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedTopCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGeneratedTopCell(inj{GeneratedTopCell,KItem}(GeneratedTopCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedTopCell{}(kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarGeneratedTopCell:SortGeneratedTopCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGeneratedTopCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGeneratedTopCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(Var'Unds'0:SortGeneratedTopCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedTopCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGeneratedTopCellFragment(inj{GeneratedTopCellFragment,KItem}(GeneratedTopCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedTopCellFragment{}(kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarGeneratedTopCellFragment:SortGeneratedTopCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIOError(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIOError{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIOError{}, SortKItem{}}(Var'Unds'1:SortIOError{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIOError{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIOError(inj{IOError,KItem}(IOError))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIOError{}(kseq{}(inj{SortIOError{}, SortKItem{}}(VarIOError:SortIOError{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIOFile(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIOFile{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIOFile{}, SortKItem{}}(Var'Unds'1:SortIOFile{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIOFile{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIOFile(inj{IOFile,KItem}(IOFile))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIOFile{}(kseq{}(inj{SortIOFile{}, SortKItem{}}(VarIOFile:SortIOFile{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIOInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIOInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIOInt{}, SortKItem{}}(Var'Unds'1:SortIOInt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIOInt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIOInt(inj{IOInt,KItem}(IOInt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIOInt{}(kseq{}(inj{SortIOInt{}, SortKItem{}}(VarIOInt:SortIOInt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIOString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIOString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIOString{}, SortKItem{}}(Var'Unds'1:SortIOString{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIOString{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIOString(inj{IOString,KItem}(IOString))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIOString{}(kseq{}(inj{SortIOString{}, SortKItem{}}(VarIOString:SortIOString{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isId(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortId{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortId{}, SortKItem{}}(Var'Unds'1:SortId{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisId{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isId(inj{Id,KItem}(Id))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisId{}(kseq{}(inj{SortId{}, SortKItem{}}(VarId:SortId{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIdAssigner(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIdAssigner{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIdAssigner{}, SortKItem{}}(Var'Unds'1:SortIdAssigner{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIdAssigner{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIdAssigner(inj{IdAssigner,KItem}(IdAssigner))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIdAssigner{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(VarIdAssigner:SortIdAssigner{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIdCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortIdCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIdCell{}, SortKItem{}}(Var'Unds'0:SortIdCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIdCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIdCell(inj{IdCell,KItem}(IdCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIdCell{}(kseq{}(inj{SortIdCell{}, SortKItem{}}(VarIdCell:SortIdCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIdCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIdCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIdCellOpt{}, SortKItem{}}(Var'Unds'1:SortIdCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIdCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIdCellOpt(inj{IdCellOpt,KItem}(IdCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIdCellOpt{}(kseq{}(inj{SortIdCellOpt{}, SortKItem{}}(VarIdCellOpt:SortIdCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIdExp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIdExp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIdExp{}, SortKItem{}}(Var'Unds'1:SortIdExp{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIdExp{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIdExp(inj{IdExp,KItem}(IdExp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIdExp{}(kseq{}(inj{SortIdExp{}, SortKItem{}}(VarIdExp:SortIdExp{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIdList(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortIdList{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIdList{}, SortKItem{}}(Var'Unds'0:SortIdList{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIdList{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIdList(inj{IdList,KItem}(IdList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIdList{}(kseq{}(inj{SortIdList{}, SortKItem{}}(VarIdList:SortIdList{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIfStmt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIfStmt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIfStmt{}, SortKItem{}}(Var'Unds'1:SortIfStmt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIfStmt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIfStmt(inj{IfStmt,KItem}(IfStmt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIfStmt{}(kseq{}(inj{SortIfStmt{}, SortKItem{}}(VarIfStmt:SortIfStmt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortInt{}, SortKItem{}}(Var'Unds'0:SortInt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isInt(inj{Int,KItem}(Int))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInt{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarInt:SortInt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIntList(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortIntList{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIntList{}, SortKItem{}}(Var'Unds'0:SortIntList{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIntList{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIntList(inj{IntList,KItem}(IntList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIntList{}(kseq{}(inj{SortIntList{}, SortKItem{}}(VarIntList:SortIntList{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isK(K)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisK{}(VarK:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKCell{}, SortKItem{}}(Var'Unds'1:SortKCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKCell(inj{KCell,KItem}(KCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKCell{}(kseq{}(inj{SortKCell{}, SortKItem{}}(VarKCell:SortKCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKCellOpt{}, SortKItem{}}(Var'Unds'1:SortKCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKCellOpt(inj{KCellOpt,KItem}(KCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKCellOpt{}(kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarKCellOpt:SortKCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKConfigVar(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKConfigVar{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKConfigVar{}, SortKItem{}}(Var'Unds'1:SortKConfigVar{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKConfigVar{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKConfigVar(inj{KConfigVar,KItem}(KConfigVar))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKConfigVar{}(kseq{}(inj{SortKConfigVar{}, SortKItem{}}(VarKConfigVar:SortKConfigVar{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKItem(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortKItem{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(Var'Unds'0:SortKItem{},dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKItem{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKItem(KItem)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKItem{}(kseq{}(VarKItem:SortKItem{},dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKResult(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKResult{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKResult{}, SortKItem{}}(Var'Unds'1:SortKResult{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKResult{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKResult(inj{KResult,KItem}(KResult))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKResult{}(kseq{}(inj{SortKResult{}, SortKItem{}}(VarKResult:SortKResult{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKVariable(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortKVariable{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKVariable{}, SortKItem{}}(Var'Unds'0:SortKVariable{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKVariable{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKVariable(inj{KVariable,KItem}(KVariable))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKVariable{}(kseq{}(inj{SortKVariable{}, SortKItem{}}(VarKVariable:SortKVariable{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isList(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortList{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortList{}, SortKItem{}}(Var'Unds'0:SortList{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisList{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isList(inj{List,KItem}(List))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisList{}(kseq{}(inj{SortList{}, SortKItem{}}(VarList:SortList{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLocCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLocCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLocCell{}, SortKItem{}}(Var'Unds'1:SortLocCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLocCell(inj{LocCell,KItem}(LocCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocCell{}(kseq{}(inj{SortLocCell{}, SortKItem{}}(VarLocCell:SortLocCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLocCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortLocCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLocCellOpt{}, SortKItem{}}(Var'Unds'0:SortLocCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLocCellOpt(inj{LocCellOpt,KItem}(LocCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocCellOpt{}(kseq{}(inj{SortLocCellOpt{}, SortKItem{}}(VarLocCellOpt:SortLocCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLocal(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLocal{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLocal{}, SortKItem{}}(Var'Unds'1:SortLocal{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocal{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLocal(inj{Local,KItem}(Local))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocal{}(kseq{}(inj{SortLocal{}, SortKItem{}}(VarLocal:SortLocal{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLocalEnvCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLocalEnvCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLocalEnvCell{}, SortKItem{}}(Var'Unds'1:SortLocalEnvCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalEnvCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLocalEnvCell(inj{LocalEnvCell,KItem}(LocalEnvCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalEnvCell{}(kseq{}(inj{SortLocalEnvCell{}, SortKItem{}}(VarLocalEnvCell:SortLocalEnvCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLocalEnvCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortLocalEnvCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLocalEnvCellOpt{}, SortKItem{}}(Var'Unds'0:SortLocalEnvCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalEnvCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLocalEnvCellOpt(inj{LocalEnvCellOpt,KItem}(LocalEnvCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalEnvCellOpt{}(kseq{}(inj{SortLocalEnvCellOpt{}, SortKItem{}}(VarLocalEnvCellOpt:SortLocalEnvCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMap{}, SortKItem{}}(Var'Unds'1:SortMap{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMap{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMap(inj{Map,KItem}(Map))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMap{}(kseq{}(inj{SortMap{}, SortKItem{}}(VarMap:SortMap{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isOutCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortOutCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortOutCell{}, SortKItem{}}(Var'Unds'0:SortOutCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOutCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isOutCell(inj{OutCell,KItem}(OutCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOutCell{}(kseq{}(inj{SortOutCell{}, SortKItem{}}(VarOutCell:SortOutCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isOutCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortOutCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortOutCellOpt{}, SortKItem{}}(Var'Unds'0:SortOutCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOutCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isOutCellOpt(inj{OutCellOpt,KItem}(OutCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOutCellOpt{}(kseq{}(inj{SortOutCellOpt{}, SortKItem{}}(VarOutCellOpt:SortOutCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isParams(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortParams{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortParams{}, SortKItem{}}(Var'Unds'0:SortParams{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisParams{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isParams(inj{Params,KItem}(Params))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisParams{}(kseq{}(inj{SortParams{}, SortKItem{}}(VarParams:SortParams{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isParamsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortParamsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortParamsCell{}, SortKItem{}}(Var'Unds'1:SortParamsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisParamsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isParamsCell(inj{ParamsCell,KItem}(ParamsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisParamsCell{}(kseq{}(inj{SortParamsCell{}, SortKItem{}}(VarParamsCell:SortParamsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isParamsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortParamsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortParamsCellOpt{}, SortKItem{}}(Var'Unds'0:SortParamsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisParamsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isParamsCellOpt(inj{ParamsCellOpt,KItem}(ParamsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisParamsCellOpt{}(kseq{}(inj{SortParamsCellOpt{}, SortKItem{}}(VarParamsCellOpt:SortParamsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isPrint(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortPrint{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortPrint{}, SortKItem{}}(Var'Unds'1:SortPrint{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisPrint{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isPrint(inj{Print,KItem}(Print))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisPrint{}(kseq{}(inj{SortPrint{}, SortKItem{}}(VarPrint:SortPrint{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isScopeCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortScopeCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortScopeCell{}, SortKItem{}}(Var'Unds'1:SortScopeCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisScopeCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isScopeCell(inj{ScopeCell,KItem}(ScopeCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisScopeCell{}(kseq{}(inj{SortScopeCell{}, SortKItem{}}(VarScopeCell:SortScopeCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isScopeCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortScopeCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortScopeCellOpt{}, SortKItem{}}(Var'Unds'1:SortScopeCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisScopeCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isScopeCellOpt(inj{ScopeCellOpt,KItem}(ScopeCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisScopeCellOpt{}(kseq{}(inj{SortScopeCellOpt{}, SortKItem{}}(VarScopeCellOpt:SortScopeCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isSet(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortSet{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortSet{}, SortKItem{}}(Var'Unds'1:SortSet{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSet{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isSet(inj{Set,KItem}(Set))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSet{}(kseq{}(inj{SortSet{}, SortKItem{}}(VarSet:SortSet{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isSkip(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortSkip{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortSkip{}, SortKItem{}}(Var'Unds'1:SortSkip{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSkip{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isSkip(inj{Skip,KItem}(Skip))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSkip{}(kseq{}(inj{SortSkip{}, SortKItem{}}(VarSkip:SortSkip{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isStmt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortStmt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortStmt{}, SortKItem{}}(Var'Unds'1:SortStmt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStmt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isStmt(inj{Stmt,KItem}(Stmt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStmt{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarStmt:SortStmt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isStoreCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortStoreCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortStoreCell{}, SortKItem{}}(Var'Unds'0:SortStoreCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStoreCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isStoreCell(inj{StoreCell,KItem}(StoreCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStoreCell{}(kseq{}(inj{SortStoreCell{}, SortKItem{}}(VarStoreCell:SortStoreCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isStoreCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortStoreCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortStoreCellOpt{}, SortKItem{}}(Var'Unds'0:SortStoreCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStoreCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isStoreCellOpt(inj{StoreCellOpt,KItem}(StoreCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStoreCellOpt{}(kseq{}(inj{SortStoreCellOpt{}, SortKItem{}}(VarStoreCellOpt:SortStoreCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isStream(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortStream{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortStream{}, SortKItem{}}(Var'Unds'0:SortStream{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStream{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isStream(inj{Stream,KItem}(Stream))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStream{}(kseq{}(inj{SortStream{}, SortKItem{}}(VarStream:SortStream{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortString{}, SortKItem{}}(Var'Unds'1:SortString{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisString{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isString(inj{String,KItem}(String))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisString{}(kseq{}(inj{SortString{}, SortKItem{}}(VarString:SortString{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isStringList(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortStringList{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortStringList{}, SortKItem{}}(Var'Unds'1:SortStringList{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStringList{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isStringList(inj{StringList,KItem}(StringList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStringList{}(kseq{}(inj{SortStringList{}, SortKItem{}}(VarStringList:SortStringList{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTCell{}, SortKItem{}}(Var'Unds'1:SortTCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTCell(inj{TCell,KItem}(TCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTCell{}(kseq{}(inj{SortTCell{}, SortKItem{}}(VarTCell:SortTCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTCellFragment{}, SortKItem{}}(Var'Unds'1:SortTCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTCellFragment(inj{TCellFragment,KItem}(TCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTCellFragment{}(kseq{}(inj{SortTCellFragment{}, SortKItem{}}(VarTCellFragment:SortTCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTCellOpt{}, SortKItem{}}(Var'Unds'0:SortTCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTCellOpt(inj{TCellOpt,KItem}(TCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTCellOpt{}(kseq{}(inj{SortTCellOpt{}, SortKItem{}}(VarTCellOpt:SortTCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTempCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTempCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTempCell{}, SortKItem{}}(Var'Unds'1:SortTempCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTempCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTempCell(inj{TempCell,KItem}(TempCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTempCell{}(kseq{}(inj{SortTempCell{}, SortKItem{}}(VarTempCell:SortTempCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTempCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTempCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTempCellOpt{}, SortKItem{}}(Var'Unds'1:SortTempCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTempCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTempCellOpt(inj{TempCellOpt,KItem}(TempCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTempCellOpt{}(kseq{}(inj{SortTempCellOpt{}, SortKItem{}}(VarTempCellOpt:SortTempCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isThreadCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortThreadCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortThreadCell{}, SortKItem{}}(Var'Unds'1:SortThreadCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisThreadCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isThreadCell(inj{ThreadCell,KItem}(ThreadCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisThreadCell{}(kseq{}(inj{SortThreadCell{}, SortKItem{}}(VarThreadCell:SortThreadCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isThreadCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortThreadCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortThreadCellFragment{}, SortKItem{}}(Var'Unds'0:SortThreadCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisThreadCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isThreadCellFragment(inj{ThreadCellFragment,KItem}(ThreadCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisThreadCellFragment{}(kseq{}(inj{SortThreadCellFragment{}, SortKItem{}}(VarThreadCellFragment:SortThreadCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isThreadCellMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortThreadCellMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortThreadCellMap{}, SortKItem{}}(Var'Unds'1:SortThreadCellMap{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisThreadCellMap{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isThreadCellMap(inj{ThreadCellMap,KItem}(ThreadCellMap))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisThreadCellMap{}(kseq{}(inj{SortThreadCellMap{}, SortKItem{}}(VarThreadCellMap:SortThreadCellMap{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isValueType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortValueType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortValueType{}, SortKItem{}}(Var'Unds'0:SortValueType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValueType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isValueType(inj{ValueType,KItem}(ValueType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValueType{}(kseq{}(inj{SortValueType{}, SortKItem{}}(VarValueType:SortValueType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isVarDeclaration(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortVarDeclaration{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortVarDeclaration{}, SortKItem{}}(Var'Unds'1:SortVarDeclaration{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisVarDeclaration{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isVarDeclaration(inj{VarDeclaration,KItem}(VarDeclaration))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisVarDeclaration{}(kseq{}(inj{SortVarDeclaration{}, SortKItem{}}(VarVarDeclaration:SortVarDeclaration{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isVarMod(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortVarMod{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortVarMod{}, SortKItem{}}(Var'Unds'1:SortVarMod{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisVarMod{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isVarMod(inj{VarMod,KItem}(VarMod))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisVarMod{}(kseq{}(inj{SortVarMod{}, SortKItem{}}(VarVarMod:SortVarMod{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isVarType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortVarType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortVarType{}, SortKItem{}}(Var'Unds'1:SortVarType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisVarType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isVarType(inj{VarType,KItem}(VarType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisVarType{}(kseq{}(inj{SortVarType{}, SortKItem{}}(VarVarType:SortVarType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isWhileStmt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortWhileStmt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortWhileStmt{}, SortKItem{}}(Var'Unds'1:SortWhileStmt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWhileStmt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isWhileStmt(inj{WhileStmt,KItem}(WhileStmt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWhileStmt{}(kseq{}(inj{SortWhileStmt{}, SortKItem{}}(VarWhileStmt:SortWhileStmt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I1 requires `_<=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(38650d96d25c007c33eb715dd4181e4a42c220f5e5176d70f1681d38a912778c) contentStartColumn(8) contentStartLine(468) org.kframework.attributes.Location(Location(468,8,468,57)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(VarI1:SortInt{},VarI2:SortInt{}),
        VarI1:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("468"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(468,8,468,57)"), UNIQUE'Unds'ID{}("38650d96d25c007c33eb715dd4181e4a42c220f5e5176d70f1681d38a912778c")]

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I2 requires `_>=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(ed79be21493dc628c839ab8c3af1a0a402499df0f71a6d5566fdf35fdd7b16c4) contentStartColumn(8) contentStartLine(469) org.kframework.attributes.Location(Location(469,8,469,57)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(VarI1:SortInt{},VarI2:SortInt{}),
        VarI2:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("469"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(469,8,469,57)"), UNIQUE'Unds'ID{}("ed79be21493dc628c839ab8c3af1a0a402499df0f71a6d5566fdf35fdd7b16c4")]

// rule `notBool_`(#token("true","Bool") #as _0)=>#token("false","Bool") requires _0 ensures _0 [UNIQUE_ID(de18dba5cb1b6e56941a63279edb1d16da29d7a997a3e82cbc2b81b066eadf47) contentStartColumn(8) contentStartLine(320) org.kframework.attributes.Location(Location(320,8,320,29)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'0:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        LblnotBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'0:SortBool{})),
        \dv{SortBool{}}("false")),
      \equals{SortBool{},R}(
        Var'Unds'0:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("320"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(320,8,320,29)"), UNIQUE'Unds'ID{}("de18dba5cb1b6e56941a63279edb1d16da29d7a997a3e82cbc2b81b066eadf47")]

// rule `notBool_`(#token("false","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dbe4d83961158619e994f90623f08be11020d80c56685ef1ec2dd2b15760c474) contentStartColumn(8) contentStartLine(321) org.kframework.attributes.Location(Location(321,8,321,29)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblnotBool'Unds'{}(\dv{SortBool{}}("false")),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("321"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(321,8,321,29)"), UNIQUE'Unds'ID{}("dbe4d83961158619e994f90623f08be11020d80c56685ef1ec2dd2b15760c474")]

// rule `project:#tempFile:fd`(#tempFile(K0,K1))=>K1 requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lblproject'ColnHash'tempFile'Coln'fd{}(Lbl'Hash'tempFile{}(VarK0:SortString{},VarK1:SortInt{})),
        VarK1:SortInt{}),
      \top{R}()))
  []

// rule `project:#tempFile:path`(#tempFile(K0,K1))=>K0 requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        Lblproject'ColnHash'tempFile'Coln'path{}(Lbl'Hash'tempFile{}(VarK0:SortString{},VarK1:SortInt{})),
        VarK0:SortString{}),
      \top{R}()))
  []

// rule `project:#unknownIOError:errno`(#unknownIOError(K0))=>K0 requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lblproject'ColnHash'unknownIOError'Coln'errno{}(Lbl'Hash'unknownIOError{}(VarK0:SortInt{})),
        VarK0:SortInt{}),
      \top{R}()))
  []

// rule `project:AExp`(inj{AExp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortAExp{},R} (
        Lblproject'Coln'AExp{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK:SortAExp{}),dotk{}())),
        VarK:SortAExp{}),
      \top{R}()))
  [projection{}()]

// rule `project:AExpMod`(inj{AExpMod,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortAExpMod{},R} (
        Lblproject'Coln'AExpMod{}(kseq{}(inj{SortAExpMod{}, SortKItem{}}(VarK:SortAExpMod{}),dotk{}())),
        VarK:SortAExpMod{}),
      \top{R}()))
  [projection{}()]

// rule `project:ArrayList`(inj{ArrayList,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortArrayList{},R} (
        Lblproject'Coln'ArrayList{}(kseq{}(inj{SortArrayList{}, SortKItem{}}(VarK:SortArrayList{}),dotk{}())),
        VarK:SortArrayList{}),
      \top{R}()))
  [projection{}()]

// rule `project:Assigner`(inj{Assigner,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortAssigner{},R} (
        Lblproject'Coln'Assigner{}(kseq{}(inj{SortAssigner{}, SortKItem{}}(VarK:SortAssigner{}),dotk{}())),
        VarK:SortAssigner{}),
      \top{R}()))
  [projection{}()]

// rule `project:BExp`(inj{BExp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBExp{},R} (
        Lblproject'Coln'BExp{}(kseq{}(inj{SortBExp{}, SortKItem{}}(VarK:SortBExp{}),dotk{}())),
        VarK:SortBExp{}),
      \top{R}()))
  [projection{}()]

// rule `project:Block`(inj{Block,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBlock{},R} (
        Lblproject'Coln'Block{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarK:SortBlock{}),dotk{}())),
        VarK:SortBlock{}),
      \top{R}()))
  [projection{}()]

// rule `project:Bool`(inj{Bool,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lblproject'Coln'Bool{}(kseq{}(inj{SortBool{}, SortKItem{}}(VarK:SortBool{}),dotk{}())),
        VarK:SortBool{}),
      \top{R}()))
  [projection{}()]

// rule `project:Cell`(inj{Cell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCell{},R} (
        Lblproject'Coln'Cell{}(kseq{}(inj{SortCell{}, SortKItem{}}(VarK:SortCell{}),dotk{}())),
        VarK:SortCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:DoWhileStmt`(inj{DoWhileStmt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDoWhileStmt{},R} (
        Lblproject'Coln'DoWhileStmt{}(kseq{}(inj{SortDoWhileStmt{}, SortKItem{}}(VarK:SortDoWhileStmt{}),dotk{}())),
        VarK:SortDoWhileStmt{}),
      \top{R}()))
  [projection{}()]

// rule `project:ElseIfStmt`(inj{ElseIfStmt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortElseIfStmt{},R} (
        Lblproject'Coln'ElseIfStmt{}(kseq{}(inj{SortElseIfStmt{}, SortKItem{}}(VarK:SortElseIfStmt{}),dotk{}())),
        VarK:SortElseIfStmt{}),
      \top{R}()))
  [projection{}()]

// rule `project:EnvCell`(inj{EnvCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortEnvCell{},R} (
        Lblproject'Coln'EnvCell{}(kseq{}(inj{SortEnvCell{}, SortKItem{}}(VarK:SortEnvCell{}),dotk{}())),
        VarK:SortEnvCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:EnvCellOpt`(inj{EnvCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortEnvCellOpt{},R} (
        Lblproject'Coln'EnvCellOpt{}(kseq{}(inj{SortEnvCellOpt{}, SortKItem{}}(VarK:SortEnvCellOpt{}),dotk{}())),
        VarK:SortEnvCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Float`(inj{Float,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFloat{},R} (
        Lblproject'Coln'Float{}(kseq{}(inj{SortFloat{}, SortKItem{}}(VarK:SortFloat{}),dotk{}())),
        VarK:SortFloat{}),
      \top{R}()))
  [projection{}()]

// rule `project:ForEachStmt`(inj{ForEachStmt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortForEachStmt{},R} (
        Lblproject'Coln'ForEachStmt{}(kseq{}(inj{SortForEachStmt{}, SortKItem{}}(VarK:SortForEachStmt{}),dotk{}())),
        VarK:SortForEachStmt{}),
      \top{R}()))
  [projection{}()]

// rule `project:ForStmt`(inj{ForStmt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortForStmt{},R} (
        Lblproject'Coln'ForStmt{}(kseq{}(inj{SortForStmt{}, SortKItem{}}(VarK:SortForStmt{}),dotk{}())),
        VarK:SortForStmt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Fun`(inj{Fun,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFun{},R} (
        Lblproject'Coln'Fun{}(kseq{}(inj{SortFun{}, SortKItem{}}(VarK:SortFun{}),dotk{}())),
        VarK:SortFun{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncCall`(inj{FuncCall,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncCall{},R} (
        Lblproject'Coln'FuncCall{}(kseq{}(inj{SortFuncCall{}, SortKItem{}}(VarK:SortFuncCall{}),dotk{}())),
        VarK:SortFuncCall{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncDec`(inj{FuncDec,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncDec{},R} (
        Lblproject'Coln'FuncDec{}(kseq{}(inj{SortFuncDec{}, SortKItem{}}(VarK:SortFuncDec{}),dotk{}())),
        VarK:SortFuncDec{}),
      \top{R}()))
  [projection{}()]

// rule `project:FunctionsCell`(inj{FunctionsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFunctionsCell{},R} (
        Lblproject'Coln'FunctionsCell{}(kseq{}(inj{SortFunctionsCell{}, SortKItem{}}(VarK:SortFunctionsCell{}),dotk{}())),
        VarK:SortFunctionsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FunctionsCellFragment`(inj{FunctionsCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFunctionsCellFragment{},R} (
        Lblproject'Coln'FunctionsCellFragment{}(kseq{}(inj{SortFunctionsCellFragment{}, SortKItem{}}(VarK:SortFunctionsCellFragment{}),dotk{}())),
        VarK:SortFunctionsCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:FunctionsCellOpt`(inj{FunctionsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFunctionsCellOpt{},R} (
        Lblproject'Coln'FunctionsCellOpt{}(kseq{}(inj{SortFunctionsCellOpt{}, SortKItem{}}(VarK:SortFunctionsCellOpt{}),dotk{}())),
        VarK:SortFunctionsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:GeneratedCounterCell`(inj{GeneratedCounterCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedCounterCell{},R} (
        Lblproject'Coln'GeneratedCounterCell{}(kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarK:SortGeneratedCounterCell{}),dotk{}())),
        VarK:SortGeneratedCounterCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GeneratedCounterCellOpt`(inj{GeneratedCounterCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedCounterCellOpt{},R} (
        Lblproject'Coln'GeneratedCounterCellOpt{}(kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarK:SortGeneratedCounterCellOpt{}),dotk{}())),
        VarK:SortGeneratedCounterCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:GeneratedTopCell`(inj{GeneratedTopCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedTopCell{},R} (
        Lblproject'Coln'GeneratedTopCell{}(kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarK:SortGeneratedTopCell{}),dotk{}())),
        VarK:SortGeneratedTopCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GeneratedTopCellFragment`(inj{GeneratedTopCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedTopCellFragment{},R} (
        Lblproject'Coln'GeneratedTopCellFragment{}(kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarK:SortGeneratedTopCellFragment{}),dotk{}())),
        VarK:SortGeneratedTopCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:IOError`(inj{IOError,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIOError{},R} (
        Lblproject'Coln'IOError{}(kseq{}(inj{SortIOError{}, SortKItem{}}(VarK:SortIOError{}),dotk{}())),
        VarK:SortIOError{}),
      \top{R}()))
  [projection{}()]

// rule `project:IOFile`(inj{IOFile,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIOFile{},R} (
        Lblproject'Coln'IOFile{}(kseq{}(inj{SortIOFile{}, SortKItem{}}(VarK:SortIOFile{}),dotk{}())),
        VarK:SortIOFile{}),
      \top{R}()))
  [projection{}()]

// rule `project:IOInt`(inj{IOInt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIOInt{},R} (
        Lblproject'Coln'IOInt{}(kseq{}(inj{SortIOInt{}, SortKItem{}}(VarK:SortIOInt{}),dotk{}())),
        VarK:SortIOInt{}),
      \top{R}()))
  [projection{}()]

// rule `project:IOString`(inj{IOString,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIOString{},R} (
        Lblproject'Coln'IOString{}(kseq{}(inj{SortIOString{}, SortKItem{}}(VarK:SortIOString{}),dotk{}())),
        VarK:SortIOString{}),
      \top{R}()))
  [projection{}()]

// rule `project:Id`(inj{Id,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortId{},R} (
        Lblproject'Coln'Id{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK:SortId{}),dotk{}())),
        VarK:SortId{}),
      \top{R}()))
  [projection{}()]

// rule `project:IdAssigner`(inj{IdAssigner,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIdAssigner{},R} (
        Lblproject'Coln'IdAssigner{}(kseq{}(inj{SortIdAssigner{}, SortKItem{}}(VarK:SortIdAssigner{}),dotk{}())),
        VarK:SortIdAssigner{}),
      \top{R}()))
  [projection{}()]

// rule `project:IdCell`(inj{IdCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIdCell{},R} (
        Lblproject'Coln'IdCell{}(kseq{}(inj{SortIdCell{}, SortKItem{}}(VarK:SortIdCell{}),dotk{}())),
        VarK:SortIdCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:IdCellOpt`(inj{IdCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIdCellOpt{},R} (
        Lblproject'Coln'IdCellOpt{}(kseq{}(inj{SortIdCellOpt{}, SortKItem{}}(VarK:SortIdCellOpt{}),dotk{}())),
        VarK:SortIdCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:IdExp`(inj{IdExp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIdExp{},R} (
        Lblproject'Coln'IdExp{}(kseq{}(inj{SortIdExp{}, SortKItem{}}(VarK:SortIdExp{}),dotk{}())),
        VarK:SortIdExp{}),
      \top{R}()))
  [projection{}()]

// rule `project:IdList`(inj{IdList,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIdList{},R} (
        Lblproject'Coln'IdList{}(kseq{}(inj{SortIdList{}, SortKItem{}}(VarK:SortIdList{}),dotk{}())),
        VarK:SortIdList{}),
      \top{R}()))
  [projection{}()]

// rule `project:IfStmt`(inj{IfStmt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIfStmt{},R} (
        Lblproject'Coln'IfStmt{}(kseq{}(inj{SortIfStmt{}, SortKItem{}}(VarK:SortIfStmt{}),dotk{}())),
        VarK:SortIfStmt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Int`(inj{Int,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lblproject'Coln'Int{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarK:SortInt{}),dotk{}())),
        VarK:SortInt{}),
      \top{R}()))
  [projection{}()]

// rule `project:IntList`(inj{IntList,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIntList{},R} (
        Lblproject'Coln'IntList{}(kseq{}(inj{SortIntList{}, SortKItem{}}(VarK:SortIntList{}),dotk{}())),
        VarK:SortIntList{}),
      \top{R}()))
  [projection{}()]

// rule `project:KCell`(inj{KCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKCell{},R} (
        Lblproject'Coln'KCell{}(kseq{}(inj{SortKCell{}, SortKItem{}}(VarK:SortKCell{}),dotk{}())),
        VarK:SortKCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:KCellOpt`(inj{KCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKCellOpt{},R} (
        Lblproject'Coln'KCellOpt{}(kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarK:SortKCellOpt{}),dotk{}())),
        VarK:SortKCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKItem{},R} (
        Lblproject'Coln'KItem{}(kseq{}(VarK:SortKItem{},dotk{}())),
        VarK:SortKItem{}),
      \top{R}()))
  [projection{}()]

// rule `project:KResult`(inj{KResult,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKResult{},R} (
        Lblproject'Coln'KResult{}(kseq{}(inj{SortKResult{}, SortKItem{}}(VarK:SortKResult{}),dotk{}())),
        VarK:SortKResult{}),
      \top{R}()))
  [projection{}()]

// rule `project:KVariable`(inj{KVariable,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKVariable{},R} (
        Lblproject'Coln'KVariable{}(kseq{}(inj{SortKVariable{}, SortKItem{}}(VarK:SortKVariable{}),dotk{}())),
        VarK:SortKVariable{}),
      \top{R}()))
  [projection{}()]

// rule `project:List`(inj{List,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortList{},R} (
        Lblproject'Coln'List{}(kseq{}(inj{SortList{}, SortKItem{}}(VarK:SortList{}),dotk{}())),
        VarK:SortList{}),
      \top{R}()))
  [projection{}()]

// rule `project:LocCell`(inj{LocCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLocCell{},R} (
        Lblproject'Coln'LocCell{}(kseq{}(inj{SortLocCell{}, SortKItem{}}(VarK:SortLocCell{}),dotk{}())),
        VarK:SortLocCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:LocCellOpt`(inj{LocCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLocCellOpt{},R} (
        Lblproject'Coln'LocCellOpt{}(kseq{}(inj{SortLocCellOpt{}, SortKItem{}}(VarK:SortLocCellOpt{}),dotk{}())),
        VarK:SortLocCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Local`(inj{Local,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLocal{},R} (
        Lblproject'Coln'Local{}(kseq{}(inj{SortLocal{}, SortKItem{}}(VarK:SortLocal{}),dotk{}())),
        VarK:SortLocal{}),
      \top{R}()))
  [projection{}()]

// rule `project:LocalEnvCell`(inj{LocalEnvCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLocalEnvCell{},R} (
        Lblproject'Coln'LocalEnvCell{}(kseq{}(inj{SortLocalEnvCell{}, SortKItem{}}(VarK:SortLocalEnvCell{}),dotk{}())),
        VarK:SortLocalEnvCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:LocalEnvCellOpt`(inj{LocalEnvCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLocalEnvCellOpt{},R} (
        Lblproject'Coln'LocalEnvCellOpt{}(kseq{}(inj{SortLocalEnvCellOpt{}, SortKItem{}}(VarK:SortLocalEnvCellOpt{}),dotk{}())),
        VarK:SortLocalEnvCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Map`(inj{Map,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMap{},R} (
        Lblproject'Coln'Map{}(kseq{}(inj{SortMap{}, SortKItem{}}(VarK:SortMap{}),dotk{}())),
        VarK:SortMap{}),
      \top{R}()))
  [projection{}()]

// rule `project:OutCell`(inj{OutCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortOutCell{},R} (
        Lblproject'Coln'OutCell{}(kseq{}(inj{SortOutCell{}, SortKItem{}}(VarK:SortOutCell{}),dotk{}())),
        VarK:SortOutCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:OutCellOpt`(inj{OutCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortOutCellOpt{},R} (
        Lblproject'Coln'OutCellOpt{}(kseq{}(inj{SortOutCellOpt{}, SortKItem{}}(VarK:SortOutCellOpt{}),dotk{}())),
        VarK:SortOutCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Params`(inj{Params,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortParams{},R} (
        Lblproject'Coln'Params{}(kseq{}(inj{SortParams{}, SortKItem{}}(VarK:SortParams{}),dotk{}())),
        VarK:SortParams{}),
      \top{R}()))
  [projection{}()]

// rule `project:ParamsCell`(inj{ParamsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortParamsCell{},R} (
        Lblproject'Coln'ParamsCell{}(kseq{}(inj{SortParamsCell{}, SortKItem{}}(VarK:SortParamsCell{}),dotk{}())),
        VarK:SortParamsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ParamsCellOpt`(inj{ParamsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortParamsCellOpt{},R} (
        Lblproject'Coln'ParamsCellOpt{}(kseq{}(inj{SortParamsCellOpt{}, SortKItem{}}(VarK:SortParamsCellOpt{}),dotk{}())),
        VarK:SortParamsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Print`(inj{Print,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortPrint{},R} (
        Lblproject'Coln'Print{}(kseq{}(inj{SortPrint{}, SortKItem{}}(VarK:SortPrint{}),dotk{}())),
        VarK:SortPrint{}),
      \top{R}()))
  [projection{}()]

// rule `project:ScopeCell`(inj{ScopeCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortScopeCell{},R} (
        Lblproject'Coln'ScopeCell{}(kseq{}(inj{SortScopeCell{}, SortKItem{}}(VarK:SortScopeCell{}),dotk{}())),
        VarK:SortScopeCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ScopeCellOpt`(inj{ScopeCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortScopeCellOpt{},R} (
        Lblproject'Coln'ScopeCellOpt{}(kseq{}(inj{SortScopeCellOpt{}, SortKItem{}}(VarK:SortScopeCellOpt{}),dotk{}())),
        VarK:SortScopeCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Set`(inj{Set,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSet{},R} (
        Lblproject'Coln'Set{}(kseq{}(inj{SortSet{}, SortKItem{}}(VarK:SortSet{}),dotk{}())),
        VarK:SortSet{}),
      \top{R}()))
  [projection{}()]

// rule `project:Skip`(inj{Skip,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSkip{},R} (
        Lblproject'Coln'Skip{}(kseq{}(inj{SortSkip{}, SortKItem{}}(VarK:SortSkip{}),dotk{}())),
        VarK:SortSkip{}),
      \top{R}()))
  [projection{}()]

// rule `project:Stmt`(inj{Stmt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortStmt{},R} (
        Lblproject'Coln'Stmt{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarK:SortStmt{}),dotk{}())),
        VarK:SortStmt{}),
      \top{R}()))
  [projection{}()]

// rule `project:StoreCell`(inj{StoreCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortStoreCell{},R} (
        Lblproject'Coln'StoreCell{}(kseq{}(inj{SortStoreCell{}, SortKItem{}}(VarK:SortStoreCell{}),dotk{}())),
        VarK:SortStoreCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:StoreCellOpt`(inj{StoreCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortStoreCellOpt{},R} (
        Lblproject'Coln'StoreCellOpt{}(kseq{}(inj{SortStoreCellOpt{}, SortKItem{}}(VarK:SortStoreCellOpt{}),dotk{}())),
        VarK:SortStoreCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Stream`(inj{Stream,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortStream{},R} (
        Lblproject'Coln'Stream{}(kseq{}(inj{SortStream{}, SortKItem{}}(VarK:SortStream{}),dotk{}())),
        VarK:SortStream{}),
      \top{R}()))
  [projection{}()]

// rule `project:String`(inj{String,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        Lblproject'Coln'String{}(kseq{}(inj{SortString{}, SortKItem{}}(VarK:SortString{}),dotk{}())),
        VarK:SortString{}),
      \top{R}()))
  [projection{}()]

// rule `project:StringList`(inj{StringList,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortStringList{},R} (
        Lblproject'Coln'StringList{}(kseq{}(inj{SortStringList{}, SortKItem{}}(VarK:SortStringList{}),dotk{}())),
        VarK:SortStringList{}),
      \top{R}()))
  [projection{}()]

// rule `project:TCell`(inj{TCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTCell{},R} (
        Lblproject'Coln'TCell{}(kseq{}(inj{SortTCell{}, SortKItem{}}(VarK:SortTCell{}),dotk{}())),
        VarK:SortTCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TCellFragment`(inj{TCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTCellFragment{},R} (
        Lblproject'Coln'TCellFragment{}(kseq{}(inj{SortTCellFragment{}, SortKItem{}}(VarK:SortTCellFragment{}),dotk{}())),
        VarK:SortTCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:TCellOpt`(inj{TCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTCellOpt{},R} (
        Lblproject'Coln'TCellOpt{}(kseq{}(inj{SortTCellOpt{}, SortKItem{}}(VarK:SortTCellOpt{}),dotk{}())),
        VarK:SortTCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:TempCell`(inj{TempCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTempCell{},R} (
        Lblproject'Coln'TempCell{}(kseq{}(inj{SortTempCell{}, SortKItem{}}(VarK:SortTempCell{}),dotk{}())),
        VarK:SortTempCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TempCellOpt`(inj{TempCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTempCellOpt{},R} (
        Lblproject'Coln'TempCellOpt{}(kseq{}(inj{SortTempCellOpt{}, SortKItem{}}(VarK:SortTempCellOpt{}),dotk{}())),
        VarK:SortTempCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:ThreadCell`(inj{ThreadCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortThreadCell{},R} (
        Lblproject'Coln'ThreadCell{}(kseq{}(inj{SortThreadCell{}, SortKItem{}}(VarK:SortThreadCell{}),dotk{}())),
        VarK:SortThreadCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ThreadCellFragment`(inj{ThreadCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortThreadCellFragment{},R} (
        Lblproject'Coln'ThreadCellFragment{}(kseq{}(inj{SortThreadCellFragment{}, SortKItem{}}(VarK:SortThreadCellFragment{}),dotk{}())),
        VarK:SortThreadCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:ThreadCellMap`(inj{ThreadCellMap,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortThreadCellMap{},R} (
        Lblproject'Coln'ThreadCellMap{}(kseq{}(inj{SortThreadCellMap{}, SortKItem{}}(VarK:SortThreadCellMap{}),dotk{}())),
        VarK:SortThreadCellMap{}),
      \top{R}()))
  [projection{}()]

// rule `project:ValueType`(inj{ValueType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValueType{},R} (
        Lblproject'Coln'ValueType{}(kseq{}(inj{SortValueType{}, SortKItem{}}(VarK:SortValueType{}),dotk{}())),
        VarK:SortValueType{}),
      \top{R}()))
  [projection{}()]

// rule `project:VarDeclaration`(inj{VarDeclaration,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVarDeclaration{},R} (
        Lblproject'Coln'VarDeclaration{}(kseq{}(inj{SortVarDeclaration{}, SortKItem{}}(VarK:SortVarDeclaration{}),dotk{}())),
        VarK:SortVarDeclaration{}),
      \top{R}()))
  [projection{}()]

// rule `project:VarMod`(inj{VarMod,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVarMod{},R} (
        Lblproject'Coln'VarMod{}(kseq{}(inj{SortVarMod{}, SortKItem{}}(VarK:SortVarMod{}),dotk{}())),
        VarK:SortVarMod{}),
      \top{R}()))
  [projection{}()]

// rule `project:VarType`(inj{VarType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVarType{},R} (
        Lblproject'Coln'VarType{}(kseq{}(inj{SortVarType{}, SortKItem{}}(VarK:SortVarType{}),dotk{}())),
        VarK:SortVarType{}),
      \top{R}()))
  [projection{}()]

// rule `project:WhileStmt`(inj{WhileStmt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortWhileStmt{},R} (
        Lblproject'Coln'WhileStmt{}(kseq{}(inj{SortWhileStmt{}, SortKItem{}}(VarK:SortWhileStmt{}),dotk{}())),
        VarK:SortWhileStmt{}),
      \top{R}()))
  [projection{}()]

// rule `replace(_,_,_,_)_STRING_String_String_String_String_Int`(Source,ToReplace,Replacement,Count)=>`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`substrString(_,_,_)_STRING_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`replace(_,_,_,_)_STRING_String_String_String_String_Int`(`substrString(_,_,_)_STRING_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING_Int_String`(ToReplace)),`lengthString(_)_STRING_Int_String`(Source)),ToReplace,Replacement,`_-Int_`(Count,#token("1","Int")))) requires `_>Int_`(Count,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(b3981a47a7a07dd2dfde8ebb3ce68e70d6c5156c17d5c09d66b69ea0e87e0fc7) contentStartColumn(8) contentStartLine(637) org.kframework.attributes.Location(Location(637,8,640,30)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarCount:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{},VarCount:SortInt{}),
        Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarSource:SortString{})),VarToReplace:SortString{},VarReplacement:SortString{},Lbl'Unds'-Int'Unds'{}(VarCount:SortInt{},\dv{SortInt{}}("1"))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("637"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(637,8,640,30)"), UNIQUE'Unds'ID{}("b3981a47a7a07dd2dfde8ebb3ce68e70d6c5156c17d5c09d66b69ea0e87e0fc7")]

// rule `replace(_,_,_,_)_STRING_String_String_String_String_Int`(Source,_0,_1,#token("0","Int"))=>Source requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2e9795f7b294b7323b7f94a3bf4f1e087cb354583562eeef3dc19404700a9842) contentStartColumn(8) contentStartLine(641) org.kframework.attributes.Location(Location(641,8,641,49)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},Var'Unds'0:SortString{},Var'Unds'1:SortString{},\dv{SortInt{}}("0")),
        VarSource:SortString{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("641"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(641,8,641,49)"), UNIQUE'Unds'ID{}("2e9795f7b294b7323b7f94a3bf4f1e087cb354583562eeef3dc19404700a9842")]

// rule `replaceAll(_,_,_)_STRING_String_String_String_String`(Source,ToReplace,Replacement)=>`replace(_,_,_,_)_STRING_String_String_String_String_Int`(Source,ToReplace,Replacement,`countAllOccurrences(_,_)_STRING_Int_String_String`(Source,ToReplace)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2131063d78b401e8a24c24b15e0e699b923c56e90f2a19d1bb495d839d0b7839) contentStartColumn(8) contentStartLine(642) org.kframework.attributes.Location(Location(642,8,642,154)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{}),
        Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{},LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("642"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(642,8,642,154)"), UNIQUE'Unds'ID{}("2131063d78b401e8a24c24b15e0e699b923c56e90f2a19d1bb495d839d0b7839")]

// rule `replaceFirst(_,_,_)_STRING_String_String_String_String`(Source,ToReplace,Replacement)=>`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`substrString(_,_,_)_STRING_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`substrString(_,_,_)_STRING_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING_Int_String`(ToReplace)),`lengthString(_)_STRING_Int_String`(Source))) requires `_>=Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(39191889a120cf96dbb556bc016de17e654b155631892bfbdd3bac9737b6ed8d) contentStartColumn(8) contentStartLine(630) org.kframework.attributes.Location(Location(630,8,632,66)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{}),
        Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarSource:SortString{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("630"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(630,8,632,66)"), UNIQUE'Unds'ID{}("39191889a120cf96dbb556bc016de17e654b155631892bfbdd3bac9737b6ed8d")]

// rule `replaceFirst(_,_,_)_STRING_String_String_String_String`(Source,ToReplace,_0)=>Source requires `_<Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(16736238f7cc0d390af2ede3c6b2c558825a4e3886423d22ebadf36e7a6719cc) contentStartColumn(8) contentStartLine(633) org.kframework.attributes.Location(Location(633,8,634,57)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{},Var'Unds'0:SortString{}),
        VarSource:SortString{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("633"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(633,8,634,57)"), UNIQUE'Unds'ID{}("16736238f7cc0d390af2ede3c6b2c558825a4e3886423d22ebadf36e7a6719cc")]

// rule `rfindChar(_,_,_)_STRING_Int_String_String_Int`(S1,S2,I)=>`maxInt(_,_)_INT-COMMON_Int_Int_Int`(`rfindString(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`rfindChar(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING_Int_String`(S2)),I)) requires `_=/=String__STRING_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(0cc10e4d97a5f59dbff5a408dd91a50a37b30f9d6c8cddf135d58308b14dc956) contentStartColumn(8) contentStartLine(622) org.kframework.attributes.Location(Location(622,8,622,182)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},VarS2:SortString{},VarI:SortInt{}),
        LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("622"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(622,8,622,182)"), UNIQUE'Unds'ID{}("0cc10e4d97a5f59dbff5a408dd91a50a37b30f9d6c8cddf135d58308b14dc956")]

// rule `rfindChar(_,_,_)_STRING_Int_String_String_Int`(_0,#token("\"\"","String"),_1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(60f67db6063490c1850c8b9f1b0e73e5a3fcba11fc6a2f020e382010ab4c4a2d) contentStartColumn(8) contentStartLine(623) org.kframework.attributes.Location(Location(623,8,623,33)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(Var'Unds'0:SortString{},\dv{SortString{}}(""),Var'Unds'1:SortInt{}),
        \dv{SortInt{}}("-1")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("623"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(623,8,623,33)"), UNIQUE'Unds'ID{}("60f67db6063490c1850c8b9f1b0e73e5a3fcba11fc6a2f020e382010ab4c4a2d")]

// rule `signExtendBitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_-Int_`(`_modInt_`(`_+Int_`(`bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))),`_<<Int_`(#token("1","Int"),LEN)),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(29482d9e60834a65e556af057119896573413bf32b20b7340707b02780d5895c) contentStartColumn(8) contentStartLine(458) org.kframework.attributes.Location(Location(458,8,458,164)) org.kframework.attributes.Source(Source(/usr/local/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{},VarLEN:SortInt{}),
        Lbl'Unds'-Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{},VarLEN:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1")))),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{})),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1"))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/usr/local/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("458"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(458,8,458,164)"), UNIQUE'Unds'ID{}("29482d9e60834a65e556af057119896573413bf32b20b7340707b02780d5895c")]


// priority groups
  alias priorityLE50{}() : SortGeneratedTopCell{}
  where priorityLE50{}() := \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortBExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule6LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule7LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule8LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortBExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortBExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule9LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortBExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortBExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule10LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK1:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule11LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule12LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule13LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortInt{},\exists{SortGeneratedTopCell{}}(VarK1:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule14LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortInt{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortString{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule15LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortString{},\exists{SortGeneratedTopCell{}}(VarK1:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule16LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortString{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule17LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule18LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule19LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule20LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule21LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule22LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule23LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule24LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule25LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule26LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortVarDeclaration{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule27LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortVarDeclaration{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortBExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortVarDeclaration{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule28LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortVarDeclaration{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortId{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule29LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortBExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortId{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule30LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule31LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule32LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule33LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule34LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortBExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortBExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule35LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortBExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortBExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule36LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK1:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortBExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortBlock{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule37LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK1:SortBlock{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortBExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortBlock{},\exists{SortGeneratedTopCell{}}(VarK2:SortElseIfStmt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule38LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK1:SortBlock{},VarK2:SortElseIfStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{})))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortId{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule39LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortBExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortId{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule40LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortId{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule41LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortBExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortId{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortKItem{},rule42LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'8:SortKItem{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarE:SortBExp{},\exists{SortGeneratedTopCell{}}(VarS:SortStmt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortDoWhileStmt{},rule43LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarE:SortBExp{},VarS:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'9:SortDoWhileStmt{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarE:SortBExp{},\exists{SortGeneratedTopCell{}}(VarS:SortStmt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortWhileStmt{},rule44LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarE:SortBExp{},VarS:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{},Var'Unds'9:SortWhileStmt{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortKItem{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'7:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortStoreCell{},rule45LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI:SortId{},VarL:SortKItem{},VarV:SortKItem{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortLocCell{},Var'Unds'7:SortEnvCell{},Var'Unds'9:SortStoreCell{}))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortBExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule46LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortBool{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule47LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortBool{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule48LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule49LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule50LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule51LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI1:SortInt{},\exists{SortGeneratedTopCell{}}(VarI2:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule52LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortBExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortBExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule53LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK1:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortBExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortBExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule54LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortBExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortBool{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortLocCell{},rule55LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortBExp{},Var'Unds'1:SortOutCell{},Var'Unds'12:SortBool{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarE:SortBExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortBool{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule56LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarE:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortBool{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortThreadCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortLocalEnvCell{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarP:SortK{},\exists{SortGeneratedTopCell{}}(VarS:SortStmt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortLocCell{},rule57LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortThreadCellMap{},VarDotVar4:SortLocalEnvCell{},VarI:SortId{},VarP:SortK{},VarS:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortEnvCell{},Var'Unds'2:SortStoreCell{},Var'Unds'3:SortLocCell{})))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortThreadCellMap{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortInt{},\exists{SortGeneratedTopCell{}}(VarP:SortId{},\exists{SortGeneratedTopCell{}}(VarPs:SortParams{},\exists{SortGeneratedTopCell{}}(VarRho:SortMap{},\exists{SortGeneratedTopCell{}}(VarSMap:SortMap{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(VarVs:SortIntList{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortScopeCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortParamsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortEnvCell{},rule58LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortThreadCellMap{},VarI:SortId{},VarL:SortInt{},VarP:SortId{},VarPs:SortParams{},VarRho:SortMap{},VarSMap:SortMap{},VarV:SortInt{},VarVs:SortIntList{},Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Var'Unds'2:SortOutCell{},Var'Unds'3:SortEnvCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule59LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule60LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI1:SortInt{},\exists{SortGeneratedTopCell{}}(VarI2:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule61LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortEnvCell{},rule62LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortEnvCell{})))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortInt{},\exists{SortGeneratedTopCell{}}(VarK1:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule63LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortInt{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI1:SortInt{},\exists{SortGeneratedTopCell{}}(VarI2:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule64LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule65LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortString{},\exists{SortGeneratedTopCell{}}(VarK1:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule66LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortString{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI1:SortString{},\exists{SortGeneratedTopCell{}}(VarI2:SortString{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule67LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortString{},VarI2:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortString{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule68LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortEnvCell{},rule69LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortEnvCell{})))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule70LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule71LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI1:SortInt{},\exists{SortGeneratedTopCell{}}(VarI2:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule72LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule73LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule74LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI1:SortInt{},\exists{SortGeneratedTopCell{}}(VarI2:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule75LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule76LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule77LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI1:SortInt{},\exists{SortGeneratedTopCell{}}(VarI2:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule78LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule79LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule80LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI1:SortInt{},\exists{SortGeneratedTopCell{}}(VarI2:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule81LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule82LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule83LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI1:SortInt{},\exists{SortGeneratedTopCell{}}(VarI2:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule84LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortInt{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(VarVm:SortVarMod{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortVarDeclaration{},rule85LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'12:SortAExp{},Var'Unds'14:SortEnvCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{})))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortId{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(VarVm:SortVarMod{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortVarDeclaration{},rule86LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'13:SortAExp{},Var'Unds'14:SortEnvCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{})))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortInt{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(VarVm:SortVarMod{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortVarDeclaration{},rule87LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'13:SortEnvCell{},Var'Unds'15:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{}))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortInt{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(VarVm:SortVarMod{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortVarDeclaration{},rule88LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'12:SortAExp{},Var'Unds'14:SortEnvCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{})))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortId{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(VarVm:SortVarMod{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortVarDeclaration{},rule89LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'13:SortAExp{},Var'Unds'14:SortEnvCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{})))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortId{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(VarVm:SortVarMod{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortVarDeclaration{},rule90LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'13:SortAExp{},Var'Unds'14:SortEnvCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{})))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortString{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortString{},\exists{SortGeneratedTopCell{}}(VarVm:SortVarMod{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortVarDeclaration{},rule91LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortString{},VarI3:SortId{},VarL:SortKItem{},VarV:SortString{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'13:SortEnvCell{},Var'Unds'15:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{}))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortVarDeclaration{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule92LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortVarDeclaration{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarV:SortVarMod{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortLocCell{},rule93LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarV:SortVarMod{},Var'Unds'0:SortInt{},Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortInt{},\exists{SortGeneratedTopCell{}}(VarMEnv:SortMap{},\exists{SortGeneratedTopCell{}}(VarMStore:SortMap{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(VarVm:SortVarMod{},\exists{SortGeneratedTopCell{}}(VarXs:SortIdList{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortAExp{},rule94LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortInt{},VarVm:SortVarMod{},VarXs:SortIdList{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'9:SortAExp{}))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarV:SortVarMod{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortString{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortLocCell{},rule95LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarV:SortVarMod{},Var'Unds'0:SortString{},Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortInt{},\exists{SortGeneratedTopCell{}}(VarMEnv:SortMap{},\exists{SortGeneratedTopCell{}}(VarMStore:SortMap{},\exists{SortGeneratedTopCell{}}(VarV:SortString{},\exists{SortGeneratedTopCell{}}(VarVm:SortVarMod{},\exists{SortGeneratedTopCell{}}(VarXs:SortIdList{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortAExp{},rule96LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortString{},VarVm:SortVarMod{},VarXs:SortIdList{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'9:SortAExp{}))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortBExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortVarDeclaration{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule97LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortVarDeclaration{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarV:SortVarMod{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortBool{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortLocCell{},rule98LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarV:SortVarMod{},Var'Unds'0:SortBool{},Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortInt{},\exists{SortGeneratedTopCell{}}(VarMEnv:SortMap{},\exists{SortGeneratedTopCell{}}(VarMStore:SortMap{},\exists{SortGeneratedTopCell{}}(VarV:SortBool{},\exists{SortGeneratedTopCell{}}(VarVm:SortVarMod{},\exists{SortGeneratedTopCell{}}(VarXs:SortIdList{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortBExp{},rule99LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortBool{},VarVm:SortVarMod{},VarXs:SortIdList{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'9:SortBExp{}))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortId{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(VarVm:SortVarMod{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortVarDeclaration{},rule100LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'12:SortEnvCell{},Var'Unds'14:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{}))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortId{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortString{},\exists{SortGeneratedTopCell{}}(VarVm:SortVarMod{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'8:SortVarDeclaration{},rule101LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortString{},VarVm:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'12:SortEnvCell{},Var'Unds'14:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'8:SortVarDeclaration{}))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortKItem{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortEnvCell{},rule102LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI:SortId{},VarL:SortKItem{},VarV:SortAExp{},Var'Unds'0:SortKItem{},Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortLocCell{},Var'Unds'9:SortEnvCell{}))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortInt{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortAExp{},rule103LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortAExp{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortId{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},rule104LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortAExp{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortInt{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},rule105LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortEnvCell{},Var'Unds'12:SortStoreCell{},Var'Unds'2:SortLocCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortString{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortString{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},rule106LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortString{},VarI3:SortId{},VarL:SortKItem{},VarV:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortEnvCell{},Var'Unds'12:SortStoreCell{},Var'Unds'2:SortLocCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortInt{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortAExp{},rule107LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortAExp{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortId{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},rule108LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortAExp{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortInt{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortAExp{},rule109LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortAExp{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortId{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},rule110LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortAExp{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortId{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule111LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortBExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortKItem{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortEnvCell{},rule112LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI:SortId{},VarL:SortKItem{},VarV:SortBExp{},Var'Unds'0:SortKItem{},Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortLocCell{},Var'Unds'9:SortEnvCell{}))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortBExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortId{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule113LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortId{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortEnvCell{},rule114LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortEnvCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortId{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortString{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortEnvCell{},rule115LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortEnvCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule116LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule117LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI1:SortInt{},\exists{SortGeneratedTopCell{}}(VarI2:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule118LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule119LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule120LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI1:SortInt{},\exists{SortGeneratedTopCell{}}(VarI2:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule121LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI1:SortInt{},VarI2:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarV:SortVarMod{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule122LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarV:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortInt{},\exists{SortGeneratedTopCell{}}(VarMEnv:SortMap{},\exists{SortGeneratedTopCell{}}(VarMStore:SortMap{},\exists{SortGeneratedTopCell{}}(VarVm:SortVarMod{},\exists{SortGeneratedTopCell{}}(VarXs:SortIdList{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},rule123LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarVm:SortVarMod{},VarXs:SortIdList{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarV:SortVarMod{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule124LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarV:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortInt{},\exists{SortGeneratedTopCell{}}(VarMEnv:SortMap{},\exists{SortGeneratedTopCell{}}(VarMStore:SortMap{},\exists{SortGeneratedTopCell{}}(VarVm:SortVarMod{},\exists{SortGeneratedTopCell{}}(VarXs:SortIdList{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},rule125LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarVm:SortVarMod{},VarXs:SortIdList{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarV:SortVarMod{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule126LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarV:SortVarMod{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortInt{},\exists{SortGeneratedTopCell{}}(VarMEnv:SortMap{},\exists{SortGeneratedTopCell{}}(VarMStore:SortMap{},\exists{SortGeneratedTopCell{}}(VarVm:SortVarMod{},\exists{SortGeneratedTopCell{}}(VarXs:SortIdList{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},rule127LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarVm:SortVarMod{},VarXs:SortIdList{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarS1:SortStmt{},\exists{SortGeneratedTopCell{}}(VarS2:SortStmt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule128LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS1:SortStmt{},VarS2:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortBExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortBExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule129LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK1:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortBExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortBExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule130LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortBExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortBool{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortLocCell{},rule131LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortBExp{},Var'Unds'1:SortOutCell{},Var'Unds'12:SortBool{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarE:SortBExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule132LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarE:SortBExp{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarS:SortStmt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule133LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarE:SortBExp{},\exists{SortGeneratedTopCell{}}(VarS:SortStmt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortBlock{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule134LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarE:SortBExp{},VarS:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortBlock{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarE:SortBExp{},\exists{SortGeneratedTopCell{}}(VarS1:SortStmt{},\exists{SortGeneratedTopCell{}}(VarS2:SortElseIfStmt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortBlock{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule135LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarE:SortBExp{},VarS1:SortStmt{},VarS2:SortElseIfStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortBlock{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarE1:SortAExp{},\exists{SortGeneratedTopCell{}}(VarE2:SortBExp{},\exists{SortGeneratedTopCell{}}(VarE3:SortAExpMod{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarS:SortStmt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortIdAssigner{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule136LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarE1:SortAExp{},VarE2:SortBExp{},VarE3:SortAExpMod{},VarI:SortId{},VarS:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortIdAssigner{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarB:SortBlock{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule137LHS{}(VarB:SortBlock{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarS:SortStmt{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(VarVs:SortIntList{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortKItem{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortBlock{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortLocCell{},rule138LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI:SortId{},VarL:SortKItem{},VarS:SortStmt{},VarV:SortInt{},VarVs:SortIntList{},Var'Unds'0:SortKItem{},Var'Unds'1:SortOutCell{},Var'Unds'11:SortBlock{},Var'Unds'12:SortEnvCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortLocCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortInt{},\exists{SortGeneratedTopCell{}}(VarMEnv:SortMap{},\exists{SortGeneratedTopCell{}}(VarMStore:SortMap{},\exists{SortGeneratedTopCell{}}(VarS:SortStmt{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(VarVs:SortIntList{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortBlock{},rule139LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarS:SortStmt{},VarV:SortInt{},VarVs:SortIntList{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'9:SortBlock{}))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortThreadCellMap{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarP:SortParams{},\exists{SortGeneratedTopCell{}}(VarS:SortStmt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortLocCell{},rule140LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortThreadCellMap{},VarI:SortId{},VarP:SortParams{},VarS:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortEnvCell{},Var'Unds'2:SortStoreCell{},Var'Unds'3:SortLocCell{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarB:SortBlock{},\exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule141LHS{}(VarB:SortBlock{},VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortBExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortBlock{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule142LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK1:SortBlock{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarS:SortStmt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortBool{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule143LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortBool{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortStmt{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortLocCell{},rule144LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortStmt{},Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortBExp{},\exists{SortGeneratedTopCell{}}(VarK1:SortBlock{},\exists{SortGeneratedTopCell{}}(VarK2:SortElseIfStmt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule145LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK1:SortBlock{},VarK2:SortElseIfStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarS:SortStmt{},\exists{SortGeneratedTopCell{}}(VarSif:SortElseIfStmt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortBool{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule146LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortStmt{},VarSif:SortElseIfStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortBool{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarS:SortStmt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortBlock{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortBool{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortLocCell{},rule147LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortStmt{},Var'Unds'0:SortBlock{},Var'Unds'1:SortOutCell{},Var'Unds'12:SortBool{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarS:SortElseIfStmt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortStmt{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortLocCell{},rule148LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortElseIfStmt{},Var'Unds'0:SortStmt{},Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarS:SortStmt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortStmt{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortLocCell{},rule149LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarS:SortStmt{},Var'Unds'0:SortStmt{},Var'Unds'1:SortOutCell{},Var'Unds'2:SortFunctionsCell{},Var'Unds'3:SortEnvCell{},Var'Unds'4:SortStoreCell{},Var'Unds'5:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortThreadCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar6:SortMap{},\exists{SortGeneratedTopCell{}}(VarFuncId:SortId{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortKItem{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortScopeCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortParamsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortTempCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'6:SortLocCell{},rule150LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortThreadCellMap{},VarDotVar6:SortMap{},VarFuncId:SortId{},VarI:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortKItem{},Var'Unds'1:SortScopeCell{},Var'Unds'15:SortFunctionsCell{},Var'Unds'2:SortParamsCell{},Var'Unds'3:SortTempCell{},Var'Unds'4:SortOutCell{},Var'Unds'5:SortEnvCell{},Var'Unds'6:SortLocCell{})))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortThreadCellMap{},\exists{SortGeneratedTopCell{}}(VarFuncId:SortId{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortInt{},\exists{SortGeneratedTopCell{}}(VarRho:SortMap{},\exists{SortGeneratedTopCell{}}(VarSMap:SortMap{},\exists{SortGeneratedTopCell{}}(VarV1:SortInt{},\exists{SortGeneratedTopCell{}}(VarV2:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortScopeCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortParamsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortTempCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortEnvCell{},rule151LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortThreadCellMap{},VarFuncId:SortId{},VarI:SortId{},VarL:SortInt{},VarRho:SortMap{},VarSMap:SortMap{},VarV1:SortInt{},VarV2:SortInt{},Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Var'Unds'2:SortTempCell{},Var'Unds'3:SortOutCell{},Var'Unds'4:SortEnvCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortThreadCellMap{},\exists{SortGeneratedTopCell{}}(VarFuncId:SortId{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortInt{},\exists{SortGeneratedTopCell{}}(VarRho:SortMap{},\exists{SortGeneratedTopCell{}}(VarSMap:SortMap{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortScopeCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortParamsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortTempCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortEnvCell{},rule152LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortThreadCellMap{},VarFuncId:SortId{},VarI:SortId{},VarL:SortInt{},VarRho:SortMap{},VarSMap:SortMap{},VarV:SortInt{},Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Var'Unds'2:SortTempCell{},Var'Unds'3:SortOutCell{},Var'Unds'4:SortEnvCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortThreadCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar6:SortMap{},\exists{SortGeneratedTopCell{}}(VarFuncId:SortId{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortInt{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortScopeCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortParamsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'15:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'17:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortTempCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortLocCell{},rule153LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortThreadCellMap{},VarDotVar6:SortMap{},VarFuncId:SortId{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Var'Unds'15:SortFunctionsCell{},Var'Unds'17:SortStoreCell{},Var'Unds'2:SortTempCell{},Var'Unds'3:SortOutCell{},Var'Unds'4:SortEnvCell{},Var'Unds'5:SortLocCell{})))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortThreadCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar6:SortMap{},\exists{SortGeneratedTopCell{}}(VarFuncId:SortId{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortScopeCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortParamsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortTempCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortLocCell{},rule154LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortThreadCellMap{},VarDotVar6:SortMap{},VarFuncId:SortId{},VarI1:SortId{},VarI2:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Var'Unds'14:SortFunctionsCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortTempCell{},Var'Unds'3:SortOutCell{},Var'Unds'4:SortEnvCell{},Var'Unds'5:SortLocCell{}))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortThreadCellMap{},\exists{SortGeneratedTopCell{}}(VarDotVar6:SortMap{},\exists{SortGeneratedTopCell{}}(VarFuncId:SortId{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortId{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortScopeCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortParamsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'14:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'16:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortTempCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'5:SortLocCell{},rule155LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortThreadCellMap{},VarDotVar6:SortMap{},VarFuncId:SortId{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortScopeCell{},Var'Unds'1:SortParamsCell{},Var'Unds'14:SortFunctionsCell{},Var'Unds'16:SortStoreCell{},Var'Unds'2:SortTempCell{},Var'Unds'3:SortOutCell{},Var'Unds'4:SortEnvCell{},Var'Unds'5:SortLocCell{})))))))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarS1:SortStmt{},\exists{SortGeneratedTopCell{}}(VarS2:SortStmt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule156LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarS1:SortStmt{},VarS2:SortStmt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{}))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule157LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarP:SortId{},\exists{SortGeneratedTopCell{}}(VarPSet:SortSet{},\exists{SortGeneratedTopCell{}}(VarPs:SortIdList{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortLocCell{},rule158LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarP:SortId{},VarPSet:SortSet{},VarPs:SortIdList{},Var'Unds'0:SortFunctionsCell{},Var'Unds'1:SortEnvCell{},Var'Unds'2:SortStoreCell{},Var'Unds'3:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule159LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarP:SortInt{},\exists{SortGeneratedTopCell{}}(VarPSet:SortSet{},\exists{SortGeneratedTopCell{}}(VarPs:SortIntList{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortLocCell{},rule160LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarP:SortInt{},VarPSet:SortSet{},VarPs:SortIntList{},Var'Unds'0:SortFunctionsCell{},Var'Unds'1:SortEnvCell{},Var'Unds'2:SortStoreCell{},Var'Unds'3:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule161LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarP:SortString{},\exists{SortGeneratedTopCell{}}(VarPSet:SortSet{},\exists{SortGeneratedTopCell{}}(VarPs:SortStringList{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortLocCell{},rule162LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarP:SortString{},VarPSet:SortSet{},VarPs:SortStringList{},Var'Unds'0:SortFunctionsCell{},Var'Unds'1:SortEnvCell{},Var'Unds'2:SortStoreCell{},Var'Unds'3:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortInt{},\exists{SortGeneratedTopCell{}}(VarMEnv:SortMap{},\exists{SortGeneratedTopCell{}}(VarMStore:SortMap{},\exists{SortGeneratedTopCell{}}(VarV:SortString{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},rule163LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortInt{},\exists{SortGeneratedTopCell{}}(VarMEnv:SortMap{},\exists{SortGeneratedTopCell{}}(VarMStore:SortMap{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},rule164LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortId{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule165LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortInt{},\exists{SortGeneratedTopCell{}}(VarMEnv:SortMap{},\exists{SortGeneratedTopCell{}}(VarMStore:SortMap{},\exists{SortGeneratedTopCell{}}(VarV:SortBool{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},rule166LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortBool{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortBExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortId{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule167LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortInt{},\exists{SortGeneratedTopCell{}}(VarMEnv:SortMap{},\exists{SortGeneratedTopCell{}}(VarMStore:SortMap{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},rule168LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortInt{},\exists{SortGeneratedTopCell{}}(VarMEnv:SortMap{},\exists{SortGeneratedTopCell{}}(VarMStore:SortMap{},\exists{SortGeneratedTopCell{}}(VarV:SortString{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},rule169LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortInt{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortAExp{},rule170LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortAExp{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortId{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},rule171LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortAExp{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortInt{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},rule172LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortEnvCell{},Var'Unds'12:SortStoreCell{},Var'Unds'2:SortLocCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortString{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortString{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'12:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},rule173LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortString{},VarI3:SortId{},VarL:SortKItem{},VarV:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortEnvCell{},Var'Unds'12:SortStoreCell{},Var'Unds'2:SortLocCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortInt{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortAExp{},rule174LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortAExp{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortId{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},rule175LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortAExp{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortInt{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortAExp{},rule176LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortInt{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortAExp{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortId{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'10:SortAExp{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'13:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},rule177LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'10:SortAExp{},Var'Unds'11:SortEnvCell{},Var'Unds'13:SortStoreCell{},Var'Unds'2:SortLocCell{})))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortString{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortEnvCell{},rule178LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarL:SortKItem{},VarV:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortEnvCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortEnvCell{},rule179LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortEnvCell{})))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortAExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortId{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule180LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortAExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarI:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortInt{},\exists{SortGeneratedTopCell{}}(VarMEnv:SortMap{},\exists{SortGeneratedTopCell{}}(VarMStore:SortMap{},\exists{SortGeneratedTopCell{}}(VarV:SortBool{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},rule181LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarI:SortId{},VarL:SortInt{},VarMEnv:SortMap{},VarMStore:SortMap{},VarV:SortBool{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarHOLE:SortBExp{},\exists{SortGeneratedTopCell{}}(VarK0:SortId{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortEnvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'3:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'4:SortLocCell{},rule182LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarHOLE:SortBExp{},VarK0:SortId{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'2:SortEnvCell{},Var'Unds'3:SortStoreCell{},Var'Unds'4:SortLocCell{})))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortId{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortEnvCell{},rule183LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortInt{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortEnvCell{}))))))))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarDotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(VarDotVar2:SortK{},\exists{SortGeneratedTopCell{}}(VarDotVar3:SortMap{},\exists{SortGeneratedTopCell{}}(VarDotVar4:SortMap{},\exists{SortGeneratedTopCell{}}(VarI1:SortId{},\exists{SortGeneratedTopCell{}}(VarI2:SortId{},\exists{SortGeneratedTopCell{}}(VarI3:SortId{},\exists{SortGeneratedTopCell{}}(VarL:SortKItem{},\exists{SortGeneratedTopCell{}}(VarV:SortString{},\exists{SortGeneratedTopCell{}}(Var'Unds'0:SortOutCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'1:SortFunctionsCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'11:SortStoreCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'2:SortLocCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'9:SortEnvCell{},rule184LHS{}(VarDotVar0:SortGeneratedCounterCell{},VarDotVar2:SortK{},VarDotVar3:SortMap{},VarDotVar4:SortMap{},VarI1:SortId{},VarI2:SortId{},VarI3:SortId{},VarL:SortKItem{},VarV:SortString{},Var'Unds'0:SortOutCell{},Var'Unds'1:SortFunctionsCell{},Var'Unds'11:SortStoreCell{},Var'Unds'2:SortLocCell{},Var'Unds'9:SortEnvCell{}))))))))))))))), \bottom{SortGeneratedTopCell{}}()))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) []

endmodule [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(572,1,580,9)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/workspace/kt/./kt.k)")]
